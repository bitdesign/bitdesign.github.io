delete from block;
INSERT INTO `block` VALUES   ( '2', '网站建设', 'upload/default.png', '0', '0', '20150626230913', '20150818145658', '1');
INSERT INTO `block` VALUES   ( '10', '美工基础', NULL, '0', '0', '20150818141145', '20150818141145', '1');
INSERT INTO `block` VALUES   ( '7', '游戏创造', NULL, '0', '0', '20150703111103', '20150813101330', '1');

delete from content;
INSERT INTO `content` VALUES   ( '3', '2', '关于BitWord - 响应速度最快的个人博客系统', 'http://www.bit1010.com/upload/95dab8c968fa7630764d9360f3d51720.png', '关于BitWord - 响应速度最快的个人博客系统', '<p></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">BitWord是一款超轻量级blog软件。基于PHP+MySQL+Bootstrap+<span style=\"line-height: 25.6000003814697px;\">summernote+</span><span style=\"line-height: 25.6000003814697px;\">极简主思想设计。</span></p><p style=\"margin-bottom: 16px;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">BitWord极为小巧，包含bootstrap的所有文件，整个项目只有987k。专门适用于那些有简约偏执情节的博主。BitWord非常精美，从前台到后台处处体现着简约实用的原则。</span></p><p style=\"margin-bottom: 16px;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">BitWord基于GPL协议，在GitHub发布，项目地址为</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\"><a href=\"https://github.com/bitdesign/bitword \" target=\"_blank\">https://github.com/bitdesign/bitword </a>.</span><br></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\"><span style=\"line-height: 25.6000003814697px;\">BitWord</span>主要特色:</p>1. 支持全站静态化<p></p><p>2. 多语种(当前支持中文和英语)</p><p>3. 文章分类</p><p>4. 评论</p><p>5. 自定义主题</p><p>6. 自定义显示以及SEO参数配置</p><p>7. 数据备份恢复等功能。</p><p></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\"><br></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">安装注意事项:</p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">如果您使用Apache，请确认开启了<span style=\"line-height: 25.6000003814697px;\">.htaccess</span><span style=\"line-height: 25.6000003814697px;\">支持。</span></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\"><span style=\"line-height: 25.6000003814697px;\">如果您使用Nginx,请将目录中的.htaccess_nginx引入您的nginx.conf ，例如</span></p><p style=\"margin-bottom: 16px; line-height: 1;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">&nbsp;location / {</span></p><p style=\"margin-bottom: 16px; line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">&nbsp;root &nbsp; portal;</span><br></p><p style=\"margin-bottom: 16px; line-height: 1;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; index &nbsp;index.php index.html;</span></p><p style=\"margin-bottom: 16px; line-height: 1;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"font-weight: bold; font-style: italic;\">&nbsp;include &nbsp; &nbsp; /home/www/portal/.htaccess_nginx;</span></span></p><p style=\"margin-bottom: 16px; line-height: 1;\"></p><p style=\"margin-bottom: 16px; line-height: 1;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">将所有文件上传到您的网站并输入您的网址,系统会根据您的浏览器自动选择安装语言开始安装。</p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\"><br><img src=\"http://www.bit1010.com/upload/95dab8c968fa7630764d9360f3d51720.png\" style=\"width: 784px;\"></p><p></p>', 'BitWord是一款超轻量级blog软件。基于PHP+MySQL+Bootstrap+summernote+极简主思想设计。BitWord极为小巧，包含bootstrap的所有文件，整个项目只有987k。专门适用于那些有简约偏执情节的博主。BitWord非常精美，从前台到后台处处体现着简约实用的原则。BitWord基于GPL协议，在GitHub发布，项目地址为https://github.com/…', '20150627012900', '20150810173148', '', '20150812124434', '1', '1', '', '5');
INSERT INTO `content` VALUES   ( '8', '2', '基于URL重写的请求派发器', '', '基于URL重写的请求派发器', '<div>作者对Java式干练利落的Web请求格式情有独钟，<span style=\"line-height: 1.42857143;\">例如:要访问某个类ClassName的某个方法MethodName，我们确定一个URL请求格式: http://www.bf.com/ClassName!MethodName?para1=xxx&amp;para2=yyy</span></div><div>在Java中，这个对这个URL的解析是在自然不过的，在PHP中，我们的框架如何支持呢? 我们通过URL重写完成 。</div><div>&nbsp;</div><div>1.在开始之前，请先搭建好您的PHP开发环境，有任何疑问可自行搜索。</div><div>我们先建立一个controller目录，存放我们的控制类，其他目录后续增加。</div><div><br></div><div>在目录中增加一个类Controller.php ，内容如下:</div><div><br></div><div><span style=\"font-style: italic;\">&lt;?</span></div><div><span style=\"font-style: italic;\">class TestController{</span></div><div><span style=\"font-style: italic;\"><br></span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function __construct(){</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">		</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function test(){</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">		</span></div><div><span style=\"font-style: italic;\">&nbsp; &nbsp; &nbsp; &nbsp; echo \"hi,bit frameword!\"</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span style=\"font-style: italic;\">}</span></div><div><br></div><div>2.正常情况下，应该怎么调用TestController中的test方法呢？ 下面我们在根目录增加一个router.php类，用来统一派发用户的请求, 内容如下:</div><div><br></div><div><br></div><div><span style=\"font-style: italic;\">&lt;?</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$controller = ucfirst($_GET[\'c\']);</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$method &nbsp; &nbsp; = $_GET[\'m\'];</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$controller_name = $controller.\'Controller\';</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>require(\'controller/\'.$controller_name.\'.php\');</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$controller = new $controller_name();</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$controller-&gt;$method();</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><br></div><div><br></div><div>内容很简单，即根据http get方法上送的c参数和m参数，判断调用哪个Controller的哪个方法</div><div><br></div><div>在URL重写前，我们是这样调用的</div><div>http://www.bf.com/router.php?c=Test&amp;m=test</div><div><br></div><div><br></div><div>3.本节的关键问题来了，如何将 http://www.bf.com/router.php?c=Test&amp;m=test 重写成 http://www.bf.com/Test!test</div><div>在Apache中，我们是这样做的</div><div>首先，开启Apache的.htaccess支持并在网站根目录增加一个.htaccess文件，有问题的，请充分利用网络资源，本文不再赘述。.htaccess内容如下:</div><div><br></div><div><span style=\"font-style: italic;\">Options +FollowSymLinks</span></div><div><span style=\"font-style: italic;\">&lt;IfModule mod_rewrite.c&gt;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>RewriteBase /</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>RewriteEngine on</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>RewriteCond %{QUERY_STRING} ^$</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Rewriterule ([a-z]*)!([a-z]*)$ router.php?c=$1&amp;m=$2 [NC]<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></span></div><div><span style=\"font-style: italic;\">&lt;/IfModule&gt;</span></div><div><br></div><div>然后访问 http://www.bf.com/Test!test 看看, 成功了。</div><div>&nbsp;</div><div>&nbsp;</div>', '作者对Java式干练利落的Web请求格式情有独钟，例如:要访问某个类ClassName的某个方法MethodName，我们确定一个URL请求格式: http://www.bf.com/ClassName!MethodName?para1=xxx&amp;para2=yyy在Java中，这个对这个URL的解析是在自然不过的，在PHP中，我们的框架如何支持呢? 我们通过URL重写完成 。1.在开始之前…', '20150629172320', '20150812165420', '', NULL, '1', '1', '', '3');
INSERT INTO `content` VALUES   ( '9', '2', '30行代码打造自己的log4php', '', '30行代码打造自己的log4php', '<div>一切本着极简的思想，于是有了如下的PHP日志类。<a href=\"http://www.bit1010.com/default_9.html\" target=\"_blank\">0配置，日志不分级，可增加自己的debug和error方法。</a></div><div><br></div><div><span style=\"font-style: italic;\">class LogUtil {</span></div><div><span style=\"font-style: italic;\"><br></span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>private &nbsp;$fp;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>public static $logger;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>public static $log_file_name;</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function __construct($file_name, $mode=\"a\") {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>if($this-&gt;fp != null ){</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span> fclose($this-&gt;fp);</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>$this-&gt;fp = fopen($file_name, $mode);</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>static function getLogger($dir=\"log/\"){</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>if (LogUtil::$logger == null || &nbsp;LogUtil::$log_file_name != \"sys_\".date(\'Y_m_d\').\".log\") {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>LogUtil::$log_file_name = \"sys_\".date(\'Y_m_d\').\".log\";</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>LogUtil::$logger = new LogUtil($dir.LogUtil::$log_file_name);;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>return LogUtil::$logger;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span></span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function info( $str ){</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>$curTm = date(\"Y-m-d H:i:s\",time());</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>fwrite($this-&gt;fp, \"[$curTm] $str rn\");</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function release() {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>if ($this-&gt;fp != null) {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>fclose($this-&gt;fp);</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>LogUtil::$logger = null;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function __destruct() {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>if ($this-&gt;fp != null) {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>fclose($this-&gt;fp);</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>LogUtil::$logger = null;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span style=\"font-style: italic;\">}</span></div><div><br></div><div>调用方法:</div><div>require_once(\'LogUtil.php\');</div><div><span style=\"line-height: 1.42857143;\">$logger = LogUtil::getLogger();</span><br></div><div><div><span style=\"line-height: 1.42857143;\">$logger-&gt;info($dsp_img);</span></div><div><span style=\"line-height: 1.42857143;\"><br></span></div><div><span style=\"line-height: 1.42857143;\">显示如&nbsp;</span>sys_2015_06_30.log<br><div>[2015-06-30 01:57:05] hello&nbsp;</div><div>[2015-06-30 10:12:26] finished</div></div></div>', '一切本着极简的思想，于是有了如下的PHP日志类。0配置，日志不分级，可增加自己的debug和error方法。class LogUtil {	private $fp;	public static $logger;	public static $log_file_name;		function __construct($file_name, $mode=\"a\") {		if($this-&gt;fp …', '20150702175657', '20150813142619', '', '20150812124451', '1', '1', '', '13');
INSERT INTO `content` VALUES   ( '20', '7', 'sublime3+quick3.5 完整使用教程（持续更新）', 'http://www.bit1010.com/upload/0a7b8575f81e6d28645879810e6f43a9.png', 'sublime3+quick3.5 完整使用教程（持续更新）', '<div><div>安装完quick3.5和python（注意添加path)后，按以下步骤操作：<span style=\"font-weight: bold;\"><br></span></div><div><span style=\"font-weight: bold;\"><br></span></div><div><span style=\"font-weight: bold;\">1. 安装Sublime3</span></div><div><br></div><div><span style=\"font-weight: bold;\">2. 注册Sublime3 &nbsp; &nbsp; Help--Enter License</span></div><div><a href=\"http://www.bit1010.com/default_20.html\" target=\"_blank\">输入以下内容，包含----- BEGIN LICENSE ----- 和------ END LICENSE ------&nbsp;</a></div><div><br></div><div>----- BEGIN LICENSE -----&nbsp;</div><div>Andrew Weber&nbsp;</div><div>Single User License&nbsp;</div><div>EA7E-855605&nbsp;</div><div>813A03DD 5E4AD9E6 6C0EEB94 BC99798F&nbsp;</div><div>942194A6 02396E98 E62C9979 4BB979FE&nbsp;</div><div>91424C9D A45400BF F6747D88 2FB88078&nbsp;</div><div>90F5CC94 1CDC92DC 8457107A F151657B&nbsp;</div><div>1D22E383 A997F016 42397640 33F41CFC&nbsp;</div><div>E1D0AE85 A0BBD039 0E9C8D55 E1B89D5D&nbsp;</div><div>5CDB7036 E56DE1C0 EFCC0840 650CD3A6&nbsp;</div><div>B98FC99C 8FAC73EE D2B95564 DF450523&nbsp;</div><div>------ END LICENSE ------&nbsp;</div><div><br></div><div><span style=\"font-weight: bold;\"><a href=\"http://www.bit1010.com/default_20.html\" target=\"_blank\">3. 安装模拟器启动插件</a></span></div><div>打开 https://github.com/FloydaGitHub/RunQuickSimulator 点击右侧的Download ZIP</div><div>解压下载的 RunQuickSimulator-master.zip ，得到RunQuickSimulator-master， 改名为RunQuickSimulator</div><div>注意 RunQuickSimulator 应该是顶层文件夹，不应再包含子文件夹</div><div><br></div><div>运行sublime3， Preferences--Browse Packages</div><div>例如我的路径是： C:\\Users\\Administrator\\AppData\\Roaming\\Sublime Text 3\\Packages<br></div><div>将RunQuickSimulator文件整个拷贝到Packages里</div><div><br></div><div><br></div><div><br></div><div><span style=\"font-weight: bold;\">4. 创建项目，例如项目名为CoolShoot</span></div><div>在命令行下切到quick-3.5final的toolscocos2d-consolebin下，例如，我的是</div><div><div>cd E:\\company\\quick-3.5final\\tools\\cocos2d-console\\bin</div><div>cocos new CoolShoot -p com.bit.coolshoot -l lua -d E:\\company\\quickcocos</div></div><div><br></div><div>工程名 -- CoolShoot</div><div>包名 -- com.bit.coolshoot</div><div>工程目录名 -- E:\\company\\quickcocos</div><div><br></div><div><span style=\"font-weight: bold;\"><a href=\"http://www.bit1010.com/default_20.html\" target=\"_blank\">5. 导入CoolShoot项目到Sublime</a></span></div><div>Projects-- Add folder to project</div><div><br></div><div><span style=\"font-weight: bold;\">6. 打开任意lua文件 ，按F1 启动模拟器</span></div><div>&nbsp;<img src=\"http://www.bit1010.com/upload/0a7b8575f81e6d28645879810e6f43a9.png\" style=\"width: 496px;\"></div></div><div><br></div><div><span style=\"font-weight: bold;\"><br></span></div><div><span style=\"font-weight: bold;\">7.智能提示</span></div><div><span style=\"font-weight: bold;\">先安装PackegeControl</span></div><div>下载 <a href=\"https://sublime.wbond.net/Package%20Control.sublime-package\" target=\"_blank\">https://sublime.wbond.net/Package%20Control.sublime-package</a></div><div>将Package Control.sublime-package粘贴到Sublime3安装目录的Packages文件夹</div><div>例如：C:Program Files&nbsp;<span style=\"line-height: 1.42857143;\">(x86)\\Sublime Text 3\\Packages</span></div><div>重启Sublime3</div><div><br></div><div><span style=\"font-weight: bold;\">再安装QuickXDev</span></div><div>Preferences--Packege Control然后选择Packege Control：Install Packege</div><div>输入QuickXDev</div><div>等待完成安装即可</div><div><br></div><div><span style=\"font-weight: bold;\">8. 调整模拟器大小</span></div><div><span style=\"line-height: 1.42857143;\">quick-3.5中模拟器大小不能通过CONFIG_SCREEN_WIDTH和修改了，修改后模拟器大小不变，内部分辨率变化，需要修改工程下的config.json</span><br></div><div><p>\"init_cfg\":{</p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"isLandscape\": true,</p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"isWindowTop\": false,</p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"name\": \"CoolShoot\",</p><p><span style=\"color: rgb(255, 0, 0);\">&nbsp; &nbsp; &nbsp; &nbsp;\"width\": 600,</span></p><p><span style=\"color: rgb(255, 0, 0);\">&nbsp; &nbsp; &nbsp; &nbsp;\"height\": 400,</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"entry\": \"src/main.lua\",</p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"consolePort\": 6010,</p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"uploadPort\": 6020</p><p>&nbsp; &nbsp; },</p><p><br></p><p><span style=\"font-weight: bold;\"><a href=\"http://www.bit1010.com/default_20.html\" target=\"_blank\">9.&nbsp;Sublime Lua代码格式化</a></span></p><p>FormatLua只支持MacOS和Linux， 不支持Windows，可使用Sublime自带的通用格式化功能</p><p>选中要格式化的内容，然后执行</p><p><span style=\"font-family: \'Helvetica Neue\', Helvetica, Tahoma, Arial, STXihei, \'Microsoft YaHei\', 微软雅黑, sans-serif; font-size: 16px; line-height: 27.2000007629395px; text-indent: 16px; background-color: rgb(254, 254, 254);\">Edit &nbsp;-&gt; &nbsp;Line &nbsp;-&gt; &nbsp;Reindent 即可。</span></p></div><div><br></div>', '安装完quick3.5和python（注意添加path)后，按以下步骤操作：1. 安装Sublime32. 注册Sublime3   Help--Enter License输入以下内容，包含----- BEGIN LICENSE ----- 和------ END LICENSE ----------- BEGIN LICENSE -----Andrew WeberSingle User Lice…', '20150715095455', '20150815001000', '', '20150806171111', '1', '1', '', '39');
INSERT INTO `content` VALUES   ( '10', '2', '真正好用的PHP中文RSS 解析器', '', '真正好用的PHP中文RSS 解析器', '<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近需求要用PHP解析RSS源，经百度各种现成的Reader，各种乱码，缓存莫名失效，CDATA处理不干净，没响应等等。最后还是要自己动手丰衣足食, 已正式使用，支持各种规则的，不规则的各种中文网站。支持编码自动转换，缓存，清理CDATA标签等。如有任何问题，可留言。</div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&lt;?php</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">class RssReader{</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; function fetch($url){</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $cacheDir = \"cache/\";</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $cacheName = base64_encode($url);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $fullUrl = $cacheDir.$cacheName;</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $hasCache = is_file($fullUrl);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; if ( $hasCache ){ // 有缓存且缓存的时间不超过6小时则使用缓存</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $t1 = filemtime($fullUrl);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $t2 = time();</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $inter = &nbsp;$t2 - $t1;</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if( $inter &lt; 3600 * 6 ){</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $url = $fullUrl;</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $hasCache = false;</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $buff = \"\";</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $timeout=array(</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'http\'=&gt;array(</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'timeout\'=&gt;20 //超时时间，单位为秒</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; );</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $ctx=stream_context_create($timeout);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $fp = fopen($url,\"r\",false,$ctx);</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; if( !$fp){ return false; }</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; while ( !feof($fp) ) { $buff .= fgets($fp,4096); }</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; fclose($fp);</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; if(strlen($buff) &lt;= 0){</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return false;</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $from_str =\"encoding=\"gb2312\"\";</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $to_str =\"encoding=\"UTF-8\"\";</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $char_set = mb_detect_encoding($buff);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; if( $char_set == \'UTF-8\'){</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; }else{</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $buff = mb_convert_encoding($buff,\'utf-8\',\'gb2312\');</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $buff = str_replace($from_str,$to_str,$buff);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; if ( !$hasCache){</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $cacheFp = fopen($fullUrl, \'w+\');</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fwrite($cacheFp, $buff);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fclose($cacheFp);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; return simplexml_load_string($buff, \'SimpleXMLElement\', LIBXML_NOCDATA );</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; }</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">}</span></div>', '最近需求要用PHP解析RSS源，经百度各种现成的Reader，各种乱码，缓存莫名失效，CDATA处理不干净，没响应等等。最后还是要自己动手丰衣足食, 已正式使用，支持各种规则的，不规则的各种中文网站。支持编码自动转换，缓存，清理CDATA标签等。如有任何问题，可留言。&lt;?phpclass RssReader{  function fetch($url){    $cacheDir = \"ca…', '20150703110738', '20150810173201', '', NULL, '1', '1', '', '3');
INSERT INTO `content` VALUES   ( '12', '7', 'quick-cocosx2d-x中360度摇杆Joystick的设计', '', 'quick-cocosx2d-x中360度摇杆Joystick的设计', '', '', '20150703111853', '20150703111853', '', NULL, '-1', '1', '', '0');
INSERT INTO `content` VALUES   ( '13', '7', '无限地图无限背景的2种设计方法', '/upload/20150717101041177.png', '无限地图无限背景的2种设计方法', '<p>最近在做quick-cocos2dx的一些研究。本文只将自己的思路分享，具体的实现如真的有需要可发邮件或留言。直接进入主题</p>
<p>首先，角色的移动不要使用背景相对运动的方法，因为随着游戏元素的增多，后面的麻烦会越来越多。请使用Camera。使用Camera后，的两种无限背景或底图的设计方法如下</p>
<p>1. &nbsp;使用足够大的三围球体。 球面本身就是闭合的， 本身就是无限，无缝的。</p>
<p>2. 使用动态算法，根据角色的位置，计算背景图层的最新位置，在最新位置创建新的背景 ，典型的就是卷轴算法。</p>
<p>或者二者结合，远景使用球面，近景使用动态背景拼接。</p>
<p><br><img src=\"/upload/20150717101041177.png\" style=\"width: 616px;\"></p>', '最近在做quick-cocos2dx的一些研究。本文只将自己的思路分享，具体的实现如真的有需要可发邮件或留言。直接进入主题首先，角色的移动不要使用背景相对运动的方法，因为随着游戏元素的增多，后面的麻烦会越来越多。请使用Camera。使用Camera后，的两种无限背景或底图的设计方法如下1. 使用足够大的三围球体。 球面本身就是闭合的， 本身就是无限，无缝的。2. 使用动态算法，根据角色的位置，计算…', '20150703112009', '20150821150757', '', NULL, '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '47', '10', '如何将PS中的形状变换为选区', '/upload/20150819100438110.png', '如何将PS中的形状变换为选区', '<p>1. 新建一图层，使用任意形状画出图形</p>
<p>2. 在图层面板，点选路径，在形状上右键，建立选区</p>
<p><br><img src=\"/upload/20150819100438110.png\" style=\"width: 243px;\"></p>
<p>3. 再新建一个图层，选中新图层，在选区内填充即可。</p>', '1. 新建一图层，使用任意形状画出图形2. 在图层面板，点选路径，在形状上右键，建立选区3. 再新建一个图层，选中新图层，在选区内填充即可。', '20150819100618', '20150821150415', '', NULL, '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '16', '2', '选择适合自己的个人博客程序', '', '选择适合自己的个人博客程序', '<p>&nbsp; &nbsp; 对于一个博客作者来说，如何选择系统也是很重要的。就个人观点来看，博客作者可分为3个大类，分别推荐不同的选择</p><p>&nbsp; &nbsp; 1.&nbsp;完全没有程序开发经验的，应选择主流博客程序，主流的博客程序非WordPress莫属，互联网上无数篇文章都是写如何使用Wordpress的。</p><p>&nbsp; &nbsp; 2. 有一编码设计经验的的，还是推荐Wordpress， 可以自己定制，优化一些内容。</p><p>&nbsp; &nbsp; 3. 追求极限性能的，极限的个人体验的。 毫无疑问，只能自己写一个，<a href=\"https://github.com/bitdesign/bitword\" target=\"_blank\">https://github.com/bitdesign/bitword</a>。BitWord是作者业余时间写的, 但求一小撮人用着舒服。如果能给要编写自己博客程序的朋友提供点参考也不胜欣喜。<br></p>', '对于一个博客作者来说，如何选择系统也是很重要的。就个人观点来看，博客作者可分为3个大类，分别推荐不同的选择  1.完全没有程序开发经验的，应选择主流博客程序，主流的博客程序非WordPress莫属，互联网上无数篇文章都是写如何使用Wordpress的。  2. 有一编码设计经验的的，还是推荐Wordpress， 可以自己定制，优化一些内容。  3. 追求极限性能的，极限的个人体验的。 毫无疑问…', '20150706135013', '20150715153702', '', NULL, '-1', '1', '', '0');
INSERT INTO `content` VALUES   ( '40', '7', '完全掌握粒子系统（1） - 自带的一些实现', '', '完全掌握粒子系统（1） - 自带的一些实现', '<div>&nbsp; &nbsp; cocos2dx中分为点粒子系统CCParticleSystemPoint和方形粒子系统CCParticleSystemQuad， quick中的例子系统均以CCParticleSystemQuad为基础,即cc.ParticleSystemQuad。系统本身提供了\"丰富“”的例子效果，爆炸,烟花,火焰,花束,星系,流星,漩涡,雪,烟,太阳,雨等。不用太当真，每次放开一行注释， 把每种自带的效果运行一下看看热闹就可以了，实际中没什么用。</div><div><br></div><div style=\"text-align: justify; background:#eee;\"><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; </span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;<a href=\"http://www.bit1010.com/default_40.html\" target=\"_blank\"> function MainScene:ctor()</a></span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; local emitter = nil</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- 每次放开一行 运行查看效果</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleFlower:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleGalaxy:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleFireworks:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleSpiral:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleSun:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleMeteor:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleFire:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleSmoke:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleExplosion:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleSnow:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; emitter = cc.ParticleRain:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; emitter:setAutoRemoveOnFinish(true)</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; emitter:setPosition(display.cx, display.cy)</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; emitter:addTo(self)</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; end</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\"><br></span></div></div>', 'cocos2dx中分为点粒子系统CCParticleSystemPoint和方形粒子系统CCParticleSystemQuad， quick中的例子系统均以CCParticleSystemQuad为基础,即cc.ParticleSystemQuad。系统本身提供了\"丰富“”的例子效果，爆炸,烟花,火焰,花束,星系,流星,漩涡,雪,烟,太阳,雨等。不用太当真，每次放开一行注释， 把每种自带的效…', '20150812165008', '20150813142526', '', '20150813100930', '1', '1', '', '12');
INSERT INTO `content` VALUES   ( '22', '7', 'quick-cocos remove自身模拟器挂掉问题的解决', '', 'quick-cocos remove自身模拟器挂掉问题的解决', '<p>对于简单node，可以直接使用removeFromParent() 移除自己， 例如</p><p>local sprite = &nbsp; cc.Sprite3D:create(\"rock.obj\")</p><p><span style=\"line-height: 1.42857143;\">sprite</span><span style=\"line-height: 1.42857143;\">&nbsp;</span>:removeFromParent() &nbsp;&nbsp;</p><p>对于注册了帧监听或触摸监听的对象，需要延迟删除自己，即将自己标记为删除，待其他处理完成后移除，具体方法为</p><p>self:runAction(cc.RemoveSelf:create(true))<br></p>', '对于简单node，可以直接使用removeFromParent() 移除自己， 例如local sprite =  cc.Sprite3D:create(\"rock.obj\")sprite:removeFromParent() 对于注册了帧监听或触摸监听的对象，需要延迟删除自己，即将自己标记为删除，待其他处理完成后移除，具体方法为self:runAction(cc.RemoveSelf:creat…', '20150716095812', '20150716100143', '', NULL, '1', '1', '', '3');
INSERT INTO `content` VALUES   ( '27', '2', 'CentOS VPS + squid + stunnel 搭建代理服务器', '', 'CentOS VPS + squid + stunnel 搭建代理服务器', '<div><span style=\"line-height: 1.42857143;\">1. 安装squid</span><br></div><div>yum install squid</div><div><br></div><div>2. 生成SSH证书</div><div><br></div><div>openssl req -new &gt; squid.csr &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[1024]</div><div>openssl rsa -in privkey.pem -out squid.key &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [1024]</div><div>openssl x509 -in squid.csr -out squid.crt -req -signkey squid.key -days 36500</div><div>mv squid* /etc/squid/</div><div>&nbsp;</div><div>3. 配置squid&nbsp;</div><div><br></div><div>vi /etc/squid/squid.conf</div><div>将 http_port 3128 注释掉,替换为</div><div>https_port 443 cert=/etc/squid/squid.crt key=/etc/squid/squid.key</div><div>将 http_access deny all 改为 &nbsp;http_access allow all</div><div><br></div><div>4.启动squid</div><div><br></div><div>cd /usr/sbin/</div><div>./squid -z</div><div>./squid reload</div><div>./squid restart</div><div><br></div><div>netstat -an|grep 443 来查看443的加密代理端口是否启用</div><div><br></div><div><br></div><div><br></div><div>5. 本地客户端配置</div><div><br></div><div>下载stunnel,地址:ftp://ftp.stunnel.org/stunnel/&nbsp;</div><div><br></div><div>安装后启动。在configutation中配置stunnel.conf,把原来内容清空，写入：</div><div><br></div><div>client = yes</div><div>[https]</div><div>accept = 127.0.0.1:8088</div><div>connect = 23.92.26.246:443</div><div><br></div><div>然后reload配置</div><div>配置IE的代理，如果是Chrome可以使用SwitchySharp</div><div>HTTP Proxy:127.0.0.1 &nbsp; Port:8088</div>', '1. 安装squidyum install squid2. 生成SSH证书openssl req -new &gt; squid.csr       [1024]openssl rsa -in privkey.pem -out squid.key       [1024]openssl x509 -in squid.csr -out squid.crt -req -signkey squid.ke…', '20150729130052', '20150729130052', '', NULL, '1', '1', '', '4');
INSERT INTO `content` VALUES   ( '23', '7', 'Sublime3高频使用的快捷键汇总', '', 'Sublime3高频使用的快捷键汇总', '<ul><li>删除当前行 Ctrl+X</li><li>查找替换 Ctrl+Shift+F 其中当前文件</li><li>复制当前行&nbsp;Ctrl+Shift+D&nbsp;</li><li>注释当前行 Ctrl + / &nbsp;</li><li>注释选中的多行&nbsp;Ctrl+Shift+ /</li></ul>', '删除当前行 Ctrl+X查找替换 Ctrl+Shift+F 其中当前文件复制当前行Ctrl+Shift+D注释当前行 Ctrl + / 注释选中的多行Ctrl+Shift+ /', '20150717145628', '20150717145628', '', NULL, '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '28', '7', '设计的一些思路', '', '设计的一些思路', '<p>1. 足够多的回馈</p><p>2. 不确定的惊喜</p><p>目标： 切换精神状态和释放压力</p>', '1. 足够多的回馈2. 不确定的惊喜目标： 切换精神状态和释放压力', '20150803095619', '20150806152836', '', NULL, '-1', '1', '', '0');
INSERT INTO `content` VALUES   ( '29', '2', 'NewLisp Web开发实战(1)–环境搭建', 'upload/20150806152157547.png', 'NewLisp Web开发实战(1)–环境搭建', '<p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><strong>1. 安装newlisp</strong></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">从https://github.com/kosh04/newlisp下载源码包 newlisp-develop.zip</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">安装newlisp的依赖<br>yum install libffi libffi-devel readline-devel</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">编译安装 newlisp<br>unzip newlisp-develop.zip<br>cd newlisp-develop<br>./configure<br>make&nbsp;<br>make install</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><strong>2. 安装newlisp的httpserver – dragonfly</strong></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">从 https://github.com/taoeffect/dragonfly-newlisp 下载 dragonfly-newlisp并解压<br>cd dragonfly-newlisp-master/example-site<br>/newlispServe</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><img src=\"upload/20150806152157547.png\" style=\"width: 428px;\"><br></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><a href=\"http://www.bit1010.com/wp-content/uploads/2015/08/start.png\" data-lightbox=\"image_lg\" style=\"color: rgb(255, 97, 0); text-decoration: underline; outline: none; transition: 0.5s;\"></a></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">访问： http://www.bit1010.com:8080/</p>', '1. 安装newlisp从https://github.com/kosh04/newlisp下载源码包 newlisp-develop.zip安装newlisp的依赖yum install libffi libffi-devel readline-devel编译安装 newlispunzip newlisp-develop.zipcd newlisp-develop./configuremakem…', '20150806152206', '20150806152206', '', '20150812124517', '1', '1', '', '3');
INSERT INTO `content` VALUES   ( '30', '2', 'NewLisp Web开发实战(2)–添加自定义页面', 'upload/20150806152308470.png', 'NewLisp Web开发实战(2)–添加自定义页面', '<p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">1. 添加静态页面</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">在dragonfly-newlisp-master/example-site/views下新建hello.html, 内容如下</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&lt;!DOCTYPE html&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&lt;html&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;head&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;title&gt;newlisp&lt;/title&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;/head&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;body&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp;hello word!</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;/body&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&lt;/html&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">访问测试&nbsp;<br>//http://127.0.0.1:8080/hello</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">http://www.bit1010.com:8080/hello</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><img src=\"upload/20150806152308470.png\" style=\"width: 395px;\"><br></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><a href=\"http://www.bit1010.com/wp-content/uploads/2015/08/hello.png\" data-lightbox=\"image_lg\" style=\"color: rgb(255, 97, 0); text-decoration: underline; outline: none; transition: 0.5s;\"></a></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">2. 添加动态页面<br>动态页面也是添加views下，默认后缀同样为html，以POST一个Form表单为例， test_form.html, 内容如下</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&lt;!DOCTYPE html&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&lt;html&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;head&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;title&gt;newlisp formtest&lt;/title&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;/head&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;body&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;form action=\"/test_form\" method=\"POST\"&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input name=\"userName\" type=\"text\" /&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"submit\" value=\"Subit\" name=\"Submit\" /&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;/form&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;% (when ($POST \"userName\") %&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;&lt;%=($POST \"foo\")%&gt;&lt;/p&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;%)%&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;/body&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&lt;/html&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">http://www.bit1010.com:8080/test_form</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><img src=\"upload/20150806152321693.png\" style=\"width: 386px;\"><br></p>', '1. 添加静态页面在dragonfly-newlisp-master/example-site/views下新建hello.html, 内容如下&lt;!DOCTYPE html&gt;&lt;html&gt;  &lt;head&gt;    &lt;title&gt;newlisp&lt;/title&gt;  &lt;/head&gt;  &lt;body&gt;   hello word!…', '20150806152324', '20150806152324', '', '20150812124525', '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '31', '2', 'windows自带的grep功能', '/upload/20150807163126708.png', 'windows自带的grep功能', '<div>在Linux下查找文件内容，我们有grep的命令，用的那个爽快。可惜的是在windwos下，默认情况下只能在后缀为txt，html等常见后缀的文件内容中进行搜索。下面就通过几步简单设置，添加任意我们要搜索的后缀格式。</div><div><br></div><div>1. 首先设置文件夹选项， 如图</div><div><img src=\"/upload/20150807163126708.png\" style=\"width: 302px;\"></div><div><br></div><div><img src=\"/upload/20150807163134900.png\" style=\"width: 396px;\"><br></div><div><br></div><div>2. 然后设置索引选项，如图</div><div><img src=\"/upload/20150807163151377.png\" style=\"width: 441px;\"></div><div><br></div><div><img src=\"/upload/20150807163203323.png\" style=\"width: 505px;\"></div><div><br></div><div><img src=\"/upload/20150807163214967.png\" style=\"width: 396px;\"></div><div><br></div><div><div>完成以上2步就可以使用windows的带的搜索功能，在人任意后缀为lsp的文件中搜索内容了。根据需要添加自己需要的后缀类型即可。</div></div><div><br></div><div><img src=\"http://www.bit1010.com/upload/20150807163229640.png\" style=\"width: 551px;\"><br></div><div><br></div><div><br></div><div><br></div>', '在Linux下查找文件内容，我们有grep的命令，用的那个爽快。可惜的是在windwos下，默认情况下只能在后缀为txt，html等常见后缀的文件内容中进行搜索。下面就通过几步简单设置，添加任意我们要搜索的后缀格式。1. 首先设置文件夹选项， 如图2. 然后设置索引选项，如图完成以上2步就可以使用windows的带的搜索功能，在人任意后缀为lsp的文件中搜索内容了。根据需要添加自己需要的后缀类型即…', '20150807163259', '20150821145508', '', NULL, '1', '1', '', '6');
INSERT INTO `content` VALUES   ( '39', '7', '完全掌握粒子系统(前言）', '', '完全掌握粒子系统(前言）', '<div>&nbsp; &nbsp;<a href=\"http://www.bit1010.com/default_39.html\" target=\"_blank\"> 粒子系统是做出好游戏的一道天然屏障，是亮点，更是难点。</a>只靠在网络上搜罗别人的特效是没有前途的，必须深刻理解，才能为所欲为。</div><div>&nbsp; &nbsp; 粒子系统在wikipedia中的定义为: A particle system is a technique in game physics and computer graphics that uses a large number of very small sprites or other graphic objects to simulate certain kinds of \"fuzzy\" phenomena. <a href=\"http://www.bit1010.com/default_39.html\" target=\"_blank\">用大量的精灵或其他图形对象模拟出的“毛茸茸的，模糊的，混沌”的对象</a>。关键字为“大量”和“模拟”,所有使用粒子系统的主要内容就是为大量的例子调试各种模拟参数以达到自己想象中的效果。</div><div>&nbsp; &nbsp; 本文以Quick3.5为开发环境，以Cocos2d Particle Builder为粒子编辑器，一起实践学习并最终真正掌握cocos中的粒子系统。</div>', '粒子系统是做出好游戏的一道天然屏障，是亮点，更是难点。只靠在网络上搜罗别人的特效是没有前途的，必须深刻理解，才能为所欲为。  粒子系统在wikipedia中的定义为: A particle system is a technique in game physics and computer graphics that uses a large number of very small spri…', '20150812112605', '20150813142552', '', '20150812124648', '1', '1', '', '6');
INSERT INTO `content` VALUES   ( '48', '10', 'PS画同心圆并将圆心至于画布中央', '/upload/20150819124603643.png', 'PS画同心圆并将圆心至于画布中央', '<div>1. 新建2个层 A 和 B</div>
<div>2. 分别在A层和B层画2个圆，用椭圆选框工具（不要用椭圆工具，这个是形状，需重建选区),画好后直接填充。</div>
<div>3. 同时选中A和B层， 点图层面板左下角的链接图层(链接以后的调整任意一层的位置另外一个层会同时移动)。</div>
<div><img src=\"/upload/20150819124603643.png\" style=\"width: 267px;\"><br></div>
<div><br></div>
<div>4. 点选\"移动工具\",将A和B，分别垂直居中对齐和水平居中对齐</div>
<div><img src=\"/upload/20150819124611457.png\" style=\"width: 538px;\"><br></div>
<div><br></div>
<div>5. 将A，B同时放到画布中央， 同时选择A和背景层，重复4</div>
<div>6. 去除画布空白区域。“图形”--“画布大小”调整。</div>', '1. 新建2个层 A 和 B2. 分别在A层和B层画2个圆，用椭圆选框工具（不要用椭圆工具，这个是形状，需重建选区),画好后直接填充。3. 同时选中A和B层， 点图层面板左下角的链接图层(链接以后的调整任意一层的位置另外一个层会同时移动)。4. 点选\"移动工具\",将A和B，分别垂直居中对齐和水平居中对齐5. 将A，B同时放到画布中央， 同时选择A和背景层，重复46. 去除画布空白区域。“图形”--…', '20150819124619', '20150821150403', '', NULL, '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '49', '7', 'quick-cocos2dx自定义FPS显示信息', '/upload/20150819142145927.png', 'quick-cocos2dx自定义FPS显示信息', '<div>1. 在quick中打开或关闭FPS显示信息有2种方法</div>
<div><br></div>
<div>一是通过修改config.lua中的DEBUG_FPS中的值;</div>
<div>二是通过程序控制cc.Director:getInstance():setDisplayStats(true)&nbsp;</div>
<div><br></div>
<div>2.自定义FPS值及其显示信息</div>
<div><br></div>
<div>自定义帧数，系统默认值为60帧，现修改为每秒50帧</div>
<div><span style=\"line-height: 1.42857143;\">cc.Director:getInstance()</span>:setAnimationInterval(1/50)<br></div>
<div><br></div>
<div>可通过一个Label来显示FPS或其他信息</div>
<div>self.label = cc.ui.UILabel.new({text = \"\", size = 18, color = cc.c3b(71,163,35) })</div>
<div>self.label:align(display.BOTTOM_RIGHT, display.width, display.top - 30):addTo(self)</div>
<div><br></div>
<div>然后在帧更新函数中更新Label的文本</div>
<div>self.label:setString(string.format(\"FPS %.1f\", 1/dt ) )</div>
<div><br></div>
<div><img src=\"/upload/20150819142145927.png\" style=\"width: 254px;\"><br></div>', '1. 在quick中打开或关闭FPS显示信息有2种方法一是通过修改config.lua中的DEBUG_FPS中的值;二是通过程序控制cc.Director:getInstance():setDisplayStats(true)2.自定义FPS值及其显示信息自定义帧数，系统默认值为60帧，现修改为每秒50帧cc.Director:getInstance():setAnimationInterval(…', '20150819142446', '20150821145354', '', NULL, '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '41', '7', '完全掌握粒子系统（2） - 彻底弄清楚每一个参数', '', '完全掌握粒子系统（2） - 彻底弄清楚每一个参数', '<div>&nbsp; &nbsp; 粒子系统中的参数很多，但并不是无限多，只要有足够耐心是可以逐个搞清楚的。本次实验中作者对例子系统的参数进行了粗略统计和分类。共3大类，19个小类，38个参数。以下面的例子描述每个参数的具体含义，如果真要得心应手，光靠看一遍是没用的，必须一个一个参数自己调一遍。</div><div><br></div><div style=\"padding: 0px 20px; background: rgb(238, 238, 238);\"><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">function TestScene:ctor()</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 以指定粒子数目创建粒子系统</div><div style=\"font-size: 1em; line-height: 1.5em;\">local emitter = cc.ParticleSystemQuad:createWithTotalParticles(1000)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--<a href=\"http://www.bit1010.com/default_41.html\" target=\"_blank\">设置粒子属性 共3大类，19个小类，38个参数</a></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 一. 粒子常规属性设置 &nbsp;共6小类 18个参数</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 1. 粒子大小</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 粒子出生时的大小为多少个像素</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartSize(100.0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 出生时大小的浮动值</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartSizeVar(100.0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 粒子消亡时的大小 cc.PARTICLE_START_SIZE_EQUAL_TO_END_SIZE 表示一生中大小不变</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndSize(cc.PARTICLE_START_SIZE_EQUAL_TO_END_SIZE )</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndSizeVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 2. 粒子的颜色</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- cc.c4f 的4个数值分别代表红 绿 蓝 &nbsp;透明度 取值范围都是0到1</div><div style=\"font-size: 1em; line-height: 1.5em;\">其中透明度实际上是可见度，如果为0表示可见度为0，即完全看不到。</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartColor(cc.c4f(0.5, 0.5, 0.5, 1.0))</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartColorVar(cc.c4f(0.5, 0.5, 0.5, 1.0))</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndColor(cc.c4f(0.1, 0.1, 0.1, 0.2))</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndColorVar(cc.c4f(0.1, 0.1, 0.1, 0.2))</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--3. 每个粒子的自转速度</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartSpin(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartSizeVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndSpin(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndSpinVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--4. 粒子的寿命 时间单位：秒</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setLife(2)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setLifeVar(0.3)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--5. 粒子的发射角度 和允许角度的浮动范围</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setAngle(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setAngleVar(360)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--6. 粒子的出生坐标</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setPosition(display.cx, display.cy)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setPosVar(cc.p(0, 0))</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--<a href=\"http://www.bit1010.com/default_41.html\" target=\"_blank\"> 二 .粒子的发射模式 &nbsp;共8小类 14个参数</a></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;--1. 半径模式 从圆心向周围发射粒子</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setEmitterMode(cc.PARTICLE_MODE_RADIUS)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 2. 重力模式 向重力加速度的向量方向发射粒子</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- emitter:setEmitterMode(cc.PARTICLE_MODE_GRAVITY)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">if emitter:getEmitterMode() == cc.PARTICLE_MODE_RADIUS then</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- 半径模式下以下属性生效</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- a. 粒子生成时距离圆心的距离 即起始半径</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setStartRadius(100)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setStartRadiusVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- b. 消亡时的半径</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setEndRadius(500)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setEndRadiusVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- c. 围绕生成点的公转速度</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setRotatePerSecond(10)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setRotatePerSecondVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">else</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- 重力模式下以下属性生效</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- a. 重力的方向</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setGravity(cc.p(0, 0))</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- b. 射出时的速度</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setSpeed(50)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setSpeedVar(10)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- c. 半径加速度</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setRadialAccel(80)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setRadialAccelVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- d. 正切加速度</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setTangentialAccel(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setTangentialAccelVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">end</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;--<a href=\"http://www.bit1010.com/default_41.html\" target=\"_blank\"> 三. 系统属性 共5小类 6个参数</a></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;-- 1. 发射速率，即每秒发射多少个粒子</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;emitter:setEmissionRate(emitter:getTotalParticles() / emitter:getLife())</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 2. 粒子系统的持续时间 -1表示无限时间</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setDuration(-1)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 3. 渲染方式</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; -- 用于系统渲染的OpenGL的渲染函数</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;-- emitter:setBlendFunc(cc.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA))</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;emitter:setBlendFunc(cc.blendFunc(gl.SRC_ALPHA , gl.ONE_MINUS_SRC_ALPHA))</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">blendFunc的2个参数的取值范围都是<br></div><div><span style=\"line-height: 21px;\">gl.ZERO</span></div><div><span style=\"line-height: 21px;\">gl.ONE</span></div><div><span style=\"line-height: 21px;\">gl.SRC_COLOR</span></div><div><span style=\"line-height: 21px;\">gl.ONE_MINUS_SRC_COLOR</span></div><div><span style=\"line-height: 21px;\">gl.SRC_ALPHA</span></div><div><span style=\"line-height: 21px;\">gl.ONE_MINUS_SRC_ALPHA</span></div><div><span style=\"line-height: 21px;\">gl.DST_ALPHA</span></div><div><span style=\"font-size: 1em; line-height: 1.5em;\">gl.ONE_MINUS_DST_ALPHA&nbsp;</span></div><div style=\"font-size: 1em; line-height: 1.5em;\"><div style=\"font-size: 1em; line-height: 1.5em;\">其中，来源混合模式gl.SRC_ALPHA和目标混合模式gl.ONE_MINUS_SRC_ALPHA配合使用,得到的 将会是完全透明的粒子。</div><div style=\"font-size: 1em; line-height: 1.5em;\">而来源混合模式gl.SRC_ALPHA和目标混合模式gl.ONE经常配合使用来生成递增型 的混合效</div></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; -- 是否启用高亮渲染</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; emitter:setBlendAdditive(true)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 4. 粒子的移动方式 &nbsp;具体区别，在后续的调试过程中再做区分</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 自由移动 cc.POSITION_TYPE_FREE &nbsp; &nbsp;0x0</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 一组一组移动 cc.POSITION_TYPE_GROUPED &nbsp;0x2</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 相对移动 cc.POSITION_TYPE_RELATIVE 0x1</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setPositionType(cc.POSITION_TYPE_FREE)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 5. 纹理</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setTexture(cc.Director:getInstance():getTextureCache():addImage(\"a.png\"))</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setAutoRemoveOnFinish(true)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:addTo(self) &nbsp;</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">end</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div></div>', '粒子系统中的参数很多，但并不是无限多，只要有足够耐心是可以逐个搞清楚的。本次实验中作者对例子系统的参数进行了粗略统计和分类。共3大类，19个小类，38个参数。以下面的例子描述每个参数的具体含义，如果真要得心应手，光靠看一遍是没用的，必须一个一个参数自己调一遍。function TestScene:ctor()-- 以指定粒子数目创建粒子系统local emitter = cc.Particle…', '20150813103824', '20150815234313', '', '20150815220329', '1', '1', '', '17');
INSERT INTO `content` VALUES   ( '42', '7', 'SEO问题汇总', '', 'SEO问题汇总', '<p>被盗转</p><p>只有首页被收录</p>', '被盗转只有首页被收录', '20150813232134', '20150813232134', '', NULL, '-1', '1', '', '0');
INSERT INTO `content` VALUES   ( '50', '10', 'PS自动剪裁图像之外的区域', '/upload/20150820123528174.png', 'PS自动剪裁图像之外的区域', '<p>可使用 图像-裁切轻松完成</p><p><img src=\"/upload/20150820123528174.png\" style=\"width: 266px;\"><br></p>', '可使用 图像-裁切轻松完成', '20150820123532', '20150821145125', '', NULL, '1', '1', '', '4');
INSERT INTO `content` VALUES   ( '44', '2', '网站极限优化-百度评分49分提升到95分实战', '/upload/20150815025129456.png', '网站极限优化-百度评分49分提升到95分实战', '<div><br></div>
<div>本文以<a href=\"http://www.bit1010.com\" target=\"_blank\">www.bit1010.com</a>的优化实战为例，打造百度高评分网站。直接切入主题，优化前评分49分，如图:</div>
<div><br></div>
<div><img src=\"/upload/20150815025129456.png\" style=\"width: 560px;\"><br></div>
<div><br></div>
<div><span style=\"font-weight: bold;\"><a href=\"http://www.bit1010.com/default_44.html\" target=\"_blank\">根据诊断建议，总结需要优化的点如下</a></span></div>
<div><span style=\"font-weight: bold;\"><br></span></div>
<div><span style=\"font-weight: bold;\">1. 使用CDN优化JS加载时间</span></div>
<div><span style=\"font-weight: bold;\"><br></span></div>
<div>诊断给出的建议是“合并JS”，主要耗时的是jquery.js，jquery.form.js，分别为2秒和1秒 如图：</div>
<div><br></div>
<div><img src=\"/upload/20150815025149589.png\" style=\"width: 652px;\"><br></div>
<div><br></div>
<div><br></div>
<div>但实际上我们可以看出，合并着这2个公共文件并不科学，那么要减少这2个文件的加载时间的最好方法就是使用CDN，经测试bootstrap的CDN在各个链路都有很好的速度，以下为优化后的截图，速度有了显著的提升。</div>
<div><br></div>
<div><img src=\"/upload/20150815025236942.png\" style=\"width: 634px;\"><br></div>
<div><br></div>
<div> 使用CDN的另一个好处还能降低网站自身的流量压力，何乐而不为呢?</div>
<div><br></div>
<div><span style=\"font-weight: bold;\">2. 启用服务器压缩</span></div>
<div><span style=\"font-weight: bold;\"><br></span></div>
<div>本站用的是PHP和Nginx。开启PHP的压缩，修改php.ini &nbsp;&nbsp;</div>
<div>zlib.output_compression = On&nbsp;</div>
<div>zlib.output_compression_level = 3</div>
<div>修改完后重启PHP，命令： &nbsp;php-fpm &nbsp;restart</div>
<div><br></div>
<div>Nginx则修改 nginx.conf， 最简单的就是在http模块里添加一行</div>
<div>gzip &nbsp;on;</div>
<div>修改完后重新加载配置文件,命令: nginx -s reload</div>
<div><br></div>
<div><span style=\"font-weight: bold;\">3. 检查CSS样式的定义位置</span></div>
<div>务必将css文件和&lt;style&gt;...&lt;/style&gt;定义放到 body标签之前，放到head里。否则页面需要重新渲染，打开速度受到影响。</div>
<div><br></div>
<div><span style=\"font-weight: bold;\">4. 检查JS脚本的定义位置</span></div>
<div>在不打乱整体架构的前提下，尽量将JS放在页面最后。虽然放在最后加载时该block的依然block，但从人机感觉上加载快了很多，可以将对整个页面的显示的影响降到最低。</div>
<div><br></div>
<div><span style=\"font-weight: bold;\">5. 图片大小的定义</span></div>
<div>在确定的图片大小的情况下，定义图片的widht和height属性，减少页面自动计算图片大小的压力。</div>
<div><br></div>
<div>经过以上的几项优化，应该可以有比较大的提升了。这是优化后的分数截图，95分：</div>
<div><br></div>
<div><img src=\"/upload/20150815025327252.png\" style=\"width: 561px;\"><br></div>
<div><br></div>
<div><br></div>
<div><span style=\"font-weight: bold;\"><a href=\"http://www.bit1010.com/default_44.html\" target=\"_blank\">看看剩下的几项</a></span></div>
<div><br></div>
<div>1.&nbsp;<img src=\"/upload/20150815025350771.png\" style=\"line-height: 1.42857143; width: 650px;\"></div>
<div>这里可压缩的数据量实际上非常少，只有33.7k，考虑到如果每次都要压缩，非常麻烦，且实际影响可以忽略，这里的2分果断放弃。</div>
<div><br></div>
<div>2.<img src=\"/upload/20150815025411526.png\" style=\"width: 540px;\"></div>
<div>第一处的js为百度的异步统计代码，因为是异步的，且本代码放到的footer里，footer被很多页面引用，如果为了放到页面最后单独拿到每个页面或为此再加一个公共引用文件，得不偿失。</div>
<div>第二处的js是为了计算页面加载时间用的，这里定义的是起始时间，必须放在页面的最上端。</div>
<div>以上2处扣2分，忍了。</div>
<div><br></div>
<div>3. 还有个1分的扣分项是建议合并js的，由于使用的是外部的cdn上的js，且加载时间已经降到20ms以内了，这个扣分项实际是上分析上的偏颇,直接无视。</div>', '本文以www.bit1010.com的优化实战为例，打造百度高评分网站。直接切入主题，优化前评分49分，如图:根据诊断建议，总结需要优化的点如下1. 使用CDN优化JS加载时间诊断给出的建议是“合并JS”，主要耗时的是jquery.js，jquery.form.js，分别为2秒和1秒 如图：但实际上我们可以看出，合并着这2个公共文件并不科学，那么要减少这2个文件的加载时间的最好方法就是使用CDN，…', '20150815025434', '20150821150516', '', '20150815220314', '1', '1', '', '9');
INSERT INTO `content` VALUES   ( '45', '7', '完全掌握粒子系统（3） - 实战plist文件实现光盾效果', '/upload/20150815235457577.png', '完全掌握粒子系统（3） - 实战plist文件实现光盾效果', '<p>&nbsp; &nbsp; 由于使用程序逐一设置参数，每次执行程序来查看效果速度比较慢，调完一个特效可能要重新运行程序上百次。所有需要使用粒子编辑器，之前提高的粒子编辑器由于需要下载且保存文件的时候经常出问题，这里我们使用在线的粒子编辑器，地址为：</p><p><a href=\"http://www.effecthub.com/particle2dx\" target=\"_blank\">http://www.effecthub.com/particle2dx</a>。 <a href=\"http://www.bit1010.com/default_45.html\" target=\"_blank\">调试粒子务必耐心，仔细思考每个参数每次变化，为什么效果会有这样或那样的变化。</a>使用这个在线工具调试完自己的特效后，点击“导出”即可生成特效的<span style=\"line-height: 1.42857143;\">plist</span><span style=\"line-height: 1.42857143;\">文件, 直接在quick中使用即可。</span><span style=\"line-height: 1.42857143;\">代码：</span></p><p><span style=\"line-height: 1.42857143;\"><br></span></p><div style=\"background:#eee; padding:0px 30px;\"><p><br></p><p>function MainScene:ctor()</p><p>&nbsp; &nbsp; &nbsp; &nbsp; local emitter1 = cc.ParticleSystemQuad:create(\"shiled.plist\")</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;emitter1:pos(display.cx, display.cy):addTo(self)</p><p></p><p>end</p><p><br></p></div><p><a href=\"http://www.bit1010.com/default_45.html\" target=\"_blank\">最终效果如图</a></p><p><img src=\"/upload/20150815235457577.png\" style=\"width: 316px;\"><br></p><p><br></p><p>其中整合文理的plist内容如下, 请仔细核对和<a href=\"http://ww w.bit1010.com/default_41.html\" target=\"_blank\">http://ww w.bit1010.com/default_41.html</a>中每个参数进行核对，弄清楚每个参数的意义</p><p><a href=\"http://www.bit1010.com/default_45.html\" target=\"_blank\">其中，实现椭圆效果的关键参数是</a><span style=\"background-color: rgb(238, 238, 238);\"><a href=\"http://www.bit1010.com/default_45.html\" target=\"_blank\">sourcePositionVariancex,</a></span><span style=\"line-height: 1.42857143; background-color: rgb(238, 238, 238);\"><a href=\"http://www.bit1010.com/default_45.html\" target=\"_blank\">sourcePositionVariancey, 以及粒子大小出生值，消亡值，以及消亡值的变化值。</a></span></p><p><span style=\"background-color: rgb(238, 238, 238);\">emitterType=0表示重力模式，半径模式该值为1</span><span style=\"line-height: 1.42857143; background-color: rgb(238, 238, 238);\"><br></span></p><div style=\"background:#eee;padding:0 30px;\"><p><br></p><p>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p>&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</p><p>&lt;plist version=\"1.0\"&gt;</p><p>&lt;dict&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;angle&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;angleVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;blendFuncDestination&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;integer&gt;1&lt;/integer&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;blendFuncSource&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;integer&gt;770&lt;/integer&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;duration&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;-1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;emitterType&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorAlpha&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorBlue&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorGreen&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0.5&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorRed&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0.5&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorVarianceAlpha&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorVarianceBlue&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorVarianceGreen&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorVarianceRed&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishParticleSize&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;300&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishParticleSizeVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;300&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;gravityx&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;gravityy&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;maxParticles&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;100&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;maxRadius&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;maxRadiusVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;minRadius&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;particleLifespan&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0.5&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;particleLifespanVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;radialAccelVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;radialAcceleration&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;-300&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotatePerSecond&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotatePerSecondVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotationEnd&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotationEndVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0.0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotationStart&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotationStartVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;sourcePositionVariancex&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;15&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;sourcePositionVariancey&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;85&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;sourcePositionx&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;297.99607072691555&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;sourcePositiony&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;514.8919449901769&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;speed&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;speedVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorAlpha&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorBlue&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0.5&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorGreen&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorRed&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorVarianceAlpha&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorVarianceBlue&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorVarianceGreen&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorVarianceRed&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startParticleSize&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;300&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startParticleSizeVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;tangentialAccelVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;tangentialAcceleration&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;textureFileName&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;string&gt;particle_texture.png&lt;/string&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;textureImageData&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;string&gt;H4sIAAAAAAAAAwHSAi39iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAJkSURBVHjaxJeJbusgEEW94S1L//83X18M2MSuLd2pbqc4wZGqRLrKBsyZhQHny7Jk73xVL8xpVhWrcmiB5lX+6GJ5YgQ2owbAm8oIwH1VgKZUmGcRqKGGPgtEQQAzGR8hQ59fAmhJHSAagigJ4E7GPWRXOYC6owAd1JM6wDQPADyMWUqZRMqmAojHp1Vn6EQQEgUNMJLnUjMyJsM49wygBkAPw9dVFwXRkncCIIW3GRgoTQUZn6HxCMAFEFd8TwEQ78X4rHbILoAUmeT+RFG4UhQ6MiIAE4W/UsYFjuVjAIa2nIY4q1R0GFtQWG3E84lqw2GO2QOoCKBVu0BAPgDSU0eUDjjQenNkV/AW/pWChhpMTelo1a64AOKM30vk18GzTHXCNtI/Knz3DFBgsUqBGIjTInXRY1yA9xkVoqW5tVq3pDR9A0hfF5BSARmVnh7RMDCaIdcNgbPBkgzn1Bu+SfIEFSpSBmkxyrMicb0fAEuCZrWnN89veA/4XcakrPcjBWzkTuLjlbfTQPOlBhz+HwkqqPXmPQDdrQItxE1moGof1S74j/8txk8EHhTQrAE8qlwfqS5yukm1x/rAJ9Jiaa6nyATqD78aUVBhFo8b1V4DdTXdCW+IxA1zB4JhiOhZMEWO1HqnvdoHZ4FAMIhV9REF8FiUm0jsYPEJx/Fm/N8OhH90HI9YRHesWbXXZwAShU8qThe7H8YAuJmw5yOd989uRINKRTJAhoF8jbqrHKfeCYdIISZfSq26bk/K+yO3YvfKrVgiwQBHnwt8ynPB25+M8hceTt/ybPhnryJ78+tLgAEAuCFyiQgQB30AAAAASUVORK5CYIJZHYeC0gIAAA==&lt;/string&gt;</p><p>&lt;/dict&gt;</p><p>&lt;/plist&gt;</p></div><div><br></div>', '由于使用程序逐一设置参数，每次执行程序来查看效果速度比较慢，调完一个特效可能要重新运行程序上百次。所有需要使用粒子编辑器，之前提高的粒子编辑器由于需要下载且保存文件的时候经常出问题，这里我们使用在线的粒子编辑器，地址为：http://www.effecthub.com/particle2dx。 调试粒子务必耐心，仔细思考每个参数每次变化，为什么效果会有这样或那样的变化。使用这个在线工具调试完自…', '20150816001111', '20150821145252', '', NULL, '1', '1', '', '14');
INSERT INTO `content` VALUES   ( '46', '10', '使用笔刷制作游戏中的特效', '/upload/20150818145013340.png', '使用笔刷制作游戏中的特效', '<div>使用笔刷制作一些游戏中的效果可以起到事半功倍的效果。根据需要下载需要的笔刷特效，导入PS中即可。特此记<span style=\"line-height: 1.42857143;\">下导入流程，以供参考。</span></div><div><img src=\"/upload/20150818145013340.png\" style=\"width: 212px;\"></div><div><br></div><div><img src=\"/upload/20150818145019254.png\" style=\"width: 386px;\"><br></div><div><br></div><div>有一种gbr后缀格式的笔刷，需要用GIMP（http://www.gimp.org/downloads/）打开，然后导出为png文件。然后在<span style=\"line-height: 1.42857143;\">PS中打开PNG文件 然后选择 编辑-定义画笔预设，即可将png转为PS的笔刷。这里是已经导出的一张喷射光的笔刷</span><span style=\"line-height: 1.42857143;\">png。</span></div><div><img src=\"/upload/20150818145243308.png\" style=\"width: 299px;\"></div><div>调整画笔的角度：</div><div>选择任意一个画笔，然后在 窗口--画笔 中调整</div><div><br></div><div><img src=\"/upload/20150818152221848.png\" style=\"width: 258px;\"><br></div><div><br></div><div><br></div><div><br></div>', '使用笔刷制作一些游戏中的效果可以起到事半功倍的效果。根据需要下载需要的笔刷特效，导入PS中即可。特此记下导入流程，以供参考。有一种gbr后缀格式的笔刷，需要用GIMP（http://www.gimp.org/downloads/）打开，然后导出为png文件。然后在PS中打开PNG文件 然后选择 编辑-定义画笔预设，即可将png转为PS的笔刷。这里是已经导出的一张喷射光的笔刷png。调整画笔的角度：…', '20150818145320', '20150821150440', '', NULL, '1', '1', '', '3');

delete from msgbook;

delete from replies;
INSERT INTO `replies` VALUES   ( '1', '0', '66.249.65.69', '', '20150710074237', '0', '1');

delete from rssfeeds;

delete from siteparas;
INSERT INTO `siteparas` VALUES   ( 'logo', 'logo.png');
INSERT INTO `siteparas` VALUES   ( 'name', '比特核 - 独立游戏人-设计方法');
INSERT INTO `siteparas` VALUES   ( 'keywords', '比特核 独立游戏人');
INSERT INTO `siteparas` VALUES   ( 'description', '比特核 独立游戏人');
INSERT INTO `siteparas` VALUES   ( 'tpl_root', 'view/template/default');
INSERT INTO `siteparas` VALUES   ( 'tpl_name', 'default');
INSERT INTO `siteparas` VALUES   ( 'accstat', 'PHNjcmlwdD4KdmFyIF9obXQgPSBfaG10IHx8IFtdOwooZnVuY3Rpb24oKSB7CiAgdmFyIGhtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CiAgaG0uc3JjID0gIi8vaG0uYmFpZHUuY29tL2htLmpzPzdkMzFkOWZhNjlmODAzNDZkODMxZTcwN2Y2YmExMTQ5IjsKICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKVswXTsgCiAgcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShobSwgcyk7Cn0pKCk7Cjwvc2NyaXB0Pgo=');
INSERT INTO `siteparas` VALUES   ( 'notice', '');
INSERT INTO `siteparas` VALUES   ( 'headimg', '');
INSERT INTO `siteparas` VALUES   ( 'homemaxnum', '50');
INSERT INTO `siteparas` VALUES   ( 'newmaxnum', '10');
INSERT INTO `siteparas` VALUES   ( 'topmaxnum', '');
INSERT INTO `siteparas` VALUES   ( 'commentswitch', '1');
INSERT INTO `siteparas` VALUES   ( 'commentdspnum', '10');

delete from slider;

delete from users;
INSERT INTO `users` VALUES   ( '1', NULL, 'admin', 'Administrator', '1', NULL, 'e941e5415b04c5babd4bda73293ced93', NULL, NULL, NULL, NULL);

delete from words;

