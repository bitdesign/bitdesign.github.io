delete from block;
INSERT INTO `block` VALUES   ( '2', '网站建设', 'upload/default.png', '0', '0', '20150626230913', '20150818145658', '1');
INSERT INTO `block` VALUES   ( '10', '美工基础', NULL, '0', '0', '20150818141145', '20150818141145', '1');
INSERT INTO `block` VALUES   ( '7', '游戏创造', NULL, '0', '0', '20150703111103', '20150813101330', '1');
INSERT INTO `block` VALUES   ( '0', '价值收藏', 'upload/default.png', '0', '0', '20150825104422', '20150825104422', '1');

delete from content;
INSERT INTO `content` VALUES   ( '3', '2', '关于BitWord - 响应速度最快的个人博客系统', 'http://www.bit1010.com/upload/95dab8c968fa7630764d9360f3d51720.png', '关于BitWord - 响应速度最快的个人博客系统', '<p></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">BitWord是一款超轻量级blog软件。基于PHP+MySQL+Bootstrap+<span style=\"line-height: 25.6000003814697px;\">summernote+</span><span style=\"line-height: 25.6000003814697px;\">极简主思想设计。</span></p><p style=\"margin-bottom: 16px;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">BitWord极为小巧，包含bootstrap的所有文件，整个项目只有987k。专门适用于那些有简约偏执情节的博主。BitWord非常精美，从前台到后台处处体现着简约实用的原则。</span></p><p style=\"margin-bottom: 16px;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">BitWord基于GPL协议，在GitHub发布，项目地址为</span><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\"><a href=\"https://github.com/bitdesign/bitword \" target=\"_blank\">https://github.com/bitdesign/bitword </a>.</span><br></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\"><span style=\"line-height: 25.6000003814697px;\">BitWord</span>主要特色:</p>1. 支持全站静态化<p></p><p>2. 多语种(当前支持中文和英语)</p><p>3. 文章分类</p><p>4. 评论</p><p>5. 自定义主题</p><p>6. 自定义显示以及SEO参数配置</p><p>7. 数据备份恢复等功能。</p><p></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\"><br></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">安装注意事项:</p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">如果您使用Apache，请确认开启了<span style=\"line-height: 25.6000003814697px;\">.htaccess</span><span style=\"line-height: 25.6000003814697px;\">支持。</span></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\"><span style=\"line-height: 25.6000003814697px;\">如果您使用Nginx,请将目录中的.htaccess_nginx引入您的nginx.conf ，例如</span></p><p style=\"margin-bottom: 16px; line-height: 1;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">&nbsp;location / {</span></p><p style=\"margin-bottom: 16px; line-height: 1;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">&nbsp;root &nbsp; portal;</span><br></p><p style=\"margin-bottom: 16px; line-height: 1;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; index &nbsp;index.php index.html;</span></p><p style=\"margin-bottom: 16px; line-height: 1;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span style=\"font-weight: bold; font-style: italic;\">&nbsp;include &nbsp; &nbsp; /home/www/portal/.htaccess_nginx;</span></span></p><p style=\"margin-bottom: 16px; line-height: 1;\"></p><p style=\"margin-bottom: 16px; line-height: 1;\"><span style=\"font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\">将所有文件上传到您的网站并输入您的网址,系统会根据您的浏览器自动选择安装语言开始安装。</p><p style=\"margin-bottom: 16px; font-family: \'Helvetica Neue\', Helvetica, \'Segoe UI\', Arial, freesans, sans-serif; font-size: 16px; line-height: 25.6000003814697px;\"><br><img src=\"http://www.bit1010.com/upload/95dab8c968fa7630764d9360f3d51720.png\" style=\"width: 784px;\"></p><p></p>', 'BitWord是一款超轻量级blog软件。基于PHP+MySQL+Bootstrap+summernote+极简主思想设计。BitWord极为小巧，包含bootstrap的所有文件，整个项目只有987k。专门适用于那些有简约偏执情节的博主。BitWord非常精美，从前台到后台处处体现着简约实用的原则。BitWord基于GPL协议，在GitHub发布，项目地址为https://github.com/…', '20150627012900', '20150810173148', '', '20150812124434', '1', '1', '', '7');
INSERT INTO `content` VALUES   ( '8', '2', '基于URL重写的请求派发器', '', '基于URL重写的请求派发器', '<div>作者对Java式干练利落的Web请求格式情有独钟，<span style=\"line-height: 1.42857143;\">例如:要访问某个类ClassName的某个方法MethodName，我们确定一个URL请求格式: http://www.bf.com/ClassName!MethodName?para1=xxx&amp;para2=yyy</span></div><div>在Java中，这个对这个URL的解析是在自然不过的，在PHP中，我们的框架如何支持呢? 我们通过URL重写完成 。</div><div>&nbsp;</div><div>1.在开始之前，请先搭建好您的PHP开发环境，有任何疑问可自行搜索。</div><div>我们先建立一个controller目录，存放我们的控制类，其他目录后续增加。</div><div><br></div><div>在目录中增加一个类Controller.php ，内容如下:</div><div><br></div><div><span style=\"font-style: italic;\">&lt;?</span></div><div><span style=\"font-style: italic;\">class TestController{</span></div><div><span style=\"font-style: italic;\"><br></span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function __construct(){</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">		</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function test(){</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">		</span></div><div><span style=\"font-style: italic;\">&nbsp; &nbsp; &nbsp; &nbsp; echo \"hi,bit frameword!\"</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span style=\"font-style: italic;\">}</span></div><div><br></div><div>2.正常情况下，应该怎么调用TestController中的test方法呢？ 下面我们在根目录增加一个router.php类，用来统一派发用户的请求, 内容如下:</div><div><br></div><div><br></div><div><span style=\"font-style: italic;\">&lt;?</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$controller = ucfirst($_GET[\'c\']);</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$method &nbsp; &nbsp; = $_GET[\'m\'];</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$controller_name = $controller.\'Controller\';</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>require(\'controller/\'.$controller_name.\'.php\');</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$controller = new $controller_name();</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>$controller-&gt;$method();</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><br></div><div><br></div><div>内容很简单，即根据http get方法上送的c参数和m参数，判断调用哪个Controller的哪个方法</div><div><br></div><div>在URL重写前，我们是这样调用的</div><div>http://www.bf.com/router.php?c=Test&amp;m=test</div><div><br></div><div><br></div><div>3.本节的关键问题来了，如何将 http://www.bf.com/router.php?c=Test&amp;m=test 重写成 http://www.bf.com/Test!test</div><div>在Apache中，我们是这样做的</div><div>首先，开启Apache的.htaccess支持并在网站根目录增加一个.htaccess文件，有问题的，请充分利用网络资源，本文不再赘述。.htaccess内容如下:</div><div><br></div><div><span style=\"font-style: italic;\">Options +FollowSymLinks</span></div><div><span style=\"font-style: italic;\">&lt;IfModule mod_rewrite.c&gt;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>RewriteBase /</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>RewriteEngine on</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>RewriteCond %{QUERY_STRING} ^$</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>Rewriterule ([a-z]*)!([a-z]*)$ router.php?c=$1&amp;m=$2 [NC]<span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span></span></div><div><span style=\"font-style: italic;\">&lt;/IfModule&gt;</span></div><div><br></div><div>然后访问 http://www.bf.com/Test!test 看看, 成功了。</div><div>&nbsp;</div><div>&nbsp;</div>', '作者对Java式干练利落的Web请求格式情有独钟，例如:要访问某个类ClassName的某个方法MethodName，我们确定一个URL请求格式: http://www.bf.com/ClassName!MethodName?para1=xxx&amp;para2=yyy在Java中，这个对这个URL的解析是在自然不过的，在PHP中，我们的框架如何支持呢? 我们通过URL重写完成 。1.在开始之前…', '20150629172320', '20150812165420', '', NULL, '1', '1', '', '3');
INSERT INTO `content` VALUES   ( '9', '2', '30行代码打造自己的log4php', '', '30行代码打造自己的log4php', '<div>一切本着极简的思想，于是有了如下的PHP日志类。<a href=\"http://www.bit1010.com/default_9.html\" target=\"_blank\">0配置，日志不分级，可增加自己的debug和error方法。</a></div><div><br></div><div><span style=\"font-style: italic;\">class LogUtil {</span></div><div><span style=\"font-style: italic;\"><br></span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>private &nbsp;$fp;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>public static $logger;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>public static $log_file_name;</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function __construct($file_name, $mode=\"a\") {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>if($this-&gt;fp != null ){</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span> fclose($this-&gt;fp);</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>$this-&gt;fp = fopen($file_name, $mode);</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>static function getLogger($dir=\"log/\"){</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>if (LogUtil::$logger == null || &nbsp;LogUtil::$log_file_name != \"sys_\".date(\'Y_m_d\').\".log\") {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>LogUtil::$log_file_name = \"sys_\".date(\'Y_m_d\').\".log\";</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>LogUtil::$logger = new LogUtil($dir.LogUtil::$log_file_name);;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>return LogUtil::$logger;<span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span></span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span class=\"Apple-tab-span\" style=\"white-space: pre; font-style: italic;\">	</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function info( $str ){</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>$curTm = date(\"Y-m-d H:i:s\",time());</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>fwrite($this-&gt;fp, \"[$curTm] $str rn\");</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function release() {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>if ($this-&gt;fp != null) {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>fclose($this-&gt;fp);</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>LogUtil::$logger = null;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>function __destruct() {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>if ($this-&gt;fp != null) {</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>fclose($this-&gt;fp);</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">			</span>LogUtil::$logger = null;</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">		</span>}</span></div><div><span style=\"font-style: italic;\"><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>}</span></div><div><span style=\"font-style: italic;\">}</span></div><div><br></div><div>调用方法:</div><div>require_once(\'LogUtil.php\');</div><div><span style=\"line-height: 1.42857143;\">$logger = LogUtil::getLogger();</span><br></div><div><div><span style=\"line-height: 1.42857143;\">$logger-&gt;info($dsp_img);</span></div><div><span style=\"line-height: 1.42857143;\"><br></span></div><div><span style=\"line-height: 1.42857143;\">显示如&nbsp;</span>sys_2015_06_30.log<br><div>[2015-06-30 01:57:05] hello&nbsp;</div><div>[2015-06-30 10:12:26] finished</div></div></div>', '一切本着极简的思想，于是有了如下的PHP日志类。0配置，日志不分级，可增加自己的debug和error方法。class LogUtil {	private $fp;	public static $logger;	public static $log_file_name;		function __construct($file_name, $mode=\"a\") {		if($this-&gt;fp …', '20150702175657', '20150813142619', '', '20150812124451', '1', '1', '', '13');
INSERT INTO `content` VALUES   ( '20', '7', 'sublime3+quick3.5 完整使用教程（持续更新）', 'http://www.bit1010.com/upload/0a7b8575f81e6d28645879810e6f43a9.png', 'sublime3+quick3.5 完整使用教程（持续更新）', '<div><div>安装完quick3.5和python（注意添加path)后，按以下步骤操作：<span style=\"font-weight: bold;\"><br></span></div><div><span style=\"font-weight: bold;\"><br></span></div><div><span style=\"font-weight: bold;\">1. 安装Sublime3</span></div><div><br></div><div><span style=\"font-weight: bold;\">2. 注册Sublime3 &nbsp; &nbsp; Help--Enter License</span></div><div><a href=\"http://www.bit1010.com/default_20.html\" target=\"_blank\">输入以下内容，包含----- BEGIN LICENSE ----- 和------ END LICENSE ------&nbsp;</a></div><div><br></div><div>----- BEGIN LICENSE -----&nbsp;</div><div>Andrew Weber&nbsp;</div><div>Single User License&nbsp;</div><div>EA7E-855605&nbsp;</div><div>813A03DD 5E4AD9E6 6C0EEB94 BC99798F&nbsp;</div><div>942194A6 02396E98 E62C9979 4BB979FE&nbsp;</div><div>91424C9D A45400BF F6747D88 2FB88078&nbsp;</div><div>90F5CC94 1CDC92DC 8457107A F151657B&nbsp;</div><div>1D22E383 A997F016 42397640 33F41CFC&nbsp;</div><div>E1D0AE85 A0BBD039 0E9C8D55 E1B89D5D&nbsp;</div><div>5CDB7036 E56DE1C0 EFCC0840 650CD3A6&nbsp;</div><div>B98FC99C 8FAC73EE D2B95564 DF450523&nbsp;</div><div>------ END LICENSE ------&nbsp;</div><div><br></div><div><span style=\"font-weight: bold;\"><a href=\"http://www.bit1010.com/default_20.html\" target=\"_blank\">3. 安装模拟器启动插件</a></span></div><div>打开 https://github.com/FloydaGitHub/RunQuickSimulator 点击右侧的Download ZIP</div><div>解压下载的 RunQuickSimulator-master.zip ，得到RunQuickSimulator-master， 改名为RunQuickSimulator</div><div>注意 RunQuickSimulator 应该是顶层文件夹，不应再包含子文件夹</div><div><br></div><div>运行sublime3， Preferences--Browse Packages</div><div>例如我的路径是： C:\\Users\\Administrator\\AppData\\Roaming\\Sublime Text 3\\Packages<br></div><div>将RunQuickSimulator文件整个拷贝到Packages里</div><div><br></div><div><br></div><div><br></div><div><span style=\"font-weight: bold;\">4. 创建项目，例如项目名为CoolShoot</span></div><div>在命令行下切到quick-3.5final的toolscocos2d-consolebin下，例如，我的是</div><div><div>cd E:\\company\\quick-3.5final\\tools\\cocos2d-console\\bin</div><div>cocos new CoolShoot -p com.bit.coolshoot -l lua -d E:\\company\\quickcocos</div></div><div><br></div><div>工程名 -- CoolShoot</div><div>包名 -- com.bit.coolshoot</div><div>工程目录名 -- E:\\company\\quickcocos</div><div><br></div><div><span style=\"font-weight: bold;\"><a href=\"http://www.bit1010.com/default_20.html\" target=\"_blank\">5. 导入CoolShoot项目到Sublime</a></span></div><div>Projects-- Add folder to project</div><div><br></div><div><span style=\"font-weight: bold;\">6. 打开任意lua文件 ，按F1 启动模拟器</span></div><div>&nbsp;<img src=\"http://www.bit1010.com/upload/0a7b8575f81e6d28645879810e6f43a9.png\" style=\"width: 496px;\"></div></div><div><br></div><div><span style=\"font-weight: bold;\"><br></span></div><div><span style=\"font-weight: bold;\">7.智能提示</span></div><div><span style=\"font-weight: bold;\">先安装PackegeControl</span></div><div>下载 <a href=\"https://sublime.wbond.net/Package%20Control.sublime-package\" target=\"_blank\">https://sublime.wbond.net/Package%20Control.sublime-package</a></div><div>将Package Control.sublime-package粘贴到Sublime3安装目录的Packages文件夹</div><div>例如：C:Program Files&nbsp;<span style=\"line-height: 1.42857143;\">(x86)\\Sublime Text 3\\Packages</span></div><div>重启Sublime3</div><div><br></div><div><span style=\"font-weight: bold;\">再安装QuickXDev</span></div><div>Preferences--Packege Control然后选择Packege Control：Install Packege</div><div>输入QuickXDev</div><div>等待完成安装即可</div><div><br></div><div><span style=\"font-weight: bold;\">8. 调整模拟器大小</span></div><div><span style=\"line-height: 1.42857143;\">quick-3.5中模拟器大小不能通过CONFIG_SCREEN_WIDTH和修改了，修改后模拟器大小不变，内部分辨率变化，需要修改工程下的config.json</span><br></div><div><p>\"init_cfg\":{</p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"isLandscape\": true,</p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"isWindowTop\": false,</p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"name\": \"CoolShoot\",</p><p><span style=\"color: rgb(255, 0, 0);\">&nbsp; &nbsp; &nbsp; &nbsp;\"width\": 600,</span></p><p><span style=\"color: rgb(255, 0, 0);\">&nbsp; &nbsp; &nbsp; &nbsp;\"height\": 400,</span></p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"entry\": \"src/main.lua\",</p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"consolePort\": 6010,</p><p>&nbsp; &nbsp; &nbsp; &nbsp;\"uploadPort\": 6020</p><p>&nbsp; &nbsp; },</p><p><br></p><p><span style=\"font-weight: bold;\"><a href=\"http://www.bit1010.com/default_20.html\" target=\"_blank\">9.&nbsp;Sublime Lua代码格式化</a></span></p><p>FormatLua只支持MacOS和Linux， 不支持Windows，可使用Sublime自带的通用格式化功能</p><p>选中要格式化的内容，然后执行</p><p><span style=\"font-family: \'Helvetica Neue\', Helvetica, Tahoma, Arial, STXihei, \'Microsoft YaHei\', 微软雅黑, sans-serif; font-size: 16px; line-height: 27.2000007629395px; text-indent: 16px; background-color: rgb(254, 254, 254);\">Edit &nbsp;-&gt; &nbsp;Line &nbsp;-&gt; &nbsp;Reindent 即可。</span></p></div><div><br></div>', '安装完quick3.5和python（注意添加path)后，按以下步骤操作：1. 安装Sublime32. 注册Sublime3   Help--Enter License输入以下内容，包含----- BEGIN LICENSE ----- 和------ END LICENSE ----------- BEGIN LICENSE -----Andrew WeberSingle User Lice…', '20150715095455', '20150815001000', '', '20150806171111', '1', '1', '', '50');
INSERT INTO `content` VALUES   ( '10', '2', '真正好用的PHP中文RSS 解析器', '', '真正好用的PHP中文RSS 解析器', '<div>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;最近需求要用PHP解析RSS源，经百度各种现成的Reader，各种乱码，缓存莫名失效，CDATA处理不干净，没响应等等。最后还是要自己动手丰衣足食, 已正式使用，支持各种规则的，不规则的各种中文网站。支持编码自动转换，缓存，清理CDATA标签等。如有任何问题，可留言。</div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&lt;?php</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">class RssReader{</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; function fetch($url){</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $cacheDir = \"cache/\";</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $cacheName = base64_encode($url);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $fullUrl = $cacheDir.$cacheName;</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $hasCache = is_file($fullUrl);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; if ( $hasCache ){ // 有缓存且缓存的时间不超过6小时则使用缓存</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $t1 = filemtime($fullUrl);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $t2 = time();</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $inter = &nbsp;$t2 - $t1;</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if( $inter &lt; 3600 * 6 ){</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $url = $fullUrl;</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }else{</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $hasCache = false;</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $buff = \"\";</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $timeout=array(</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'http\'=&gt;array(</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; \'timeout\'=&gt;20 //超时时间，单位为秒</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; );</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $ctx=stream_context_create($timeout);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $fp = fopen($url,\"r\",false,$ctx);</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; if( !$fp){ return false; }</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; while ( !feof($fp) ) { $buff .= fgets($fp,4096); }</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; fclose($fp);</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; if(strlen($buff) &lt;= 0){</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return false;</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $from_str =\"encoding=\"gb2312\"\";</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $to_str =\"encoding=\"UTF-8\"\";</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; $char_set = mb_detect_encoding($buff);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; if( $char_set == \'UTF-8\'){</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; }else{</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $buff = mb_convert_encoding($buff,\'utf-8\',\'gb2312\');</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $buff = str_replace($from_str,$to_str,$buff);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"color: rgb(8, 82, 148);\"><br></span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; if ( !$hasCache){</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $cacheFp = fopen($fullUrl, \'w+\');</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fwrite($cacheFp, $buff);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; fclose($cacheFp);</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; &nbsp; &nbsp; return simplexml_load_string($buff, \'SimpleXMLElement\', LIBXML_NOCDATA );</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">&nbsp; &nbsp; }</span></div><div><span style=\"font-size: 12px; color: rgb(8, 82, 148);\">}</span></div>', '最近需求要用PHP解析RSS源，经百度各种现成的Reader，各种乱码，缓存莫名失效，CDATA处理不干净，没响应等等。最后还是要自己动手丰衣足食, 已正式使用，支持各种规则的，不规则的各种中文网站。支持编码自动转换，缓存，清理CDATA标签等。如有任何问题，可留言。&lt;?phpclass RssReader{  function fetch($url){    $cacheDir = \"ca…', '20150703110738', '20150810173201', '', NULL, '1', '1', '', '4');
INSERT INTO `content` VALUES   ( '13', '7', '无限地图无限背景的2种设计方法', '/upload/20150717101041177.png', '无限地图无限背景的2种设计方法', '<p>最近在做quick-cocos2dx的一些研究。本文只将自己的思路分享，具体的实现如真的有需要可发邮件或留言。直接进入主题</p>
<p>首先，角色的移动不要使用背景相对运动的方法，因为随着游戏元素的增多，后面的麻烦会越来越多。请使用Camera。使用Camera后，的两种无限背景或底图的设计方法如下</p>
<p>1. &nbsp;使用足够大的三围球体。 球面本身就是闭合的， 本身就是无限，无缝的。</p>
<p>2. 使用动态算法，根据角色的位置，计算背景图层的最新位置，在最新位置创建新的背景 ，典型的就是卷轴算法。</p>
<p>或者二者结合，远景使用球面，近景使用动态背景拼接。</p>
<p><br><img src=\"/upload/20150717101041177.png\" style=\"width: 616px;\"></p>', '最近在做quick-cocos2dx的一些研究。本文只将自己的思路分享，具体的实现如真的有需要可发邮件或留言。直接进入主题首先，角色的移动不要使用背景相对运动的方法，因为随着游戏元素的增多，后面的麻烦会越来越多。请使用Camera。使用Camera后，的两种无限背景或底图的设计方法如下1. 使用足够大的三围球体。 球面本身就是闭合的， 本身就是无限，无缝的。2. 使用动态算法，根据角色的位置，计算…', '20150703112009', '20150821150757', '', NULL, '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '47', '10', '如何将PS中的形状变换为选区', '/upload/20150819100438110.png', '如何将PS中的形状变换为选区', '<p>1. 新建一图层，使用任意形状画出图形</p>
<p>2. 在图层面板，点选路径，在形状上右键，建立选区</p>
<p><br><img src=\"/upload/20150819100438110.png\" style=\"width: 243px;\"></p>
<p>3. 再新建一个图层，选中新图层，在选区内填充即可。</p>', '1. 新建一图层，使用任意形状画出图形2. 在图层面板，点选路径，在形状上右键，建立选区3. 再新建一个图层，选中新图层，在选区内填充即可。', '20150819100618', '20150821150415', '', NULL, '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '40', '7', '完全掌握粒子系统（1） - 自带的一些实现', '', '完全掌握粒子系统（1） - 自带的一些实现', '<div>&nbsp; &nbsp; cocos2dx中分为点粒子系统CCParticleSystemPoint和方形粒子系统CCParticleSystemQuad， quick中的例子系统均以CCParticleSystemQuad为基础,即cc.ParticleSystemQuad。系统本身提供了\"丰富“”的例子效果，爆炸,烟花,火焰,花束,星系,流星,漩涡,雪,烟,太阳,雨等。不用太当真，每次放开一行注释， 把每种自带的效果运行一下看看热闹就可以了，实际中没什么用。</div><div><br></div><div style=\"text-align: justify; background:#eee;\"><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; </span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;<a href=\"http://www.bit1010.com/default_40.html\" target=\"_blank\"> function MainScene:ctor()</a></span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; local emitter = nil</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- 每次放开一行 运行查看效果</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleFlower:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleGalaxy:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleFireworks:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleSpiral:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleSun:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleMeteor:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleFire:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleSmoke:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleExplosion:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; -- emitter = cc.ParticleSnow:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; emitter = cc.ParticleRain:create()</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; emitter:setAutoRemoveOnFinish(true)</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; emitter:setPosition(display.cx, display.cy)</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; &nbsp; &nbsp; emitter:addTo(self)</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp;&nbsp;</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\">&nbsp; &nbsp; end</span></div><div style=\"line-height: 1.2;\"><span style=\"color: rgb(57, 132, 198);\"><br></span></div></div>', 'cocos2dx中分为点粒子系统CCParticleSystemPoint和方形粒子系统CCParticleSystemQuad， quick中的例子系统均以CCParticleSystemQuad为基础,即cc.ParticleSystemQuad。系统本身提供了\"丰富“”的例子效果，爆炸,烟花,火焰,花束,星系,流星,漩涡,雪,烟,太阳,雨等。不用太当真，每次放开一行注释， 把每种自带的效…', '20150812165008', '20150813142526', '', '20150813100930', '1', '1', '', '12');
INSERT INTO `content` VALUES   ( '22', '7', 'quick-cocos remove自身模拟器挂掉问题的解决', '', 'quick-cocos remove自身模拟器挂掉问题的解决', '<p>对于简单node，可以直接使用removeFromParent() 移除自己， 例如</p><p>local sprite = &nbsp; cc.Sprite3D:create(\"rock.obj\")</p><p><span style=\"line-height: 1.42857143;\">sprite</span><span style=\"line-height: 1.42857143;\">&nbsp;</span>:removeFromParent() &nbsp;&nbsp;</p><p>对于注册了帧监听或触摸监听的对象，需要延迟删除自己，即将自己标记为删除，待其他处理完成后移除，具体方法为</p><p>self:runAction(cc.RemoveSelf:create(true))<br></p>', '对于简单node，可以直接使用removeFromParent() 移除自己， 例如local sprite =  cc.Sprite3D:create(\"rock.obj\")sprite:removeFromParent() 对于注册了帧监听或触摸监听的对象，需要延迟删除自己，即将自己标记为删除，待其他处理完成后移除，具体方法为self:runAction(cc.RemoveSelf:creat…', '20150716095812', '20150716100143', '', NULL, '1', '1', '', '3');
INSERT INTO `content` VALUES   ( '27', '2', 'CentOS VPS + squid + stunnel 搭建代理服务器', '', 'CentOS VPS + squid + stunnel 搭建代理服务器', '<div><span style=\"line-height: 1.42857143;\">1. 安装squid</span><br></div><div>yum install squid</div><div><br></div><div>2. 生成SSH证书</div><div><br></div><div>openssl req -new &gt; squid.csr &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;[1024]</div><div>openssl rsa -in privkey.pem -out squid.key &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; [1024]</div><div>openssl x509 -in squid.csr -out squid.crt -req -signkey squid.key -days 36500</div><div>mv squid* /etc/squid/</div><div>&nbsp;</div><div>3. 配置squid&nbsp;</div><div><br></div><div>vi /etc/squid/squid.conf</div><div>将 http_port 3128 注释掉,替换为</div><div>https_port 443 cert=/etc/squid/squid.crt key=/etc/squid/squid.key</div><div>将 http_access deny all 改为 &nbsp;http_access allow all</div><div><br></div><div>4.启动squid</div><div><br></div><div>cd /usr/sbin/</div><div>./squid -z</div><div>./squid reload</div><div>./squid restart</div><div><br></div><div>netstat -an|grep 443 来查看443的加密代理端口是否启用</div><div><br></div><div><br></div><div><br></div><div>5. 本地客户端配置</div><div><br></div><div>下载stunnel,地址:ftp://ftp.stunnel.org/stunnel/&nbsp;</div><div><br></div><div>安装后启动。在configutation中配置stunnel.conf,把原来内容清空，写入：</div><div><br></div><div>client = yes</div><div>[https]</div><div>accept = 127.0.0.1:8088</div><div>connect = 目标IP:443</div><div><br></div><div>然后reload配置</div><div>配置IE的代理，如果是Chrome可以使用SwitchySharp</div><div>HTTP Proxy:127.0.0.1 &nbsp; Port:8088</div>', '1. 安装squidyum install squid2. 生成SSH证书openssl req -new &gt; squid.csr       [1024]openssl rsa -in privkey.pem -out squid.key       [1024]openssl x509 -in squid.csr -out squid.crt -req -signkey squid.ke…', '20150729130052', '20150827135151', '', NULL, '1', '1', '', '8');
INSERT INTO `content` VALUES   ( '23', '7', 'Sublime3高频使用的快捷键汇总', '', 'Sublime3高频使用的快捷键汇总', '<ul><li>删除当前行 Ctrl+X</li><li>查找替换 Ctrl+Shift+F 其中当前文件</li><li>复制当前行&nbsp;Ctrl+Shift+D&nbsp;</li><li>注释当前行 Ctrl + / &nbsp;</li><li>注释选中的多行&nbsp;Ctrl+Shift+ /</li></ul>', '删除当前行 Ctrl+X查找替换 Ctrl+Shift+F 其中当前文件复制当前行Ctrl+Shift+D注释当前行 Ctrl + / 注释选中的多行Ctrl+Shift+ /', '20150717145628', '20150717145628', '', NULL, '1', '1', '', '3');
INSERT INTO `content` VALUES   ( '29', '2', 'NewLisp Web开发实战(1)–环境搭建', 'upload/20150806152157547.png', 'NewLisp Web开发实战(1)–环境搭建', '<p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><strong>1. 安装newlisp</strong></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">从https://github.com/kosh04/newlisp下载源码包 newlisp-develop.zip</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">安装newlisp的依赖<br>yum install libffi libffi-devel readline-devel</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">编译安装 newlisp<br>unzip newlisp-develop.zip<br>cd newlisp-develop<br>./configure<br>make&nbsp;<br>make install</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><strong>2. 安装newlisp的httpserver – dragonfly</strong></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">从 https://github.com/taoeffect/dragonfly-newlisp 下载 dragonfly-newlisp并解压<br>cd dragonfly-newlisp-master/example-site<br>/newlispServe</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><img src=\"upload/20150806152157547.png\" style=\"width: 428px;\"><br></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><a href=\"http://www.bit1010.com/wp-content/uploads/2015/08/start.png\" data-lightbox=\"image_lg\" style=\"color: rgb(255, 97, 0); text-decoration: underline; outline: none; transition: 0.5s;\"></a></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">访问： http://www.bit1010.com:8080/</p>', '1. 安装newlisp从https://github.com/kosh04/newlisp下载源码包 newlisp-develop.zip安装newlisp的依赖yum install libffi libffi-devel readline-devel编译安装 newlispunzip newlisp-develop.zipcd newlisp-develop./configuremakem…', '20150806152206', '20150806152206', '', '20150812124517', '1', '1', '', '3');
INSERT INTO `content` VALUES   ( '30', '2', 'NewLisp Web开发实战(2)–添加自定义页面', 'upload/20150806152308470.png', 'NewLisp Web开发实战(2)–添加自定义页面', '<p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">1. 添加静态页面</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">在dragonfly-newlisp-master/example-site/views下新建hello.html, 内容如下</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&lt;!DOCTYPE html&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&lt;html&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;head&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;title&gt;newlisp&lt;/title&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;/head&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;body&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp;hello word!</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;/body&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&lt;/html&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">访问测试&nbsp;<br>//http://127.0.0.1:8080/hello</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">http://www.bit1010.com:8080/hello</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><img src=\"upload/20150806152308470.png\" style=\"width: 395px;\"><br></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><a href=\"http://www.bit1010.com/wp-content/uploads/2015/08/hello.png\" data-lightbox=\"image_lg\" style=\"color: rgb(255, 97, 0); text-decoration: underline; outline: none; transition: 0.5s;\"></a></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">2. 添加动态页面<br>动态页面也是添加views下，默认后缀同样为html，以POST一个Form表单为例， test_form.html, 内容如下</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&lt;!DOCTYPE html&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&lt;html&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;head&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;title&gt;newlisp formtest&lt;/title&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;/head&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;body&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;form action=\"/test_form\" method=\"POST\"&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input name=\"userName\" type=\"text\" /&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;input type=\"submit\" value=\"Subit\" name=\"Submit\" /&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;/form&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;% (when ($POST \"userName\") %&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;p&gt;&lt;%=($POST \"foo\")%&gt;&lt;/p&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &nbsp; &nbsp; &lt;%)%&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&nbsp; &nbsp; &lt;/body&gt;</span><br><span style=\"background-color: rgb(211, 211, 211);\">&lt;/html&gt;</span></p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\">http://www.bit1010.com:8080/test_form</p><p style=\"margin-bottom: 15px; padding: 0px; font-family: Verdana, \'Microsoft YaHei\'; color: rgb(69, 69, 69); font-size: 16px; line-height: 30px;\"><img src=\"upload/20150806152321693.png\" style=\"width: 386px;\"><br></p>', '1. 添加静态页面在dragonfly-newlisp-master/example-site/views下新建hello.html, 内容如下&lt;!DOCTYPE html&gt;&lt;html&gt;  &lt;head&gt;    &lt;title&gt;newlisp&lt;/title&gt;  &lt;/head&gt;  &lt;body&gt;   hello word!…', '20150806152324', '20150806152324', '', '20150812124525', '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '31', '2', 'windows自带的grep功能', '/upload/20150807163126708.png', 'windows自带的grep功能', '<div>在Linux下查找文件内容，我们有grep的命令，用的那个爽快。可惜的是在windwos下，默认情况下只能在后缀为txt，html等常见后缀的文件内容中进行搜索。下面就通过几步简单设置，添加任意我们要搜索的后缀格式。</div><div><br></div><div>1. 首先设置文件夹选项， 如图</div><div><img src=\"/upload/20150807163126708.png\" style=\"width: 302px;\"></div><div><br></div><div><img src=\"/upload/20150807163134900.png\" style=\"width: 396px;\"><br></div><div><br></div><div>2. 然后设置索引选项，如图</div><div><img src=\"/upload/20150807163151377.png\" style=\"width: 441px;\"></div><div><br></div><div><img src=\"/upload/20150807163203323.png\" style=\"width: 505px;\"></div><div><br></div><div><img src=\"/upload/20150807163214967.png\" style=\"width: 396px;\"></div><div><br></div><div><div>完成以上2步就可以使用windows的带的搜索功能，在人任意后缀为lsp的文件中搜索内容了。根据需要添加自己需要的后缀类型即可。</div></div><div><br></div><div><img src=\"http://www.bit1010.com/upload/20150807163229640.png\" style=\"width: 551px;\"><br></div><div><br></div><div><br></div><div><br></div>', '在Linux下查找文件内容，我们有grep的命令，用的那个爽快。可惜的是在windwos下，默认情况下只能在后缀为txt，html等常见后缀的文件内容中进行搜索。下面就通过几步简单设置，添加任意我们要搜索的后缀格式。1. 首先设置文件夹选项， 如图2. 然后设置索引选项，如图完成以上2步就可以使用windows的带的搜索功能，在人任意后缀为lsp的文件中搜索内容了。根据需要添加自己需要的后缀类型即…', '20150807163259', '20150821145508', '', NULL, '1', '1', '', '8');
INSERT INTO `content` VALUES   ( '52', '0', '一篇文章让你知道什么是运营！', 'http://www.yixieshi.com/images/yixieshi_wx.gif', '一篇文章让你知道什么是运营！', '
				<center><img border=\"1\" alt=\"一篇文章让你知道什么是运营！\" src=\"http://img.yixieshi.com/1159434547-0.png!680\" width=\"655\" height=\"300\"></center><p>　　相信这本书是大部分运营的启蒙书，最近重读知乎大神张亮的《从零开始学运营》颇有收获。</p><p>　　现整理如下，愿与苦逼运营党一起学习交流。</p><center><img border=\"1\" alt=\"一篇文章让你知道什么是运营！\" src=\"http://img.yixieshi.com/115943B96-1.jpg!680\" width=\"640\" height=\"271\"></center><p><strong>　　1、什么是运营</strong></p><p>　　一切能够帮助产品进行推广、促进用户使用、提高用户认知的手段都是运营。</p><p>　　仅限于互联网产品运营。</p><p><strong>　　1.1运营的核心目的</strong></p><p>　　根据产品类型的不同，运营的方式也不尽相同，但核心的目的只有一个：</p><p>　　让产品活的更好、更久。</p><p>　　所谓“活的更好”，是通过推广、教育、活动等一系列手段让产品的各项数据获得提升;</p><p>　　而所谓“活的更久”，是通过数据分析和用户行为研究让产品的功能不断完善、易用性不断提升，从而获得更长的产品生命周期。</p><p>　　运营一方面去推广产品、促进用户使用，另一方面，利用反馈使产品更加完善。</p><p><strong>　　1.2运营的核心任务</strong></p><p>　　流量建设</p><p>　　通过各种推广、扩散、营销、活动，提升网站的流量指标，我们通常所说的PV、UV、注册转化、SEO都在这个环节。</p><p>　　每个环节都相当于漏斗。大流量能带来多的用户;提高转化率也行</p><p>　　用户维系</p><p>　　有了流量，有了用户之后，运营的大部分工作就在于如何去持续有效的推动用户的活跃与留存，并且从中发现有价值甚至高价值的用户，这些用户会持续的为网站与产品带来价值、产生收益，让我们的网站和产品可以存活下去，并且活的有质量。</p><p><strong>　　1.3入门几要素</strong></p><p>　　心态</p><p>　　运营和产品联系紧密，是一体两面，没有产品无法运营，也没有产品好到不需要运营;</p><p>　　运营的高级状态是自运营;</p><p>　　运营中的一些手段可以复用;</p><p>　　多观察生活中的细节，会有所感悟、有所收获。</p><p>　　思维</p><p>　　发散性思维</p><p>　　比如要拉动注册用户量可以考虑：</p><p>　　已有用户邀请用户并奖励2者，</p><p>　　对潜在感兴趣用户进行注册奖励</p><p>　　降低不注册者的权限，如果产品支持可以在多个点提醒注册</p><p>　　现有产品的注册流程是否可以优化以提高用户完成注册率</p><p>　　预注册：为每个进入的用户保留一个ID，用户只要填写昵称和设计密码即可并获得奖励</p><p>　　逆向思维</p><p>　　比如用户流失率增高，除了可以开展活动针对流失用户，给予奖励，促进没流失的活跃</p><p>　　还可以分析流失用户类型，是否有共同点，找出原因，去除这些因素，设置活动针对流失用户;比如送礼品并告知之前阻碍没有了</p><p>　　结构化思维</p><p>　　将常用手段模块化、规范化。</p><p>　　不是针对具体问题，而是汇总让系统来解决类似问题。</p><p>　　比如想加快活动运营的频率，增加人员，多设计活动并不是最好的解决方法。</p><p>　　更有效的方法是：把活动分类，通过模板解决设计问题，使一套程序可以同时跑多个活动;</p><p>　　或者看运营目标，以及用户行为数据，是否能够做一套工具帮助我们快速上线活动。</p><p>　　当然，这些思维不只是运营有用，很多方面都需要用到。</p><p>　　技能</p><p>　　对数据敏感</p><p>　　想象力和创造力</p><p>　　口头表达、文字表达</p><p>　　沟通能力</p><p>　　执行力</p><p>　　运营可以分为内容运营、活动运营、用户运营，其中用户运营是落脚点。</p><p><strong>　　2、内容运营</strong></p><p>　　不管是电商、门户、企业、政府、搜索引擎、社区还是bbs，都有内容。他们的区别只是，内容的类型不一样，展现的方式不一样，带给受众的感知不一样，可以参与和互动的方法不一样。</p><p>　　内容运营是指通过创造、编辑、组织、呈现网站内容，从而提高互联网产品的内容价值，制造出对用户的黏着、活跃产生一定的促进作用的运营内容。</p><p>　　内容运营的核心是：</p><p>　　持续制作对用户有价值的内容，保证用户可以在站点获取这些信息</p><p>　　根据KPI降低或者提高用户获取内容的成本</p><p>　　协助网站和产品获利</p><p>　　手段</p><p>　　采集</p><p>　　创作</p><p>　　编辑</p><p>　　审核</p><p>　　推荐</p><p>　　专题</p><p>　　推送</p><p>　　所以内容运营的工作有：</p><p>　　内容采集与创造</p><p>　　内容的呈现与管理</p><p>　　内容的扩散和传导</p><p>　　内容的效果与评估</p><p><strong>　　2.1运营初期的内容运营</strong></p><center><img border=\"1\" alt=\"一篇文章让你知道什么是运营！\" src=\"http://img.yixieshi.com/11594311J-2.jpg!680\" width=\"514\" height=\"532\"></center><p><strong>　　2.2持续运营中的内容运营</strong></p><center><img border=\"1\" alt=\"一篇文章让你知道什么是运营！\" src=\"http://img.yixieshi.com/1159431E0-3.jpg!680\" width=\"554\" height=\"535\"></center><center><img border=\"1\" alt=\"一篇文章让你知道什么是运营！\" src=\"http://img.yixieshi.com/1159433262-4.jpg!680\" width=\"640\" height=\"290\"></center><p><strong>　　3、活动运营</strong></p><p>　　活动是用户感知最明显的。具有结构化思维可以将活动常态化。</p><p>　　活动运营是指，通过开展独立活动、联合活动，拉动某一个或多个指标的短期提升。</p><p>　　策划</p><center><img border=\"1\" alt=\"一篇文章让你知道什么是运营！\" src=\"http://img.yixieshi.com/115943KV-5.jpg!680\" width=\"371\" height=\"306\"></center><p>　　写活动策划</p><p>　　活动主题</p><p>　　活动对象</p><p>　　活动时间</p><p>　　活动描述</p><p>　　规则详情</p><p>　　投放渠道</p><p>　　风险控制</p><p>　　监控指标</p><p>　　成本预估</p><p>　　效果评估</p><p>　　FAQ文档准备</p><p>　　写完策划之后</p><p>　　申请资源</p><p>　　与开发、设计沟通</p><p>　　测试</p><p>　　上线后应对突发</p><p>　　结束后活动总结</p><p><strong>　　4、用户运营</strong></p><p>　　用户运营是指，以网站或者产品的用户的活跃、留存、付费为目标，依据用户的需求，制定运营方案甚至是运营机制。用户运营已经扩展到针对不同类型的用户进行有针对性的运营策略的阶段。</p><p>　　简单来说就是引入新用户、留存老用户、保持用户活跃、促进用户付费、挽回流失或者沉默的用户。用张亮的一张图总结：</p><center><img border=\"1\" alt=\"一篇文章让你知道什么是运营！\" src=\"http://img.yixieshi.com/115943DX-6.jpg!680\" width=\"495\" height=\"340\"></center><p>　　首先要掌握自身用户的用户结构，比如男女比例、年龄层次、身处省市、受教育程度、兴趣点;</p><p>　　其次要了解用户规模以及增长或衰退情况并进行适当的用户分级，比如新用户多少、老用户多少、每日增长规模、用户处于怎样的生命周期;</p><p>　　最后要熟练掌握用户行为数据，并通过数据分析，懂得用户为什么来、为什么走、为什么活跃、为什么留存;对新用户增长，已有用户的活跃和留存，活跃用户促付费，流失用户的挽回都有对应的措施。</p><p>　　开源</p><p>　　注册渠道和注册方式的影响：</p><p>　　产品本身的注册方式：手机、邮箱;</p><p>　　联合登陆再绑定资料，注册转化需要做好;</p><p>　　注册以及注册后的引导流程：图文并茂地引导用户从哪里开始、怎么玩;</p><p>　　节流</p><p>　　流失的标准：多久没登陆意味着流失;建立用户行为模型，管理用户的生命周期;</p><p>　　流失预警：流失前用户进行了哪些类似行为，这些用户有哪些共同特征，产品是否更改了核心功能;</p><p>　　用户挽回：通知用户(通知渠道、效果评估)、告诉用户新功能新改进等、挽回的用户更需要关怀;</p><p>　　促活跃</p><p>　　留下来不代表是活跃的，哪些行为标识出用户是否活跃，如何促进这些行为</p><p>　　转付费</p><p>　　通过机制让已付费的持续付费</p><p>　　通过一系列行为让活跃用户付费</p><p><strong>　　5、关于数据</strong></p><p>　　数据很重要，其实重要的是分析数据。</p><p>　　数据分析应该避免如下几个误区：</p><p>　　避免唯数据论</p><p>　　避免用结论推到原因：发现数据增长或下降、找出原因，最好方式是再现一次</p><p>　　不要夸大偶然事件，认为带来必然结果</p><p>　　不用单一类型数据去评价全局</p><p>　　不同阶段数据的关注点也不同</p><p>　　网站或产品建立的初期</p><p>　　流量指标很关键，但是它不仅仅是UVPV、停留时间之类的增长，更重要的是，流量来源于何处，流量到来之后浏览了哪些页面，做了什么操作，在哪里蹦失。</p><p>　　到了持续运营阶段</p><p>　　单一的流量指标已经意义不大(并非没有意义)，而更重要的是用户的留存、活跃指标，甚至是付费用户的规模。在这个阶段，依然重要的是需要跟踪所有流量来源的渠道质量，需要强化的是用户行为的分析，要拆分出各种维度、各种路径的留存、活跃、转化的情况，用户的兴趣点，用户的成长模型，等等。</p><p>　　到了成熟期</p><p>　　需要关注用户流失的速度、分析流失的原因，对依然留存与活跃的用户给予重点的关注。数据分析此时的意义，是延续网站或产品的生命周期，是持续为存量用户提供优质的服务。</p><p>　　到了衰退期</p><p>　　就要做好数据的保存工作，如果网站或者产品要结束运营，要提前做好各种准备和通知。</p><p>　　运营的核心数据</p><center><img border=\"1\" alt=\"一篇文章让你知道什么是运营！\" src=\"http://img.yixieshi.com/1159433413-7.jpg!680\" width=\"332\" height=\"271\"></center><p><strong>　　6、运营在产品之前</strong></p><p>　　运营和产品是一体两面，要将一些运营融入到产品设计。</p><p>　　运营在产品设计之前，做什么呢?</p><p>　　答曰：根据产品设计的发展目标(含目标用户、目标市场、阶段规划)，去做早期的运营工具设计、运营目标分解、运营切入点选择、运营路线图制作、运营策略规划。</p><p><br></p><div id=\"moreitemforarticle\"><p>
				</p><p>　　<b>关注 <a href=\"http://www.yixieshi.com/\">互联网的一些事</a> 官方微信，回复ID \" 22247 \" 即可在微信里阅读本篇内容。</b></p>
				<p>　　在查找公众号中搜索：imyixieshi，或者扫描下方二维码快速关注。</p>
				<p>　　<img src=\"http://www.yixieshi.com/images/yixieshi_wx.gif\" alt=\"关注互联网的一些事微信\"></p>
 　　本文链接：<a href=\"http://www.yixieshi.com/pd/22247.html\" target=\"_blank\">http://www.yixieshi.com/pd/22247.html</a><p></p><p>
====关于「互联网的一些事」====</p>
<p>
	　　<span style=\"color:#ffffff;\"><span style=\"background-color:#008080;\"><strong>互联网的一些事</strong> （ <a href=\"http://www.yixieshi.com/\" style=\"color:#ffffff;\" target=\"_blank\">http://www.yixieshi.com</a> ）</span></span>&nbsp; —— &nbsp;聚焦互联网前沿资讯，网络精华内容，交流产品心得。 每天为你速递最新、最鲜、最有料的互联网科技资讯！</p>
<p>
	　　<strong>官方微博：&nbsp;</strong><a href=\"http://weibo.com/yixieshi\" target=\"_blank\">@互联网的一些事</a></p>
<p>
	　　<strong>官方微信：&nbsp;</strong>互联网的一些事(ID：imyixieshi)</p>
<p>
	　　如果您对互联网产品有独特的想法和见解，欢迎给我们投稿。邮箱：tougao#yixieshi.com （请将“#”修改为“@”）</p></div>		
			', '　　相信这本书是大部分运营的启蒙书，最近重读知乎大神张亮的《从零开始学运营》颇有收获。　　现整理如下，愿与苦逼运营党一起学习交流。　　1、什么是运营　　一切能够帮助产品进行推广、促进用户使用、提高用户认知的手段都是运营。　　仅限于互联网产品运营。　　1.1运营的核心目的　　根据产品类型的不同，运营的方式也不尽相同，但核心的目的只有一个：　　让产品活的更好、更久。　　所谓“活的更好”，是通过…', '20150825132455', '20150825133306', '', NULL, '1', '1', '', '3');
INSERT INTO `content` VALUES   ( '56', '0', '深入分析Docker镜像原理', 'http://img.ptcms.csdn.net/article/201508/21/55d6b1fa0ffa1.jpg', '深入分析Docker镜像原理', '<p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"><span style=\"background-color: initial;\">分享简介：Dockerfile重塑新镜像，定义的不仅仅是镜像中的磁盘文件；Docker镜像是Dockerfile的产 物，自底之上打包软件及其环境，是软件的交付品；容器是镜像的运行态体现，一切信息来源于镜像。本次分享将深入分析Dockerfile、Docker镜 像和Docker容器三者之间的具体关系。</span></p><h3 style=\"margin: 0.75em 0px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">以下为分享全部内容：</h3><h2 style=\"margin: 0.75em 0px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">第一部分：Docker镜像的基本知识</h2><h3 style=\"margin: 0.75em 0px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"><b>1.1 什么是Docker镜像</b></h3><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">从整体的角度来讲，一个完整的Docker镜像可以支撑一个Docker容器的运行，在 Docker容器运行过程中主要提供文件系统视角。例如一个ubuntu:14.04的镜像，提供了一个基本的ubuntu:14.04的发行版，当然此 镜像是不包含操作系统Linux内核的。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">说到此，可能就需要注意一下，linux内核和ubuntu:14.04Docker镜像的区别了。传统虚拟机安装ubuntu:14.04会包含两部分，第一，某一个Linux内核的发行版本，比如Linux 3.8版本的内核；第二，第一个特定的Ubuntu发行版，这部分内容不包含Linux内核，但是包含Linux之外的软件管理方式，软件驱动，如 apt-get软件管理包等。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">理解以上内容之后，就可以理解，为什么在一个Linux内核版本为3.8的ubuntu:14.04基础上，可以把Linux内核版本升级到3.18，而ubuntu的版本依然是14.04。最主要的就是：Linux内核版本与ubuntu操作系统发行版之间的区别。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">Linux内核＋ubuntu操作系统发行版，组成一台工作的机器让用户体验。那么灵活替换ubuntu操作系统发行版，那是不是也可以实现呢。那么Docker很方便的利用了这一点，技术手段就是Docker镜像。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">Docker的架构中，Docker镜像就是类似于“ubuntu操作系统发行版”，可 以在任何满足要求的Linux内核之上运行。简单一点有“Debian操作系统发行版”Docker镜像、“Ubuntu操作系统发行版”Docker镜 像；如果在Debian镜像中安装MySQL 5.6，那我们可以将其命名为Mysql:5.6镜像；如果在Debian镜像中安装有Golang 1.3,那我们可以将其命名为golang:1.3镜像；以此类推，大家可以根据自己安装的软件，得到任何自己想要的镜像。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">那么镜像最后的作用是什么呢？很好理解，回到Linux内核上来运行，通过镜像来运行时我们常常将提供的环境称为容器。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">以上内容是从宏观的角度看看Docker镜像是什么，我们再从微观的角度进一步深入 Docker镜像。刚才提到了“Debian镜像中安装MySQL 5.6，就成了mysql:5.6镜像”，其实在此时Docker镜像的层级概念就体现出来了。底层一个Debian操作系统镜像，上面叠加一个 mysql层，就完成了一个mysql镜像的构建。层级概念就不难理解，此时我们一般debian操作系统镜像称为mysql镜像层的父镜像。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">层级管理的方式大大便捷了Docker镜像的分发与存储。说到分发，大家自然会联想到 Docker镜像的灵活性，传输的便捷性，以及高超的移植性。Docker Hub，作为全球的镜像仓库，作为Docker生态中的数据仓库，将全世界的Docker数据汇聚在一起，是Docker生态的命脉。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">Docker有两方面的技术非常重要，第一是Linux 容器方面的技术，第二是Docker镜像的技术。从技术本身来讲，两者的可复制性很强，不存在绝对的技术难点，然而Docker Hub由于存在大量的数据的原因，导致Docker Hub的可复制性几乎不存在，这需要一个生态的营造。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><h3 style=\"margin: 0.75em 0px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"><b>1.2 Docker镜像的内容</b></h3><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">大致介绍了Docker镜像是什么，我们来看看Docker镜像中有哪些内容？</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">介绍之前，我先分享一下，我个人在接触Docker的两年时间中，对Docker镜像内容认识的变化。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">第一阶段：初步接触Docker。相信很多爱好者都会和我一样，有这样一个认识：Docker 镜像代表一个容器的文件系统内容；</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">第二阶段：初步接触联合文件系统。联合文件系统的概念，让我意识到镜像层级管理的技术，每一层镜像都是容器文件系统内容的一部分。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">第三阶段：研究镜像与容器的关系：容器是一个动态的环境，每一层镜像中的文件属于静态内 容，然而 Dockerfile 中的 ENV、VOLUME、CMD 等内容最终都需要落实到容器的运行环境中，而这些内容均不可能直接坐落到每一层镜像所包含的文件系统内容中，那此时每一个Docker镜像还会包含 json文件记录与容器之间的关系。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">因此，Docker镜像的内容主要包含两个部分：第一，镜像层文件内容；第二，镜像json文件。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><h3 style=\"margin: 0.75em 0px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"><b>1.3 Docker镜像存储位置</b></h3><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">既然是说镜像存储的位置，那么应该包含：镜像层文件和镜像json文件。如一个ubuntu:14.04镜像，包含4个镜像层，在aufs存储驱动的情况下，在磁盘上的情况可以如以下图所示：</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><h4 style=\"margin: 0.75em 0px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-weight: bold; font-stretch: normal; font-size: 14px; line-height: 24px; font-family: Helvetica, Tahoma, Arial, sans-serif;\">1.3.1 查看镜像层组成：</h4><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">我们可以通过命令 docker history ubuntu:14.04 查看 ubuntu:14.04，结果如下：</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px; text-align: center;\"><img src=\"http://img.ptcms.csdn.net/article/201508/21/55d6b1fa0ffa1.jpg\" style=\"border-style: none; border-width: initial;\"><br></p><h4 style=\"margin: 0.75em 0px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-weight: bold; font-stretch: normal; font-size: 14px; line-height: 24px; font-family: Helvetica, Tahoma, Arial, sans-serif;\">1.3.2 镜像层文件内容存储</h4><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">Docker 镜像层的内容一般在 Docker 根目录的 aufs 路径下，为 /var/lib/docker/aufs/diff/，具体情况如下：&nbsp;</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px; text-align: center;\"><img src=\"http://img.ptcms.csdn.net/article/201508/21/55d6b29e80853.jpg\" style=\"border-style: none; border-width: initial;\"><br></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"><span style=\"background-color: initial;\">图中显示了镜像 ubuntu:14.04 的 4 个镜像层内容，以及每个镜像层内的一级目录情况。需要额外注意的是：镜像层 d2a0ecffe6fa 中没有任何内容，也就是所谓的空镜像。</span></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><h4 style=\"margin: 0.75em 0px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-weight: bold; font-stretch: normal; font-size: 14px; line-height: 24px; font-family: Helvetica, Tahoma, Arial, sans-serif;\">1.3.3 镜像 json 文件存储</h4><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">对于每一个镜像层，Docker 都会保存一份相应的 json 文件，json 文件的存储路径为 /var/lib/docker/graph，ubuntu:14.04 所有镜像层的 json 文件存储路径展示如下：</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px; text-align: center;\"><img src=\"http://img.ptcms.csdn.net/article/201508/21/55d6b3047073a.jpg\" style=\"border-style: none; border-width: initial;\"><br></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">除了 json 文件，大家还看到每一个镜像层还包含一个 layersize 文件，该文件主要记录镜像层内部文件内容的总大小。既然谈到了镜像 json 文件，为了给下文铺垫，以下贴出 ubuntu:14.04 中空镜像层 d2a0ecffe6fa 的 json 文件：</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px; text-align: center;\"><img src=\"http://img.ptcms.csdn.net/article/201508/21/55d6b33582a36.jpg\" style=\"border-style: none; border-width: initial;\"><br></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">Docker镜像存储，就和大家一起先看到这。同时介绍Docker镜像的基本知识也告一段落。以下我们进入此次分享的第二部分。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><h2 style=\"margin: 0.75em 0px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">第二部分 Dockerfile、Docker镜像和Docker容器的关系</h2><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">Dockerfile 是软件的原材料，Docker 镜像是软件的交付品，而 Docker 容器则可以认为是软件的运行态。从应用软件的角度来看，Dockerfile、Docker 镜像与 Docker 容器分别代表软件的三个不同阶段，Dockerfile 面向开发，Docker 镜像成为交付标准，Docker 容器则涉及部署与运维，三者缺一不可，合力充当 Docker 体系的基石。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">简单来讲，Dockerfile构建出Docker镜像，通过Docker镜像运行Docker容器。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">我们可以从Docker容器的角度，来反推三者的关系。首先可以来看下图：</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px; text-align: center;\"><img src=\"http://img.ptcms.csdn.net/article/201508/21/55d6b3921573e.jpg\" style=\"border-style: none; border-width: initial;\"><br></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">我们假设这个容器的镜像通过以下Dockerfile构建而得：</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><pre class=\"\" name=\"code\" style=\"margin-bottom: 1em; padding: 10px; list-style: none; overflow: hidden; white-space: pre-wrap; border-color: rgb(221, 221, 221); font-size: 14px; line-height: 24px; background: rgb(247, 247, 247);\">FROM ubuntu:14.04  

ADD run.sh /  

VOLUME /data  

CMD [\"./run.sh\"]  </pre><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><h3 style=\"margin: 0.75em 0px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">2.1 Dockerfile与Docker镜像</h3><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">首先，我们结合上图来看看Dockerfile与Docker镜像之间的关系。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">FROM ubuntu:14.04：设置基础镜像，此时会使用基础镜像 ubuntu:14.04 的所有镜像层，为简单起见，图中将其作为一个整体展示。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">ADD run.sh /：将 Dockerfile 所在目录的文件 run.sh 加至镜像的根目录，此时新一层的镜像只有一项内容，即根目录下的 run.sh。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">VOLUME /data：设定镜像的 VOLUME，此 VOLUME 在容器内部的路径为 /data。需要注意的是，此时并未在新一层的镜像中添加任何文件，即构建出的磁层镜像中文件为空，但更新了镜像的 json 文件，以便通过此镜像启动容器时获取这方面的信息。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">CMD [\"./run.sh\"]：设置镜像的默认执行入口，此命令同样不会在新建镜像中添加任何文件，仅仅在上一层镜像 json 文件的基础上更新新建镜像的 json 文件。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">因此，通过以上分析，以上的Dockerfile可以构建出一个新的镜像，包含4个镜像层，每一条命令会和一个镜像层对应，镜像之间会存在父子关系。<span style=\"background-color: initial;\">图中很清楚的表明了这些关系。</span></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><h3 style=\"margin: 0.75em 0px; padding: 0px; list-style: none; color: rgb(51, 51, 51); font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">2.2 Docker镜像与Docker容器的关系</h3><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">Docker镜像是Docker容器运行的基础，没有Docker镜像，就不可能有Docker容器，这也是Docker的设计原则之一。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">可以理解的是：Docker镜像毕竟是镜像，属于静态的内容；而Docker容器就不一样了，容器属于动态的内容。动态的内容，大家很容易联想到进程，内存，CPU等之类的东西。的确，Docker容器作为动态的内容，都会包含这些。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">为了便于理解，大家可以把Docker容器，理解为一个或多个运行进程，而这些运行进程将占有相应的内存，相应的CPU计算资源，相应的虚拟网络设备以及相应的文件系统资源。而Docker容器所占用的文件系统资源，则通过Docker镜像的镜像层文件来提供。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">那么作为静态的镜像，如何才有能力转化为一个动态的Docker容器呢？此时，我们可以想象：第一，转化的依据是什么；第二，由谁来执行这个转化操作。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">其实，转化的依据是每个镜像的json文件，Docker可以通过解析Docker镜像的json的文件，获知应该在这个镜像之上运行什么样的进程，应该为进程配置怎么样的环境变量，此时也就实现了静态向动态的转变。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">谁来执行这个转化工作？答案是Docker守护进程。也许大家早就理解这样一句 话：Docker容器实质上就是一个或者多个进程，而容器的父进程就是Docker守护进程。这样的，转化工作的执行就不难理解了：Docker守护进程 手握Docker镜像的json文件，为容器配置相应的环境，并真正运行Docker镜像所指定的进程，完成Docker容器的真正创建。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">Docker容器运行起来之后，Docker镜像json文件就失去作用了。此时Docker镜像的绝大部分作用就是：为Docker容器提供一个文件系统的视角，供容器内部的进程访问文件资源。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">再次回到上图，我们再来看看容器和镜像之间的一些特殊关系。<span style=\"background-color: initial;\">首先，之前已经提及Docker镜像是分层管理的，管理Docker容器的时候，Docker镜像仍然是分层管理的。由于此时动态的容器中已经存在进程，进程就会对文件系统视角内的文件进行读写操作，因此，就会涉及一个问题：容器是否会篡改Docker镜像的内容？</span></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">答案自然是不会的。统一来讲，正如上图，所有的Docker镜像层对于容器来说，都是只读的，容器对于文件的写操作绝对不会作用在镜像中。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">既然如此，实现的原理就很重要，究其根本：Docker守护进程会在Docker镜像的 最上层之上，再添加一个可读写层，容器所有的写操作都会作用到这一层中。而如果Docker容器需要写底层Docker镜像中的文件，那么此时就会涉及一 个叫Copy－on－Write的机制，即aufs等联合文件系统保证：首先将此文件从Docker镜像层中拷贝至最上层的可读写层，然后容器进程再对读 写层中的副本进行写操纵。对于容器进程来讲，它只能看到最上层的文件。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">那最后我们再来说说：Docker容器的文件系统视角中，到底是不是存在一些内容，不是存储于Docker镜像中的？</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">这次的答案依旧是肯定的。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">再次重申一点，Docker镜像中存储的都是一些静态文件。这些文件原则上应该和容器具体信息以及主机信息完全解藕。那么Docker容器中不存在Docker镜像中的内容主要有以下几点：</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">1./proc以及/sys等虚拟文件系统的内容</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">2.容器的hosts文件，hostname文件以及resolv.conf文件，这些事具体环境的信息，原则上的确不应该被打入镜像。</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">3.容器的Volume路径，这部分的视角来源于从宿主机上挂载到容器内部的路径</p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\"></p><p style=\"margin-bottom: 1.5em; padding: 0px; list-style: none; font-family: Helvetica, Tahoma, Arial, sans-serif; line-height: 24px;\">4.部分的设备文件</p>', '分享简介：Dockerfile重塑新镜像，定义的不仅仅是镜像中的磁盘文件；Docker镜像是Dockerfile的产 物，自底之上打包软件及其环境，是软件的交付品；容器是镜像的运行态体现，一切信息来源于镜像。本次分享将深入分析Dockerfile、Docker镜 像和Docker容器三者之间的具体关系。以下为分享全部内容：第一部分：Docker镜像的基本知识1.1 什么是Docker镜像从整体的角…', '20150825135825', '20150825135912', '', NULL, '1', '1', '', '5');
INSERT INTO `content` VALUES   ( '53', '0', '产品不快，你就死定了！', 'http://www.yixieshi.com/images/yixieshi_wx.gif', '产品不快，你就死定了！', '
				<center><br></center><p>　　作者碎碎念：创业团队做产品要拼迭代速度，天下武功，唯快不破，扎克伯格说 “不酷，你就死定了!”，我要套用他的话说 
“不快，你就死定了!”，因为太阳底下没有新鲜事，聪明人辣么多，凭空想出一个绝世好点子?你没戏的!但是，发现别人做得不足的地方，再迅速赶超、辗压之，还是有前途滴~</p><p>　　1.产品是演化来的</p><p>　　做产品要快，有些误区需绕开：不必等一切想明白再动手。</p><p>　　全能的上帝创世纪也是分七天迭代出来的，他老人家尚且没个计划走一步看一步，不能一簇而就呢，同理，好产品也是一步步进化得来的，不是一次头脑风暴 
[Duang~] 就问世了，虽然会上集体自嗨很爽，落地执行时会经常走样儿的。</p><p>　　产品不是设计出来的，是 “改” 
出来的。因为人当下的思维有很大的局限，你的认知每天以觉察不到的速度在更新迭代，两天后你的想法可能就是新的一套，所以别指望一开始就把一切想得很透彻，也别等一切想明白了再动手，最好的做法是，迅速开始，持续改进。只要初衷不改，方向都可以再调整，如果不开始第一步，可能永远找不到方向。</p><p>　　我们终究不像上帝造物那么随心所欲，简单产品计划还是需要的，没计划就没方向。</p><p>　　2.坚持最小化原型</p><p>　　砍需求就像锄草，杂草多了庄稼就会死。当人们创造一个数字化产品，会有意无意地想把现实体验全盘模拟到产品中，只有坚持最小化，才能下得了手砍掉那些貌似有理实则累赘的东西，切忌贪大求全，切忌战线拉长。可以砍掉功能提供有损的产品体验，胜过糟糕的用户体验。大胆砍需求，在最初版本中只关注核心功能即可。</p><p>　　3.轻设计</p><p>　　产品和人一样，颜值很重要，但不是最重要。出门见人，只要干净精神，落落大方即可，不要过度包装、过度设计。好的设计是流畅自然的，不会让人感觉到设计的存在，毕竟产品是给人用的不是给人欣赏或探索的。对于已形成的用户习惯，尽量遵循而不要挑战，可以微创新，以不打断用户为宜，越自然越好。“随大流” 
也是一种聪明的做法，不要重复发明轮子，尤其在创业团队，能避免弯路避免踩坑。</p><p>　　别误解，轻设计不是越精简越好，听朋友的朋友说，他有次进入一部很酷的电梯，几秒后顿感焦虑不堪不知所措，因为这电梯设计太简约以至于去掉了楼层按钮，坐过一次才明白过来它是层层停靠的。这样的设计用来整人最合适了。</p><p>　　4.重迭代</p><p>　　产品打磨是重头戏，快让产品尽早上线吧。这就像养孩子一样，产品终于诞生了，你以为解脱了么?不不不，这只是开始，苦活儿累活儿还在后头。</p><p>　　不管产品看起来多拙劣，请相信那都是工程师们踩着一个一个坑艰难走过来的，先平息掉另起炉灶的冲动，因为推翻重来就像做 
“大手术”，只会伤筋动骨，是资源的巨大浪费，而其结果可能比现在更糟，就像你终于穿过了沼泽后只剩半槽血，经不起返回原点重新来过的折腾。不要暴风骤雨式的改版、重构，而要温和的渐进式的持续改进，就是人们常说的小幅迭代，快速更新。</p><p>　　5.无视对手</p><p>　　战术上藐视他，不是真的 “无视”。保持自己的节奏，别被竞争对手打乱你的阵脚。很多所谓的竞品分析，其实根本没有 
“分析”，我们只看到他们做了什么，不知道人家没做什么，甚至也不清楚人家的前因后果，更不知晓人家踩过哪些坑。而最有价值的往往是那些未公开出来的 
“秘密”，与其费心思猜别人，不如做好自己的事，盯着别人当标准，永远只能做追随者，能保持 “日日 新，又日新” 就已经很厉害了。</p><p>　　6.用 20%的时间做出 80%的成效</p><p>　　每做一个决策，想想是否能花极少时间换来较大回报?是的话，就是一个聪明的决策。反过来，那些花费大量时间却没有成效的事，果断放弃。因为创业团队资源太宝贵，浪费一月、一周都有可能资金用尽万劫不复。</p><p>　　为了快，适当放弃细节。“细节决定成败” 
这句话误导了很多人，在高手对决的时候，没错，就是比谁犯的错误少，那我们还不是高手的时候呢?可能海选还没过，太早沉浸于细节不如苦练自己的 “杀手锏”。</p><p>　　7.重视反馈</p><p>　　没有反馈，迭代就是闭门造车。从一开始就应该追踪反馈，和用户保持顺畅沟通非常重要，发展自己的核心用户群更是 “百年大计”。有了种子用户当 
“雪核”，“雪球” 才能滚起来。</p><p>　　开发者和用户应该友好地碰撞，互相激励，互相启发灵感，在这个被互联网深度改造着的世界，信息不对称是第一个要被消灭的事情，信息的自由流动才是最有价值的事。开发者和自己的用户之间不应该有信息阻隔。</p><p>　　8.最后，成为产品的重度使用者</p><p>　　“如果你是做狗粮的，你必须要尝自己做的狗粮”，这是我以前老板说的话，至今记忆尤新。意思是，开发团队应该是自己的用户，多使用自己的产品，挖掘自己的内心需求，感受用户痛点，自己不用而依赖用户测试，都是舍近求远，是危险的。</p><p>　　9.最后的最后，我所说的，都是错的</p><p>　　做产品没有套路，只有常识，与其花时间研究文档格式、原型工具、各种晦涩术语，不如多研究人、社会和商业这些基本的东西，培养格局观，拾回我们遗忘的那些常识。</p><p>　　和大家共勉。</p><p>　　本文作者吕广杰，10年 资深 UX，后进入担任产品经理。文章转自公众账号“点融黑帮”，欢迎交流。</p><p><br></p><div id=\"moreitemforarticle\"><p>
				</p><p>　　<b>关注 <a href=\"http://www.yixieshi.com/\">互联网的一些事</a> 官方微信，回复ID \" 22309 \" 即可在微信里阅读本篇内容。</b></p>
				<p>　　在查找公众号中搜索：imyixieshi，或者扫描下方二维码快速关注。</p>
				<p>　　<img src=\"http://www.yixieshi.com/images/yixieshi_wx.gif\" alt=\"关注互联网的一些事微信\"></p>
 　　本文链接：<a href=\"http://www.yixieshi.com/it/22309.html\" target=\"_blank\">http://www.yixieshi.com/it/22309.html</a><p></p><p>
====关于「互联网的一些事」====</p>
<p>
	　　<span style=\"color:#ffffff;\"><span style=\"background-color:#008080;\"><strong>互联网的一些事</strong> （ <a href=\"http://www.yixieshi.com/\" style=\"color:#ffffff;\" target=\"_blank\">http://www.yixieshi.com</a> ）</span></span>&nbsp; —— &nbsp;聚焦互联网前沿资讯，网络精华内容，交流产品心得。 每天为你速递最新、最鲜、最有料的互联网科技资讯！</p>
<p>
	　　<strong>官方微博：&nbsp;</strong><a href=\"http://weibo.com/yixieshi\" target=\"_blank\">@互联网的一些事</a></p>
<p>
	　　<strong>官方微信：&nbsp;</strong>互联网的一些事(ID：imyixieshi)</p>
<p>
	　　如果您对互联网产品有独特的想法和见解，欢迎给我们投稿。邮箱：tougao#yixieshi.com （请将“#”修改为“@”）</p></div>		
			', '　　作者碎碎念：创业团队做产品要拼迭代速度，天下武功，唯快不破，扎克伯格说 “不酷，你就死定了!”，我要套用他的话说 “不快，你就死定了!”，因为太阳底下没有新鲜事，聪明人辣么多，凭空想出一个绝世好点子?你没戏的!但是，发现别人做得不足的地方，再迅速赶超、辗压之，还是有前途滴~　　1.产品是演化来的　　做产品要快，有些误区需绕开：不必等一切想明白再动手。　　全能的上帝创世纪也是分七天迭代出…', '20150825132623', '20150825133303', '', NULL, '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '54', '0', '日留存、周留存、月留存，究竟怎样才能让更多的用户留下来？', 'http://www.yixieshi.com/images/yixieshi_wx.gif', '日留存、周留存、月留存，究竟怎样才能让更多的用户留下来？', '
				<center><img alt=\"\" src=\"http://img.yixieshi.com/1IZJ519-0.jpg!680\" width=\"500\" height=\"327\"></center><p>　　为什么要写这个话题?我观察到现在很多APP从业者都在关注渠道、渠道用户质量，但甚少有人去考虑LTV，最优质的用户的终生价值的挖掘，大家却没有重视。希望此文能有一点降躁作用。</p><p>　　一款 APP 
和它的用户会经过相遇、相知、相恋、相离四个阶段。每一次亲密接触都存在“分离”风险，因为用户稍有不满，就有可能卸载掉APP。今天就来讲下，如何获得更多“相恋用户”，并且尽量延后分离的时间呢?</p><p>　　其实，留存率是一个分析用户不同生命周期阶段的最基本的指标，我们可以通过日留存率来判断新用户留下来的意愿，通过周留存率来判断忠诚用户转化比例，通过月留存率来判断产品的生命周期，从而合理规划产品，提高产品的价值。</p><center><img alt=\"1.png\" src=\"http://img.yixieshi.com/1IZM936-1.png!680\" width=\"632\" height=\"257\"></center><p>　　当然有更多高级模型来做忠诚用户的分析，比如RFM三度模型，参与度模型等等。这些高级模型的用法后续会慢慢跟大家分享。</p><p>　　Step 1 ：打好基本功，让用户对你一见钟情</p><p>　　好的开场白等于50%的成功。一个新用户如果能在第一次使用你的APP时获得好的体验，那留下来的可能性会非常大，也就是说，日留存就有保障了。来看下影响第一印象分的几个细节要素。</p><p>　　(1)品牌认知度</p><p>　　自从商品经济出现之后，人们很愿意为品牌买单。一个购买iPhone的消费者，相比山寨机的消费者，更容易形成品牌二次回购。</p><p>　　无线领域也是如此。在国内，知乎的新用户留存就应该比 quora 更高。知乎在国内的品牌影响力更大嘛。</p><p>　　(2)外观风格</p><p>　　好的UI是APP的门脸。其重要性不言而喻。我一直认为画面精细度对用户留存的影响也越来越大。</p><p>　　如果一个APP的画面都是粗制滥造的，用户又如何相信这个APP能够为自己带来价值呢?</p><p>　　(3)新手引导</p><p>　　新手引导是新用户转化为老用户的第一道，也是最难的一道门槛。恰到好处的新手引导，可以有效的提高次日留存率。</p><p>　　以游戏为例，新手引导设计得太难或太简单，都会导致用户流失。好的新手教程需要体现游戏的基本玩法，同时又能展现游戏的亮点，吸引玩家留下来。</p><p>　　再说个复杂的类别，电商，众所周知，电商繁琐的注册流程和下单流程是用户流失最大的罪魁祸首。所以很多电商APP会花很大精力设计有吸引力的奖励来刺激新用户注册下单。</p><p>　　一旦新用户注册完成了，常用地址填写了，支付方式绑定了，那么，以后维系和通过促销活动来刺激老用户消费就变成一个相对容易的事情了。</p><p>　　tip：可以对新手活动进行埋点，将日留存率与首次下单率指标结合起来分析。</p><p>　　(4)性能</p><p>　　性能有多重要?先讲个真实案例。一个用户量近百万的电商APP，新用户刺激足够大、UI设计也是一流，但做了一轮大型推广活动后，发现次日留存率竟然不到20%，朋友找到我帮忙分析。</p><p>　　我去下载了这个APP，却经历了一次揪心的体验……这个APP在我首次打开时，就不争气的闪退了。好不容易正常启动之后，商品配图加载非常慢，然后我刷了2、3分钟，手机就开始发烫了!去手机应用管理中查看这个APP的进程，发现它比同类型的APP占用内存都高出好几倍。这样的运行情况，留存率高才奇怪了。(为什么会犯这种低级错误?天晓得~)</p><center><img alt=\"2.png\" src=\"http://img.yixieshi.com/1IZH424-2.png!680\" width=\"396\" height=\"639\"></center><p>　　tip：产品性能差是最低级的错误。即便团队人力有限，也可以借助市面现有工具来解决，切忌忽视。推荐几款工具。</p><p>　　APP发布前：云测工具比如testin，对多个手机终端型号进行测试。尽管中国市场安卓手机碎片化非常严重，但要保证主流用户的体验，建议至少要选择主流机型加入测试矩阵。</p><p>　　APP发布中：网络环境的复杂性导致很多时候用户的体验得不到保证。大家可以使用市面的CDN服务，比如阿里的多媒体服务，来提高真实网络环境下图片或视频的加载速度。</p><p>　　APP发布后：当做好前期测试、多节点部署之后，我们还需要实际监控不同城市、不同终端设备、不同运营商下面的响应时间、崩溃率、网络错误率等性能指标。这里推一款移动应用性能监控的工具，听云。</p><p>　　(5)推广</p><p>　　前面的分析都建立在推广获得的用户是真实用户的基础上，怎么评估一个渠道用户的质量?评估这个渠道的效果?几个月前写过两篇相关文章(关注微信号pm-miao，回复“1”和“2”查看原文)。</p><p>　　这里多说一句，评估渠道用户的质量并不是说让你购买的渠道用户越优质越好。关起门来说，低质量用户的存在也是有道理的。</p><p>　　我比较推荐的推广方式是，用高价购买高质量用户，获取高留存，助于提升LTV，为APP带来价值;用低价购买低质量的用户，用来影响应用市场的权重，增加APP的曝光，带来部分自然流量。</p><p>　　Step 2 ：不断的偶遇，让用户记住你</p><p>　　新用户经过1周到2周的时间，会经历一个完整的产品体验周期。经过这个周期还留下来的用户，继续流失的速度会变慢，在各项转化指标上的体现更好，是价值最高的用户。</p><p>　　我取10000款APP做了周留存率的拟合实验。发现这个曲线衰减趋势和人类记忆的衰减曲线趋势类似。</p><center><img alt=\"3.png\" src=\"http://img.yixieshi.com/1IZG643-3.png!680\" width=\"560\" height=\"307\"></center><p>　　科普：人的记忆是一个比较成熟的学科了，通过找到人类的记忆遗忘临界点，在临界点复习知识点，可以有效的缓解记忆者对这个知识点的遗忘。</p><p>　　如果将这个研究成果应用到APP留存率上，我们可以通过一些产品设计和运营手段，结合合适的场景，在“记忆界点”加深用户的“记忆”，降低用户的“遗忘”，帮助新用户转化为忠诚用户。</p><p>　　(1) APP内社区</p><p>　　以理财类APP为例，用户可能产生理财需求时，想不到手机里面安装过理财APP;等到看到这个APP时，购买冲动早就消失了。</p><p>　　如果构建了APP内社区，运营人员定期整理理财资讯，强化品牌。促进用户在社区交流。APP被打开和被记忆的频次就高了很多。</p><p>　　tips：APP外社区可以进行品牌的传播，获得新用户;APP内社区可以提高用户留存率。聪明的创业者根据需要来进行社区的合理规划。</p><p>　　(2) 推送</p><p>　　合理的推送可以刺激用户活跃，提高留存率。按照“记忆曲线”的理论，运营人员应该在次日、三日、七日这样的“遗忘临界点”重点推送。另外，别忘了设置冷却时间(2次推送的最短时间间隔)，避免频繁打扰到用户。</p><p>　　tip：运营人员在推送每一条消息的时候，都应该考虑用户的实际场景，这条消息是不是用户正好需要的。</p><p>　　通过用户的使用频率、付费金额、距离首次付费时间等维度，把用户划分到多个用户群，针对性的进行新客引导、新客品牌灌输、忠诚用户维护、流失用户召回等。精细才能成就有效的运营。</p><p>　　(3)打卡签到设计</p><p>　　每日签到，可以有效拉动用户的活跃，提高留存率。在用户签到时给与一些奖励。记得赋予“遗忘临界点”更高的奖励刺激，会有很好的效果。</p><p>　　比如下面是PopStar!消灭星星的签到设计，我们可以一起研究下它的数值。</p><center><img alt=\"屏幕快照 2015-08-21 下午6.28.27.png\" src=\"http://img.yixieshi.com/1IZI932-4.png!680\" width=\"229\" height=\"30\"></center><p>　　我们看到，在次日、3日、5日、7日这样的“遗忘临界点”设计更高的奖励差值，能有效的提高留存率。</p><p>　　Step 3 ：让用户真心爱上你，不愿离去</p><p>　　APP的用户生命周期(下简称为life time)各不相同，不同的lift time需要有不同的产品策略。通过月留存率了解life 
time，提前做好产品的规划。</p><p>　　罗曼罗认为，爆款APP的life time不会超过1个月。如果你的life 
time不超过1个月，同时具备很好的病毒传播性，你将在短时间内获得大量的用户，但是这些用户如同过眼云烟，很快又会离你而去。所以在life 
time内实现变现是最理性的决定。</p><p>　　游戏的life 
time一般在几周到1年不等。结合等级和关卡来分析用户的流失。如果发现流失用户都是自然满级用户，可能你需要推出更多英雄或关卡，来延长游戏的可玩性。</p><p>　　有些APP的目标用户会发生身份的转化，这些APP会有固定的life time。比如孕期APP的life 
time不会超过10个月。怀胎10月，准妈妈变成真妈妈了嘛。这个妈妈几乎一定会卸载孕期APP。通过丰富产品矩阵来满足用户的不同身份，引导这个妈妈使用育儿APP。忠诚用户还是自己的用户，只是换了一个载体继续延续用户价值。</p><p>　　总结</p><p>　　1. 在遗忘临界点出现在用户眼前，可以延缓用户的遗忘，促进忠诚用户的转化</p><p>　　2. 通过月留存率，了解用户的生命周期，提前做好产品布局。</p><p><br></p><div id=\"moreitemforarticle\"><p>
				</p><p>　　<b>关注 <a href=\"http://www.yixieshi.com/\">互联网的一些事</a> 官方微信，回复ID \" 22349 \" 即可在微信里阅读本篇内容。</b></p>
				<p>　　在查找公众号中搜索：imyixieshi，或者扫描下方二维码快速关注。</p>
				<p>　　<img src=\"http://www.yixieshi.com/images/yixieshi_wx.gif\" alt=\"关注互联网的一些事微信\"></p>
 　　本文链接：<a href=\"http://www.yixieshi.com/pd/22349.html\" target=\"_blank\">http://www.yixieshi.com/pd/22349.html</a><p></p><p>
====关于「互联网的一些事」====</p>
<p>
	　　<span style=\"color:#ffffff;\"><span style=\"background-color:#008080;\"><strong>互联网的一些事</strong> （ <a href=\"http://www.yixieshi.com/\" style=\"color:#ffffff;\" target=\"_blank\">http://www.yixieshi.com</a> ）</span></span>&nbsp; —— &nbsp;聚焦互联网前沿资讯，网络精华内容，交流产品心得。 每天为你速递最新、最鲜、最有料的互联网科技资讯！</p>
<p>
	　　<strong>官方微博：&nbsp;</strong><a href=\"http://weibo.com/yixieshi\" target=\"_blank\">@互联网的一些事</a></p>
<p>
	　　<strong>官方微信：&nbsp;</strong>互联网的一些事(ID：imyixieshi)</p>
<p>
	　　如果您对互联网产品有独特的想法和见解，欢迎给我们投稿。邮箱：tougao#yixieshi.com （请将“#”修改为“@”）</p></div>		
			', '　　为什么要写这个话题?我观察到现在很多APP从业者都在关注渠道、渠道用户质量，但甚少有人去考虑LTV，最优质的用户的终生价值的挖掘，大家却没有重视。希望此文能有一点降躁作用。　　一款 APP 和它的用户会经过相遇、相知、相恋、相离四个阶段。每一次亲密接触都存在“分离”风险，因为用户稍有不满，就有可能卸载掉APP。今天就来讲下，如何获得更多“相恋用户”，并且尽量延后分离的时间呢?　　其实，…', '20150825132740', '20150825133259', '', NULL, '1', '1', '', '3');
INSERT INTO `content` VALUES   ( '39', '7', '完全掌握粒子系统(前言）', '', '完全掌握粒子系统(前言）', '<div>&nbsp; &nbsp;<a href=\"http://www.bit1010.com/default_39.html\" target=\"_blank\"> 粒子系统是做出好游戏的一道天然屏障，是亮点，更是难点。</a>只靠在网络上搜罗别人的特效是没有前途的，必须深刻理解，才能为所欲为。</div><div>&nbsp; &nbsp; 粒子系统在wikipedia中的定义为: A particle system is a technique in game physics and computer graphics that uses a large number of very small sprites or other graphic objects to simulate certain kinds of \"fuzzy\" phenomena. <a href=\"http://www.bit1010.com/default_39.html\" target=\"_blank\">用大量的精灵或其他图形对象模拟出的“毛茸茸的，模糊的，混沌”的对象</a>。关键字为“大量”和“模拟”,所有使用粒子系统的主要内容就是为大量的例子调试各种模拟参数以达到自己想象中的效果。</div><div>&nbsp; &nbsp; 本文以Quick3.5为开发环境，以Cocos2d Particle Builder为粒子编辑器，一起实践学习并最终真正掌握cocos中的粒子系统。</div>', '粒子系统是做出好游戏的一道天然屏障，是亮点，更是难点。只靠在网络上搜罗别人的特效是没有前途的，必须深刻理解，才能为所欲为。  粒子系统在wikipedia中的定义为: A particle system is a technique in game physics and computer graphics that uses a large number of very small spri…', '20150812112605', '20150813142552', '', '20150812124648', '1', '1', '', '6');
INSERT INTO `content` VALUES   ( '68', '0', '独立游戏开发者的融资之道', '', '独立游戏开发者的融资之道', '每每谈及游戏开发，大多数游戏开发者都喜欢用Kickstarter众筹网站，然而条条大路通罗马，还有很多种方法为你的游戏筹钱。本文作者就游戏开发融资提出了多种方法供读者参考。', '每每谈及游戏开发，大多数游戏开发者都喜欢用Kickstarter众筹网站，然而条条大路通罗马，还有很多种方法为你的游戏筹钱。本文作者就游戏开发融资提出了多种方法供读者参考。', '20150828001746', '20150828001746', 'Thu, 27 Aug 2015 16:36:26', NULL, '1', '1', 'http://www.csdn.net/article/2015-08-27/2825556', '2');
INSERT INTO `content` VALUES   ( '70', '10', 'PS中收缩失效的问题', '', 'PS中收缩失效的问题', 'PS中不能在图层边缘使用收缩等功能，需要在画布内一个更小的选区上才能操作。', 'PS中不能在图层边缘使用收缩等功能，需要在画布内一个更小的选区上才能操作。', '20150831104857', '20150831104857', '', NULL, '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '65', '0', 'YoMail 新版本，“邮件对话”要替代收件箱[Win]', 'http://rc.feedsportal.com/r/234567731606/u/49/f/615575/c/33935/s/493c559e/sc/23/rc/1/rc.img\" border=\"0', 'YoMail 新版本，“邮件对话”要替代收件箱[Win]', 'YoMail 是一款能够完美支持 Gmail 的电子邮件客户端，前几天刚刚发布了新功能：邮件对话，让每一个联系 [&#8230;]<br clear=\'all\'/><br/><br/><a href=\"http://rc.feedsportal.com/r/234567731606/u/49/f/615575/c/33935/s/493c559e/sc/23/rc/1/rc.htm\" rel=\"nofollow\"><img src=\"http://rc.feedsportal.com/r/234567731606/u/49/f/615575/c/33935/s/493c559e/sc/23/rc/1/rc.img\" border=\"0\"/></a><br/><br/><a href=\"http://rc.feedsportal.com/r/234567731606/u/49/f/615575/c/33935/s/493c559e/sc/23/rc/2/rc.htm\" rel=\"nofollow\"><img src=\"http://rc.feedsportal.com/r/234567731606/u/49/f/615575/c/33935/s/493c559e/sc/23/rc/2/rc.img\" border=\"0\"/></a><br/><br/><a href=\"http://rc.feedsportal.com/r/234567731606/u/49/f/615575/c/33935/s/493c559e/sc/23/rc/3/rc.htm\" rel=\"nofollow\"><img src=\"http://rc.feedsportal.com/r/234567731606/u/49/f/615575/c/33935/s/493c559e/sc/23/rc/3/rc.img\" border=\"0\"/></a><br/><br/><a href=\"http://da.feedsportal.com/r/234567731606/u/49/f/615575/c/33935/s/493c559e/sc/23/a2.htm\"><img src=\"http://da.feedsportal.com/r/234567731606/u/49/f/615575/c/33935/s/493c559e/sc/23/a2.img\" border=\"0\"/></a><img width=\"1\" height=\"1\" src=\"http://pi.feedsportal.com/r/234567731606/u/49/f/615575/c/33935/s/493c559e/sc/23/a2t.img\" border=\"0\"/><img width=\'1\' height=\'1\' src=\'http://appinn.feedsportal.com/c/33935/f/615575/s/493c559e/sc/23/mf.gif\' border=\'0\'/>', 'YoMail 是一款能够完美支持 Gmail 的电子邮件客户端，前几天刚刚发布了新功能：邮件对话，让每一个联系 [&#8230;]', '20150828001641', '20150828001641', 'Mon, 24 Aug 2015 08:40:24 GMT', NULL, '1', '1', 'http://www.appinn.com/yomail-conversation/', '1');
INSERT INTO `content` VALUES   ( '69', '0', '“支付宝们”会被银行势力给干掉吗？', '', '“支付宝们”会被银行势力给干掉吗？', '
				<center><img border=\"1\" alt=\"“支付宝们”会被银行势力给干掉吗？\" src=\"http://img.yixieshi.com/192GL5K-0.jpg!680\" width=\"540\" height=\"360\"></center><p>　　8月28日，央行有关网络支付的新规征求意见结束，很多人开始担心，以支付宝、财付通等为代表的第三方支付会不会遭受当头一棒，甚至被扼杀呢?</p><p>　　这两天，人们开始关注支付宝转账的问题，一是用支付宝向银行卡转账，一个月最多20万，每天最多5万，二是，如果新规执行，支付宝向非本人银行卡转账将受限。</p><p>　　但是，即便号称史上最严的支付新规得以不加修改的实施，也不会改变目前支付市场的格局，也改变不了银行整体衰落的走势，只可能让银行在保护伞中温水煮青蛙。</p><p>　　银行业制定新规，让老百姓的使用体验下降，势必更加恶化银行系统的社会声誉，增加社会舆论对银行的整体不信任。要知道，银行业只是建立在信任的基础上，任何伤害信任的行动都可给银行带动深远的负面影响。可以这样讲，对于网络支付的限制，看似对银行业的保护，实际上却是对银行最大的伤害，只是这个伤害是深层次的还没被觉察。</p><p>　　网络第三方支付的安全性已经饱受考验，得到了各方认可。与此相反，最近银行的安全性却被质疑。备受社会关注的工商银行网络银行存款被骗走事件还在发酵，虽然工商银行坚称自己没责任，但黑客和诈骗分子轻易的就可以进入被害者账户，而且方便的操作理财产品，难道其中就没有银行方面的责任?</p><p>　　在这方面，第三方支付企业的安全管理就比银行好，还提供账户安全保险。现实中，一个客户被人用假身份证办理的银行卡绑定支付宝取走了钱，银行拒绝承担任何责任，但支付宝却进行了无理由赔付，你说让老百姓信任谁?</p><p>　　在严格的支付新规下，人们还会选择用支付宝给其他人转账吗?答案是，肯定会。只是，如果强制不让转给其他人的银行卡，那么，支付宝之间的直接转账会大大增加，会更加导致银行的储蓄卡被冷落。人们的创新能力是无穷的，只要银行的垄断利润还存在，在互联网大通道里，总是会找到合适的途径。</p><p>　　银联收取线下商户高额的手续费，商家有苦不能言，在第三方支付活跃时候，终于可以有更多的选择，即便银联等进行了重重阻挠，可依然没有阻挡住“钱”的诱惑。</p><p>　　昨天，收到了工商银行给我的短信提醒，告知我，因为资金量的下降和使用量的变动，我的工商银行客户级别将开始下降。其实，即便你在提醒，我也绝对不会再把更多的资金存入工行。工行对网络支付设置的层层限制，过度不方便的使用，让我对其彻底失去信心。</p><p>　　以前，钱放到银行是最安全的，看现在呢?银行也不再对资金给予彻底的保障，即便存款也不是无限制的进行保底，已经和其他金融机构没有区别。对于理财客户，多家银行收益持续降低，甚至竟然在最近提前终止了很多长期理财产品的进程，但却没有听说谁获得了补偿?</p><p>　　在面对互联网金融冲击的时候，银行业不是去找突围之策，而是寄希望于特殊保护。既降低自己的客户信任度和资金保证程度，又无法为客户提供更高收益，这样的金融怎么可能受到老百姓的喜欢?</p><p>　　青山遮不住，毕竟东流去!面对互联网金融大潮，银行们觉醒了吗?</p>		
			', '　　8月28日，央行有关网络支付的新规征求意见结束，很多人开始担心，以支付宝、财付通等为代表的第三方支付会不会遭受当头一棒，甚至被扼杀呢?　　这两天，人们开始关注支付宝转账的问题，一是用支付宝向银行卡转账，一个月最多20万，每天最多5万，二是，如果新规执行，支付宝向非本人银行卡转账将受限。　　但是，即便号称史上最严的支付新规得以不加修改的实施，也不会改变目前支付市场的格局，也改变不了银行整…', '20150831094310', '20150831095754', '', NULL, '1', '1', '', '1');
INSERT INTO `content` VALUES   ( '66', '0', '看见音乐 – 智能推荐新鲜独立音乐[iOS/Android]', 'http://rc.feedsportal.com/r/234567589833/u/49/f/615575/c/33935/s/4936390e/sc/5/rc/1/rc.img\" border=\"0', '看见音乐 – 智能推荐新鲜独立音乐[iOS/Android]', '看见音乐 是一个音乐平台，“是亚洲最大的独立音乐曲库”，旗下拥有独立音乐电台、推荐、杂志等多款客户端。@App [&#8230;]<br clear=\'all\'/><br/><br/><a href=\"http://rc.feedsportal.com/r/234567589833/u/49/f/615575/c/33935/s/4936390e/sc/5/rc/1/rc.htm\" rel=\"nofollow\"><img src=\"http://rc.feedsportal.com/r/234567589833/u/49/f/615575/c/33935/s/4936390e/sc/5/rc/1/rc.img\" border=\"0\"/></a><br/><br/><a href=\"http://rc.feedsportal.com/r/234567589833/u/49/f/615575/c/33935/s/4936390e/sc/5/rc/2/rc.htm\" rel=\"nofollow\"><img src=\"http://rc.feedsportal.com/r/234567589833/u/49/f/615575/c/33935/s/4936390e/sc/5/rc/2/rc.img\" border=\"0\"/></a><br/><br/><a href=\"http://rc.feedsportal.com/r/234567589833/u/49/f/615575/c/33935/s/4936390e/sc/5/rc/3/rc.htm\" rel=\"nofollow\"><img src=\"http://rc.feedsportal.com/r/234567589833/u/49/f/615575/c/33935/s/4936390e/sc/5/rc/3/rc.img\" border=\"0\"/></a><br/><br/><a href=\"http://da.feedsportal.com/r/234567589833/u/49/f/615575/c/33935/s/4936390e/sc/5/a2.htm\"><img src=\"http://da.feedsportal.com/r/234567589833/u/49/f/615575/c/33935/s/4936390e/sc/5/a2.img\" border=\"0\"/></a><img width=\"1\" height=\"1\" src=\"http://pi.feedsportal.com/r/234567589833/u/49/f/615575/c/33935/s/4936390e/sc/5/a2t.img\" border=\"0\"/><img width=\'1\' height=\'1\' src=\'http://appinn.feedsportal.com/c/33935/f/615575/s/4936390e/sc/5/mf.gif\' border=\'0\'/>', '看见音乐 是一个音乐平台，“是亚洲最大的独立音乐曲库”，旗下拥有独立音乐电台、推荐、杂志等多款客户端。@App [&#8230;]', '20150828001655', '20150828001655', 'Sun, 23 Aug 2015 06:31:38 GMT', NULL, '1', '1', 'http://www.appinn.com/kanjian-music/', '1');
INSERT INTO `content` VALUES   ( '67', '0', '用SAAS造一个创业公司？', '', '用SAAS造一个创业公司？', '<p><em>作者碎碎念：最近在交流的过程中，其实发现<strong>很多的公司仍处于传统方式进行管理</strong>，比如一些OA、CRM，其实还是自己的团队自己开发的一套产品，对于一些新型创业公司来讲，如果团队是非技术基因的团队，其实使用PAAS或SAAS产品不是很多，总结一下，之前“老鹰”在自己的公众号里有整理发布过一篇关于《推荐给初创团队几个工具》的文章，我接着创业前辈的文章，进行一些适当的补充。</em></p><p><em>本文作者曲子龙，首发微信公众账号“网络尖刀”。</em></p><p>因为创业方向的不同，我把产品分为两大类，一类是<strong>WEB为主的产品</strong>、另一类是<strong>APP方向的创业产品</strong>，加上<strong>基础服务</strong>，我分做三大块，首先来讲的是基础服务的产品。</p><blockquote>基础服务</blockquote><p>提及到基础服务，我们就先来说说基础的云服务，不管你是有一个APP、还是一个WEB网站，你想要放在互联网上，总得有个存放他的地方，所以这个时候就需要了云主机一类的云服务。</p><p><strong>云服务</strong></p><p><em>阿里云、青云、Ucloud</em></p><p>关于云服务，我大概推荐的有这三个，阿里云基本上大家都很清楚了，包括之前的万网的业务现在也与阿里云进行了整合，在业内阿里云应该算是一个很完善的云服务了，尖刀的一些业务其实就在阿里云上，不过一些机制比较烦，如果网站被攻击，自己来处理相对很多东西不是特别可控，比较适合小白用户，花钱解决就可以了。</p><p>青云、Ucloud两家我们还算蛮熟的，初创团队可以考虑一下，青云，你们最爱的36kr其实就是在青云之上，当然如果你是做游戏的，我更推荐使用Ucloud，专业的人干专业的事儿Ucloud是做游戏云比较专业的云服务厂商。</p><p><strong>云存储</strong></p><p><em>七牛云</em></p><p>图片、音频这些占用资源浪费服务器性能的东西，最好的选择是放一个靠谱的第三方平台，七牛云存储就是做这方面的事情的，目前爱尖刀的主站已经全部接入到七牛，图片这些耗费资源的东西交给了七牛单独处理，就不需要占用服务器自身的流量带宽，网站的速度也跟着奔跑了起来，前段时间我们遭遇了“搜索引擎的DDOS”使用七牛云存储帮了我们很大的忙，减轻了不少服务器自身的压力。</p><p><strong>域名、DNS服务</strong></p><p><em>Dnspod</em></p><p>DNS服务，最稳定可靠的无可厚非要归DNSPOD莫属，圈内奶罩大牛的杰作，不过现在项目归TX了，奶罩出来做了“洋葱”，不过DNSPOD的根基很好，前段时间体验了一下他们的域名注册，貌似是和新网打通的。</p><p><em>万网</em></p><p>Hichina，万网的DNS其实也不错，我早期也用了一段时间万网的DNS服务，那时候万网还没并入阿里云，当然使用主要是因为域名是在万网注册的，服务很不错，比较喜欢万网注册服务里后推出的隐藏注册信息功能，麻麻再也不用担心被社工了。。。当然这是开玩笑的。</p><p><em>易名</em></p><p>如果注册不到好的域名，可以推荐你到Ename看看，易名的域名交易很不错，我做过站群，当时剩下的200多个数字米，都是在易名出手的，有点后悔了，留到现在出手就很值钱了。</p><p><strong>邮箱、短信服务</strong></p><p><em>腾讯企业邮</em></p><p>Gmail挂了，已经与我们远去，至于因为什么我就不说了，企业内部通讯我推荐只有腾讯企业邮，其他的一些邮箱我就不多说了，比如安全性就很难保证的。邮件其实还是一个很隐私的信息传播，所以不能马虎。</p><p><em>sendcloud</em></p><p>对用户的邮件发送服务，我比较看好Sendcloud，自己也是曾经的铁杆用户，很稳定，当然到达率这个还要看自己的努力了。适合平台与用户的邮件互动。</p><p><em>智验</em></p><p>现在很多平台为了保证用户是真实用户，尤其是一些APP，所以选择了用手机注册，验证码验证方式来设定用户，间接的也把用户信息留下了，如果一个人在平台干坏事，我至少有他“真实”的手机。所以手机验证码成为了一门生意，智验就是一款不错的产品，也是专门服务于APP短信验证的。</p><p><strong>数据统计</strong></p><p><em>CNZZ统计</em></p><p>CNZZ是一款比较不错的网站统计，其实也是一个老牌的统计系统了，挂一段JS代码即可统计用户应该是目前最多的，其实当年还有一个51.la，不过这些年一直不瘟不火的，CNZZ其实也是阿里系的。</p><p><em>友盟</em></p><p>移动APP应用统计分析，我推荐是友盟，尤其是做ASO的同学，下载量、日活、月活，统计分析很NICE。没错，这也是阿里系的企业。</p><p><em>诸葛IO</em></p><p>友盟是比较综合性的一个统计分析，如果做精细化用户运营分析，你可以考虑一下诸葛IO，尤其是对于做金融、游戏领域的运营同学来讲，是一款比较不错的分析工具，暴走、墨迹天气、有妖气，这些耳熟能详的产品其实都是他们的用户。</p><p><strong>APP开发</strong></p><p><em>APIcloud</em></p><p>总是听到很多人讲，我有一个很牛逼的想法，想要改变什么什么，是的，现在我就差实现产品了。不管你能不能改变世界，首先你得有个产品，如果你想要一个APP，那么APicloud比较适合你，技能不是盖的。</p><p>之前我在公众号里有推荐过一个七夕讨好女神技能里就有提及过这个产品。</p><p><em>猿团</em></p><p>如果自己真的没有开发能力，需要外包来帮助你开发，毕竟专业的人做专业的事嘛，我想这个时候猿团就比较适合你了，成都本土创业的小伙子，也是我很好的基友，信猿团你就对了。</p><blockquote>周边服务</blockquote><p><strong>性能监测</strong></p><p><em>OneAPM</em></p><p>总是觉得产品运行速度慢，开发中有哪些问题？想要优化服务器性能？这种事情交给OneAPM就对了。从端到端的应用性能监测，时刻帮你发现那些偷懒的代码和SQL语句，网络尖刀其实就是在用他们，是我比较喜欢的一款SAAS产品，也是我目前用到最喜欢的SAAS级性能监测。</p><p>当然不只是我在用，豆瓣、爱奇艺、360很多大企业都在用。</p><p><strong>工单系统</strong></p><p><em>逸创云客服</em></p><p>朋友圈里我已经忘记了推荐过多少次逸创云客服了，一部分原因是因为我和叶翔还有李成是很好的朋友，另外一部分原因也是产品确实好用，工单、电话、IM、帮助WIKI，各种客服反馈方式，大大的提高了客服的工作效率，早期我就特别喜欢万网的工单系统，逸创云客服就是在做这方面的事情，可以让你快速拥有一个SAAS级的客服中心，你只需要解析个独立域名就可以，太简单了。</p><p>逸创云客服是支持SSO的，所以不用考虑用户如何过来登陆的问题。</p><p><strong>移动支付</strong></p><p><em>ping++</em></p><p>总是看到身边的一些创业团队，什么都要自己干，自己搭，我很窝心，为什么这么多SAAS级的产品就不知道用呢？明明你的APP能够享有支付功能只需要几行代码十几分钟的事情，却偏偏选择了挨个地方申请接口等待审核，做各种对接浪费了好几天。</p><p>ping++是一款特别简单的移动支付解决方案，一个SDK全搞定。做移动创业项目相关的不妨来试试，反正我用的很舒服，有兴趣的可以去体验一下。</p><p><strong>团队OA、办公协同</strong></p><p><em>tower</em></p><p>来成都总是听着老沈的名字，但是一直都未见过其人，对于小团队的远程协同、项目推进，尤其偏向简单事件型的协同，我推荐使用tower。并且也确实是tower的忠实用户，网络尖刀运营团队使用的就是tower。</p><p><em>销售易</em></p><p>客户跟进的怎么样了？上次联系是什么时候？具体聊了什么内容？小样的记不住了吧？销售易是主要帮助销售人员进行销售管理的一款CRM工具，之前在做客户对接的时候，还是比较喜欢用他们。</p><p><em>推事本</em></p><p>如果你需要一款比较综合的OA+CRM管理系统，那么选择推事本可能会比较适合一些，功能齐全，适合一些大型公司进行团队管理，研发、技术、客服、销售一个平台全都搞定。</p><p><strong>表单管理</strong></p><p><em>麦客CRM</em></p><p>我想要一个在线报名的活动表单？我想和用户收集一些有用的数据？做产品调查？选择麦客CRM就对了。一款特别简单的信息收集工具，出自萌妹子小卡之手，也是36kr力推的项目，反正是我用过最简单好用的表单收集。</p><p><strong>代码管理</strong></p><p><em>Github</em></p><p>最优质的开源代码平台一定是非Github莫属，这个自称全球最大的“程序猿交友”社区，拥有着百万级的开发者用户。为开发者提供git库的同时，还为开发者提供了一个WEB页面，搞开发的都懂。</p><p><em>coding</em></p><p>Coding是国内的一个代码托管、项目管理平台，为什么介绍了github又跑来介绍coding呢？原因很简单，Github是全球的产品，很多地方其实不是特别符合国情，比如访问的问题，这里就不多说了。</p><p>这里我要重点的说是，coding的开发协作以及Coding的码市，程序员远程开发+任务众包，让外部的程序员成为你产品开发者，在目前这种程序员稀缺的环境下，不得不说这是一个非常好的选择。</p><p>我们内部的扫描器是在Coding上远程写作完成的，用过的人才又资格说他好，反正我就说他好，你管我咯？</p><p><strong>投稿请发tips@36kr.com，点击查看<a href=\"http://36kr.com/pages/contribute\">投稿细则</a>。</strong></p>', '作者碎碎念：最近在交流的过程中，其实发现很多的公司仍处于传统方式进行管理，比如一些OA、CRM，其实还是自己的团队自己开发的一套产品，对于一些新型创业公司来讲，如果团队是非技术基因的团队，其实使用PAAS或SAAS产品不是很多，总结一下，之前“老鹰”在自己的公众号里有整理发布过一篇关于《推荐给初创团队几个工具》的文章，我接着创业前辈的文章，进行一些适当的补充。本文作者曲子龙，首发微信公众账号“网络…', '20150828001710', '20150828001710', 'Thu, 27 Aug 2015 18:58:14 +0800', NULL, '1', '1', 'http://36kr.com/p/5036843.html', '3');
INSERT INTO `content` VALUES   ( '48', '10', 'PS画同心圆并将圆心至于画布中央', '/upload/20150819124603643.png', 'PS画同心圆并将圆心至于画布中央', '<div>1. 新建2个层 A 和 B</div>
<div>2. 分别在A层和B层画2个圆，用椭圆选框工具（不要用椭圆工具，这个是形状，需重建选区),画好后直接填充。</div>
<div>3. 同时选中A和B层， 点图层面板左下角的链接图层(链接以后的调整任意一层的位置另外一个层会同时移动)。</div>
<div><img src=\"/upload/20150819124603643.png\" style=\"width: 267px;\"><br></div>
<div><br></div>
<div>4. 点选\"移动工具\",将A和B，分别垂直居中对齐和水平居中对齐</div>
<div><img src=\"/upload/20150819124611457.png\" style=\"width: 538px;\"><br></div>
<div><br></div>
<div>5. 将A，B同时放到画布中央， 同时选择A和背景层，重复4</div>
<div>6. 去除画布空白区域。“图形”--“画布大小”调整。</div>', '1. 新建2个层 A 和 B2. 分别在A层和B层画2个圆，用椭圆选框工具（不要用椭圆工具，这个是形状，需重建选区),画好后直接填充。3. 同时选中A和B层， 点图层面板左下角的链接图层(链接以后的调整任意一层的位置另外一个层会同时移动)。4. 点选\"移动工具\",将A和B，分别垂直居中对齐和水平居中对齐5. 将A，B同时放到画布中央， 同时选择A和背景层，重复46. 去除画布空白区域。“图形”--…', '20150819124619', '20150821150403', '', NULL, '1', '1', '', '4');
INSERT INTO `content` VALUES   ( '49', '7', 'quick-cocos2dx自定义FPS显示信息', '/upload/20150819142145927.png', 'quick-cocos2dx自定义FPS显示信息', '<div>1. 在quick中打开或关闭FPS显示信息有2种方法</div>
<div><br></div>
<div>一是通过修改config.lua中的DEBUG_FPS中的值;</div>
<div>二是通过程序控制cc.Director:getInstance():setDisplayStats(true)&nbsp;</div>
<div><br></div>
<div>2.自定义FPS值及其显示信息</div>
<div><br></div>
<div>自定义帧数，系统默认值为60帧，现修改为每秒50帧</div>
<div><span style=\"line-height: 1.42857143;\">cc.Director:getInstance()</span>:setAnimationInterval(1/50)<br></div>
<div><br></div>
<div>可通过一个Label来显示FPS或其他信息</div>
<div>self.label = cc.ui.UILabel.new({text = \"\", size = 18, color = cc.c3b(71,163,35) })</div>
<div>self.label:align(display.BOTTOM_RIGHT, display.width, display.top - 30):addTo(self)</div>
<div><br></div>
<div>然后在帧更新函数中更新Label的文本</div>
<div>self.label:setString(string.format(\"FPS %.1f\", 1/dt ) )</div>
<div><br></div>
<div><img src=\"/upload/20150819142145927.png\" style=\"width: 254px;\"><br></div>', '1. 在quick中打开或关闭FPS显示信息有2种方法一是通过修改config.lua中的DEBUG_FPS中的值;二是通过程序控制cc.Director:getInstance():setDisplayStats(true)2.自定义FPS值及其显示信息自定义帧数，系统默认值为60帧，现修改为每秒50帧cc.Director:getInstance():setAnimationInterval(…', '20150819142446', '20150821145354', '', NULL, '1', '1', '', '2');
INSERT INTO `content` VALUES   ( '55', '0', '终于有人把“约炮经济学”讲清楚了', 'http://www.yixieshi.com/images/yixieshi_wx.gif', '终于有人把“约炮经济学”讲清楚了', '
				<center><img style=\"HEIGHT: 397px; WIDTH: 463px\" border=\"1\" alt=\"\" src=\"http://img.yixieshi.com/21253V2M-0.png!680\" width=\"853\" height=\"694\"></center><p>　　1、交易学与择偶观。</p><p>　　假如把男人、女人分为ABCD四种优秀程度，那现在的现状就是，A男想找B女，B男想找C女，C男找D女，所以D男就剩了。反之，女人方面却不同，即是，ABCD女都想找A男。最后结果是剩下A女和D男。</p><p>　　经济学里有个案例：两个人在森林里遇到一只熊，那么对手不会是熊!只要比另一个人快一步就胜利。</p><p>　　2、博弈论与追女生。</p><p>　　如四个男生都去追一个漂亮女生，那她一定会摆足架子，谁也不答理;这时男生再去追别的女孩，别人也不会接受，因为没人愿当次品。但是，如果他们四个先追其她女生，那个漂亮女孩就会被孤立，这时再追她就简单多了。</p><p>　　这就是数学家纳什，关于博弈论最简单表述。</p><p>　　3、“天下没有免费的午餐”由来。</p><p>　　这句话最早由经济学家弗里德曼提出来。它的本义是即使您不用付钱吃饭，可您还是要付出代价的。因为您吃这顿饭的时间，可以用来做其他事情，比如谈一笔100万的生意，您把时间用于吃这顿饭，就失去了这些本来能有的价值。</p><p>　　这，就是对于机会成本朴素的概念。</p><p>　　4、笑话经济学。</p><p>　　课堂上，教授讲授经济学：“何谓第一产业?喂牛，养羊。何谓第二产业?杀牛，宰羊。何谓第三产业?吃牛肉，喝羊汤。”有学生问：“那么，文化产业呢?”</p><p>　　教授眼睛一亮：“问得好!不愧是俺的好学生。”然后回答：“所谓文化产业，就是吹牛皮，出羊相!\"</p><p>　　5、有个说法叫“穷人税”。</p><p>　　最典型的是买彩票的人大多都是穷人(经常买彩票的人请不要介意)，这是他们承受能力和支付能力范围以内能够实现财富剧增的少有机会，但中奖毕竟是小概率，长期以往，细水长流(不过是往外流)，出得多、进得少，就权当缴税了。</p><p>　　6、帕累托分布。</p><p>　　把全世界每个人拥有的财富从大到小排起来，一边是一个纤细但高耸入云的头，另一边是漫长的一望无际，低矮的让人绝望的尾。</p><p>　　这样的分布，在经济学里被灌名为“帕累托分布”。</p><p>　　7、无利润投资。</p><p>　　请举例说明什么叫无利润投资，经济学教授提问。</p><p>　　“带自己的妹妹出去玩!”，一个男学生抢答道。</p><p>　　8、幸福公式。</p><p>　　经济学中有个公式：幸福=效用：期望值。如果您男友发奖金，拿到1000块，可您期望他给自己买10000块的LV包，1000除以10000，幸福感只有0.1。但如果您的期望是让男友请自己吃顿200块的西餐，1000除以200，幸福感是5。</p><p>　　要获得爱情中的幸福，最好不要让欲望影响您的生活。</p><p>　　9、长线投资。</p><p>　　一小女孩拿着三角钱来到瓜园买瓜，瓜农见她钱太少，便想糊弄小姑娘离开，指着一个未长大的小瓜说：“三角钱只能买到那个小瓜”，小女孩答应了，兴高采烈的把钱递给瓜农，瓜农很惊讶：“这个瓜还没熟，您要它怎么吃呢?”小女孩：“交上钱这瓜就属于我了，等瓜长大熟了我再来取吧。”</p><p>　　10、快乐VS痛苦。</p><p>　　一次捡￥75，和先捡￥50后捡￥25，选哪个?一次丢￥75，和先丢￥50再丢￥25，选哪个?实验证明，绝大多数人选分开捡￥75，一起丢￥75。</p><p>　　这，就是经济学的快乐痛苦的原则：n个好消息要分开发布;n个坏消息要一起发布;一个大的坏消息和一个小的好消息，分别公布;一个大的好消息和一个小的坏消息，一起公布。</p><p>　　11、什么是投行?</p><p>　　有一个投行菜鸟问，什么是投行?前辈拿了一些烂水果问他：“您打算怎么把这些水果卖出去?”菜鸟想了半天说：“我按照市场价打折处理掉。”</p><p>　　这位前辈立刻把头摇得像拨浪鼓一样，然后拿起一把水果刀，把烂水果去皮切块，弄个漂亮的水果拼盘：“这样，按照几十倍的价格卖掉”。</p><p>　　12、泡沫经济是如何形成的?</p><p>　　当您决定上网聊天，这叫创业;上来一看MM真多，这叫市场潜力大;但GG也不少，这叫竞争激烈;您决定吸引美女眼球，这叫定位;您说您又帅又有钱，这叫炒作;您问“谁想和我聊天”，这叫广告;您又问“有美女吗”，这叫市场调查;有200人同时答“我是美女”，这叫泡沫经济。</p><p>　　13、经济学笑话：如果您有2头母牛……</p><p>　　美国：卖掉1头母，买回1头公，牛群增长，效益增加，最后卖掉退休。</p><p>　　法国：继续罢工，因为您想要得到另外的3头母牛。</p><p>　　日本：创造卡通母牛，卖到全世界。</p><p>　　德国：基因改造，使母牛能活100岁，日产10桶牛奶。</p><p>　　英国：后来都疯了。</p><p>　　俄罗斯：数一遍，5头;再数一遍，10头。烦!打开第3瓶伏特加……</p><p>　　14、超低价停车。</p><p>　　富豪到华尔街银行借了5000元贷款，借期为两周，银行贷款须有抵押，他用停在门口的劳斯莱斯做抵押。银行职员将他的劳斯莱斯停在地下车库里，然后借给富豪5000元。</p><p>　　两周后富豪来还钱，利息共15元，银行突然职员发现富豪帐上有几百万，问为啥还要借钱?富豪说：停车费15元两周的停车场，在华尔街是永远找不到的!</p><p>　　15、人傻、钱多，速去!</p><p>　　地球村居民马哈蒂尔找到小区片警格林斯潘报案，说家里东西被偷了，小偷可能是惯犯索罗斯。片警格林斯潘嘿嘿一笑，说：“也不能全怪小偷嘛，应该多从自己身上找原因。谁让您们家的锁好撬呢?”居民马哈蒂尔不满地说：“那小偷怎么不去偷中国和印度呢?”片警格林斯潘叹了一口气，说：“中国和印度的院墙太高了，索罗斯爬进爬出的不方便，要是再摔下来出了人命，不还是我的事吗?”</p><p>　　小偷索罗斯在旁边听了之后，冷笑一声：“在他们的院墙上掏几个洞不就解决问题了吗?”片警格林斯潘赶紧看看四周，小声说：“我们已经派保尔森去中国了，听说二零一八年底就可以挖开几个大窟窿。”小偷索罗斯听了大喜，拿出手机就开始给同伴们发短信：“人傻、钱多，速去!”</p><p><br></p><div id=\"moreitemforarticle\"><p>
				</p><p>　　<b>关注 <a href=\"http://www.yixieshi.com/\">互联网的一些事</a> 官方微信，回复ID \" 22357 \" 即可在微信里阅读本篇内容。</b></p>
				<p>　　在查找公众号中搜索：imyixieshi，或者扫描下方二维码快速关注。</p>
				<p>　　<img src=\"http://www.yixieshi.com/images/yixieshi_wx.gif\" alt=\"关注互联网的一些事微信\"></p>
 　　本文链接：<a href=\"http://www.yixieshi.com/it/22357.html\" target=\"_blank\">http://www.yixieshi.com/it/22357.html</a><p></p><p>
====关于「互联网的一些事」====</p>
<p>
	　　<span style=\"color:#ffffff;\"><span style=\"background-color:#008080;\"><strong>互联网的一些事</strong> （ <a href=\"http://www.yixieshi.com/\" style=\"color:#ffffff;\" target=\"_blank\">http://www.yixieshi.com</a> ）</span></span>&nbsp; —— &nbsp;聚焦互联网前沿资讯，网络精华内容，交流产品心得。 每天为你速递最新、最鲜、最有料的互联网科技资讯！</p>
<p>
	　　<strong>官方微博：&nbsp;</strong><a href=\"http://weibo.com/yixieshi\" target=\"_blank\">@互联网的一些事</a></p>
<p>
	　　<strong>官方微信：&nbsp;</strong>互联网的一些事(ID：imyixieshi)</p>
<p>
	　　如果您对互联网产品有独特的想法和见解，欢迎给我们投稿。邮箱：tougao#yixieshi.com （请将“#”修改为“@”）</p></div>		
			', '　　1、交易学与择偶观。　　假如把男人、女人分为ABCD四种优秀程度，那现在的现状就是，A男想找B女，B男想找C女，C男找D女，所以D男就剩了。反之，女人方面却不同，即是，ABCD女都想找A男。最后结果是剩下A女和D男。　　经济学里有个案例：两个人在森林里遇到一只熊，那么对手不会是熊!只要比另一个人快一步就胜利。　　2、博弈论与追女生。　　如四个男生都去追一个漂亮女生，那她一定会摆足架子，…', '20150825133123', '20150825133254', '', '20150825141906', '1', '1', '', '3');
INSERT INTO `content` VALUES   ( '41', '7', '完全掌握粒子系统（2） - 彻底弄清楚每一个参数', '', '完全掌握粒子系统（2） - 彻底弄清楚每一个参数', '<div>&nbsp; &nbsp; 粒子系统中的参数很多，但并不是无限多，只要有足够耐心是可以逐个搞清楚的。本次实验中作者对例子系统的参数进行了粗略统计和分类。共3大类，19个小类，38个参数。以下面的例子描述每个参数的具体含义，如果真要得心应手，光靠看一遍是没用的，必须一个一个参数自己调一遍。</div><div><br></div><div style=\"padding: 0px 20px; background: rgb(238, 238, 238);\"><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">function TestScene:ctor()</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 以指定粒子数目创建粒子系统</div><div style=\"font-size: 1em; line-height: 1.5em;\">local emitter = cc.ParticleSystemQuad:createWithTotalParticles(1000)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--<a href=\"http://www.bit1010.com/default_41.html\" target=\"_blank\">设置粒子属性 共3大类，19个小类，38个参数</a></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 一. 粒子常规属性设置 &nbsp;共6小类 18个参数</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 1. 粒子大小</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 粒子出生时的大小为多少个像素</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartSize(100.0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 出生时大小的浮动值</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartSizeVar(100.0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 粒子消亡时的大小 cc.PARTICLE_START_SIZE_EQUAL_TO_END_SIZE 表示一生中大小不变</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndSize(cc.PARTICLE_START_SIZE_EQUAL_TO_END_SIZE )</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndSizeVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 2. 粒子的颜色</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- cc.c4f 的4个数值分别代表红 绿 蓝 &nbsp;透明度 取值范围都是0到1</div><div style=\"font-size: 1em; line-height: 1.5em;\">其中透明度实际上是可见度，如果为0表示可见度为0，即完全看不到。</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartColor(cc.c4f(0.5, 0.5, 0.5, 1.0))</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartColorVar(cc.c4f(0.5, 0.5, 0.5, 1.0))</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndColor(cc.c4f(0.1, 0.1, 0.1, 0.2))</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndColorVar(cc.c4f(0.1, 0.1, 0.1, 0.2))</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--3. 每个粒子的自转速度</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartSpin(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setStartSizeVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndSpin(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setEndSpinVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--4. 粒子的寿命 时间单位：秒</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setLife(2)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setLifeVar(0.3)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--5. 粒子的发射角度 和允许角度的浮动范围</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setAngle(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setAngleVar(360)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--6. 粒子的出生坐标</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setPosition(display.cx, display.cy)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setPosVar(cc.p(0, 0))</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">--<a href=\"http://www.bit1010.com/default_41.html\" target=\"_blank\"> 二 .粒子的发射模式 &nbsp;共8小类 14个参数</a></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;--1. 半径模式 从圆心向周围发射粒子</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setEmitterMode(cc.PARTICLE_MODE_RADIUS)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 2. 重力模式 向重力加速度的向量方向发射粒子</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- emitter:setEmitterMode(cc.PARTICLE_MODE_GRAVITY)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">if emitter:getEmitterMode() == cc.PARTICLE_MODE_RADIUS then</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- 半径模式下以下属性生效</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- a. 粒子生成时距离圆心的距离 即起始半径</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setStartRadius(100)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setStartRadiusVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- b. 消亡时的半径</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setEndRadius(500)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setEndRadiusVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- c. 围绕生成点的公转速度</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setRotatePerSecond(10)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setRotatePerSecondVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">else</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- 重力模式下以下属性生效</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- a. 重力的方向</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setGravity(cc.p(0, 0))</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- b. 射出时的速度</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setSpeed(50)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setSpeedVar(10)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- c. 半径加速度</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setRadialAccel(80)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setRadialAccelVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; -- d. 正切加速度</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setTangentialAccel(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; &nbsp; emitter:setTangentialAccelVar(0)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">end</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;--<a href=\"http://www.bit1010.com/default_41.html\" target=\"_blank\"> 三. 系统属性 共5小类 6个参数</a></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;-- 1. 发射速率，即每秒发射多少个粒子</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;emitter:setEmissionRate(emitter:getTotalParticles() / emitter:getLife())</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 2. 粒子系统的持续时间 -1表示无限时间</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setDuration(-1)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 3. 渲染方式</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; -- 用于系统渲染的OpenGL的渲染函数</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;-- emitter:setBlendFunc(cc.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA))</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp;emitter:setBlendFunc(cc.blendFunc(gl.SRC_ALPHA , gl.ONE_MINUS_SRC_ALPHA))</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">blendFunc的2个参数的取值范围都是<br></div><div><span style=\"line-height: 21px;\">gl.ZERO</span></div><div><span style=\"line-height: 21px;\">gl.ONE</span></div><div><span style=\"line-height: 21px;\">gl.SRC_COLOR</span></div><div><span style=\"line-height: 21px;\">gl.ONE_MINUS_SRC_COLOR</span></div><div><span style=\"line-height: 21px;\">gl.SRC_ALPHA</span></div><div><span style=\"line-height: 21px;\">gl.ONE_MINUS_SRC_ALPHA</span></div><div><span style=\"line-height: 21px;\">gl.DST_ALPHA</span></div><div><span style=\"font-size: 1em; line-height: 1.5em;\">gl.ONE_MINUS_DST_ALPHA&nbsp;</span></div><div style=\"font-size: 1em; line-height: 1.5em;\"><div style=\"font-size: 1em; line-height: 1.5em;\">其中，来源混合模式gl.SRC_ALPHA和目标混合模式gl.ONE_MINUS_SRC_ALPHA配合使用,得到的 将会是完全透明的粒子。</div><div style=\"font-size: 1em; line-height: 1.5em;\">而来源混合模式gl.SRC_ALPHA和目标混合模式gl.ONE经常配合使用来生成递增型 的混合效</div></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; -- 是否启用高亮渲染</div><div style=\"font-size: 1em; line-height: 1.5em;\">&nbsp; emitter:setBlendAdditive(true)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 4. 粒子的移动方式 &nbsp;具体区别，在后续的调试过程中再做区分</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 自由移动 cc.POSITION_TYPE_FREE &nbsp; &nbsp;0x0</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 一组一组移动 cc.POSITION_TYPE_GROUPED &nbsp;0x2</div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 相对移动 cc.POSITION_TYPE_RELATIVE 0x1</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setPositionType(cc.POSITION_TYPE_FREE)</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">-- 5. 纹理</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setTexture(cc.Director:getInstance():getTextureCache():addImage(\"a.png\"))</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:setAutoRemoveOnFinish(true)</div><div style=\"font-size: 1em; line-height: 1.5em;\">emitter:addTo(self) &nbsp;</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div><div style=\"font-size: 1em; line-height: 1.5em;\">end</div><div style=\"font-size: 1em; line-height: 1.5em;\"><br></div></div>', '粒子系统中的参数很多，但并不是无限多，只要有足够耐心是可以逐个搞清楚的。本次实验中作者对例子系统的参数进行了粗略统计和分类。共3大类，19个小类，38个参数。以下面的例子描述每个参数的具体含义，如果真要得心应手，光靠看一遍是没用的，必须一个一个参数自己调一遍。function TestScene:ctor()-- 以指定粒子数目创建粒子系统local emitter = cc.Particle…', '20150813103824', '20150815234313', '', '20150815220329', '1', '1', '', '17');
INSERT INTO `content` VALUES   ( '51', '7', '一句话讲明白碰撞检测中3个掩码的关系', '', '一句话讲明白碰撞检测中3个掩码的关系', '<div>碰撞检测中有3个掩码参数，共同决定碰撞效果。分别是分类掩码，碰撞掩码，测试掩码。一句话理清3个掩码之间的关系如下:</div><div><br></div><div>当A物体的分类掩码和B物体的碰撞掩码逻辑与非零时，触发碰撞。A和B发生碰撞后，继续检测A物体的分类掩码和B物体的测试掩码逻辑与的结果，继续非零，则发出碰撞消息（即能被回调函数捕获).</div><div>另外有一点需要注意：所有逻辑与的检测均为交叉检测，例如:A物体的分类掩码和B物体的碰撞掩码逻辑与，B物体的分类掩码和A物体的碰撞掩码逻辑与, 需要同时非0。测试掩码检测同理。</div><div><a href=\"http://www.bit1010.com/static/default/51.html\" target=\"_blank\" style=\"color: rgb(255, 0, 0);\">简化描述：仅当CategoryBitmask&amp;CollisionBitmask交叉检测非0时发生碰撞, 发生碰撞后CategoryBitmask和ContactTestBitmask继续做逻辑与，仍非0才发出碰撞消息。</a></div><div><br></div><div>举一个实际的例子：</div><div>现有 HERO（1个)，子弹(多个)，敌人(多个)。 HERO不停发射子弹攻击敌人。碰撞检测需求为: HERO和多个子弹直接互不碰撞。HERO或子弹与敌人接触后，发生碰撞，并发出碰撞消息。</div><div>分析设置如下:</div><div><br></div><div>HERO和子弹一致，即把HERO看做一颗子弹， HERO和子弹不碰但和敌人碰</div><div><br></div><div>1. 碰撞参数设置</div><div>子弹 &nbsp; 分类码0010 &nbsp;碰撞码0001 &nbsp; 0010&amp;0001=0000 则保证内部不碰撞 &nbsp;</div><div>敌人 &nbsp; 分类码1001 &nbsp;碰撞码0010 &nbsp; 1001&amp;0010=0000 内部不碰</div><div>交叉检测 &nbsp; 子弹分类码0010&amp;敌人碰撞码0010=0010 ,且子弹碰撞码0001&amp;敌人分类码1001=0001 即子弹和敌人产生碰撞反应</div><div>&nbsp;</div><div>2.碰撞消息设置 &nbsp;</div><div>子弹 &nbsp; 检测码0001</div><div>敌人 &nbsp; 检测码0010</div><div><br></div><div>子弹分类码0010 &amp; 敌人检测码0010 非零&nbsp;</div><div>敌人分类码1001 &amp; 子弹检测码0001 非零&nbsp;</div><div>由于交叉检测同时非0,所以发出碰撞消息，才能被回调函数捕获</div><div><br></div><div>设置思路：</div><div>1.先保证同一类内部不发生碰撞，不发生碰到就更谈不上发出碰撞消息</div><div>2.调整参数，使不同类之间发生碰撞，且不影响同类之间的碰撞。</div><div>3. 发生碰撞后，继续调整测试码，决定是否发出碰撞消息。</div><div><br></div>', '碰撞检测中有3个掩码参数，共同决定碰撞效果。分别是分类掩码，碰撞掩码，测试掩码。一句话理清3个掩码之间的关系如下:当A物体的分类掩码和B物体的碰撞掩码逻辑与非零时，触发碰撞。A和B发生碰撞后，继续检测A物体的分类掩码和B物体的测试掩码逻辑与的结果，继续非零，则发出碰撞消息（即能被回调函数捕获).另外有一点需要注意：所有逻辑与的检测均为交叉检测，例如:A物体的分类掩码和B物体的碰撞掩码逻辑与，B物体…', '20150825113308', '20150825133234', '', '20150825131636', '1', '1', '', '12');
INSERT INTO `content` VALUES   ( '50', '10', 'PS自动剪裁图像之外的区域', '/upload/20150820123528174.png', 'PS自动剪裁图像之外的区域', '<p>可使用 图像-裁切轻松完成</p><p><img src=\"/upload/20150820123528174.png\" style=\"width: 266px;\"><br></p>', '可使用 图像-裁切轻松完成', '20150820123532', '20150821145125', '', NULL, '1', '1', '', '5');
INSERT INTO `content` VALUES   ( '44', '2', '网站极限优化-百度评分49分提升到95分实战', '/upload/20150815025129456.png', '网站极限优化-百度评分49分提升到95分实战', '<div><br></div>
<div>本文以<a href=\"http://www.bit1010.com\" target=\"_blank\">www.bit1010.com</a>的优化实战为例，打造百度高评分网站。直接切入主题，优化前评分49分，如图:</div>
<div><br></div>
<div><img src=\"/upload/20150815025129456.png\" style=\"width: 560px;\"><br></div>
<div><br></div>
<div><span style=\"font-weight: bold;\"><a href=\"http://www.bit1010.com/default_44.html\" target=\"_blank\">根据诊断建议，总结需要优化的点如下</a></span></div>
<div><span style=\"font-weight: bold;\"><br></span></div>
<div><span style=\"font-weight: bold;\">1. 使用CDN优化JS加载时间</span></div>
<div><span style=\"font-weight: bold;\"><br></span></div>
<div>诊断给出的建议是“合并JS”，主要耗时的是jquery.js，jquery.form.js，分别为2秒和1秒 如图：</div>
<div><br></div>
<div><img src=\"/upload/20150815025149589.png\" style=\"width: 652px;\"><br></div>
<div><br></div>
<div><br></div>
<div>但实际上我们可以看出，合并着这2个公共文件并不科学，那么要减少这2个文件的加载时间的最好方法就是使用CDN，经测试bootstrap的CDN在各个链路都有很好的速度，以下为优化后的截图，速度有了显著的提升。</div>
<div><br></div>
<div><img src=\"/upload/20150815025236942.png\" style=\"width: 634px;\"><br></div>
<div><br></div>
<div> 使用CDN的另一个好处还能降低网站自身的流量压力，何乐而不为呢?</div>
<div><br></div>
<div><span style=\"font-weight: bold;\">2. 启用服务器压缩</span></div>
<div><span style=\"font-weight: bold;\"><br></span></div>
<div>本站用的是PHP和Nginx。开启PHP的压缩，修改php.ini &nbsp;&nbsp;</div>
<div>zlib.output_compression = On&nbsp;</div>
<div>zlib.output_compression_level = 3</div>
<div>修改完后重启PHP，命令： &nbsp;php-fpm &nbsp;restart</div>
<div><br></div>
<div>Nginx则修改 nginx.conf， 最简单的就是在http模块里添加一行</div>
<div>gzip &nbsp;on;</div>
<div>修改完后重新加载配置文件,命令: nginx -s reload</div>
<div><br></div>
<div><span style=\"font-weight: bold;\">3. 检查CSS样式的定义位置</span></div>
<div>务必将css文件和&lt;style&gt;...&lt;/style&gt;定义放到 body标签之前，放到head里。否则页面需要重新渲染，打开速度受到影响。</div>
<div><br></div>
<div><span style=\"font-weight: bold;\">4. 检查JS脚本的定义位置</span></div>
<div>在不打乱整体架构的前提下，尽量将JS放在页面最后。虽然放在最后加载时该block的依然block，但从人机感觉上加载快了很多，可以将对整个页面的显示的影响降到最低。</div>
<div><br></div>
<div><span style=\"font-weight: bold;\">5. 图片大小的定义</span></div>
<div>在确定的图片大小的情况下，定义图片的widht和height属性，减少页面自动计算图片大小的压力。</div>
<div><br></div>
<div>经过以上的几项优化，应该可以有比较大的提升了。这是优化后的分数截图，95分：</div>
<div><br></div>
<div><img src=\"/upload/20150815025327252.png\" style=\"width: 561px;\"><br></div>
<div><br></div>
<div><br></div>
<div><span style=\"font-weight: bold;\"><a href=\"http://www.bit1010.com/default_44.html\" target=\"_blank\">看看剩下的几项</a></span></div>
<div><br></div>
<div>1.&nbsp;<img src=\"/upload/20150815025350771.png\" style=\"line-height: 1.42857143; width: 650px;\"></div>
<div>这里可压缩的数据量实际上非常少，只有33.7k，考虑到如果每次都要压缩，非常麻烦，且实际影响可以忽略，这里的2分果断放弃。</div>
<div><br></div>
<div>2.<img src=\"/upload/20150815025411526.png\" style=\"width: 540px;\"></div>
<div>第一处的js为百度的异步统计代码，因为是异步的，且本代码放到的footer里，footer被很多页面引用，如果为了放到页面最后单独拿到每个页面或为此再加一个公共引用文件，得不偿失。</div>
<div>第二处的js是为了计算页面加载时间用的，这里定义的是起始时间，必须放在页面的最上端。</div>
<div>以上2处扣2分，忍了。</div>
<div><br></div>
<div>3. 还有个1分的扣分项是建议合并js的，由于使用的是外部的cdn上的js，且加载时间已经降到20ms以内了，这个扣分项实际是上分析上的偏颇,直接无视。</div>', '本文以www.bit1010.com的优化实战为例，打造百度高评分网站。直接切入主题，优化前评分49分，如图:根据诊断建议，总结需要优化的点如下1. 使用CDN优化JS加载时间诊断给出的建议是“合并JS”，主要耗时的是jquery.js，jquery.form.js，分别为2秒和1秒 如图：但实际上我们可以看出，合并着这2个公共文件并不科学，那么要减少这2个文件的加载时间的最好方法就是使用CDN，…', '20150815025434', '20150821150516', '', '20150815220314', '1', '1', '', '10');
INSERT INTO `content` VALUES   ( '45', '7', '完全掌握粒子系统（3） - 实战plist文件实现光盾效果', '/upload/20150815235457577.png', '完全掌握粒子系统（3） - 实战plist文件实现光盾效果', '<p>&nbsp; &nbsp; 由于使用程序逐一设置参数，每次执行程序来查看效果速度比较慢，调完一个特效可能要重新运行程序上百次。所有需要使用粒子编辑器，之前提高的粒子编辑器由于需要下载且保存文件的时候经常出问题，这里我们使用在线的粒子编辑器，地址为：</p><p><a href=\"http://www.effecthub.com/particle2dx\" target=\"_blank\">http://www.effecthub.com/particle2dx</a>。 <a href=\"http://www.bit1010.com/default_45.html\" target=\"_blank\">调试粒子务必耐心，仔细思考每个参数每次变化，为什么效果会有这样或那样的变化。</a>使用这个在线工具调试完自己的特效后，点击“导出”即可生成特效的<span style=\"line-height: 1.42857143;\">plist</span><span style=\"line-height: 1.42857143;\">文件, 直接在quick中使用即可。</span><span style=\"line-height: 1.42857143;\">代码：</span></p><p><span style=\"line-height: 1.42857143;\"><br></span></p><div style=\"background:#eee; padding:0px 30px;\"><p><br></p><p>function MainScene:ctor()</p><p>&nbsp; &nbsp; &nbsp; &nbsp; local emitter1 = cc.ParticleSystemQuad:create(\"shiled.plist\")</p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;emitter1:pos(display.cx, display.cy):addTo(self)</p><p></p><p>end</p><p><br></p></div><p><a href=\"http://www.bit1010.com/default_45.html\" target=\"_blank\">最终效果如图</a></p><p><img src=\"/upload/20150815235457577.png\" style=\"width: 316px;\"><br></p><p><br></p><p>其中整合文理的plist内容如下, 请仔细核对和<a href=\"http://ww w.bit1010.com/default_41.html\" target=\"_blank\">http://ww w.bit1010.com/default_41.html</a>中每个参数进行核对，弄清楚每个参数的意义</p><p><a href=\"http://www.bit1010.com/default_45.html\" target=\"_blank\">其中，实现椭圆效果的关键参数是</a><span style=\"background-color: rgb(238, 238, 238);\"><a href=\"http://www.bit1010.com/default_45.html\" target=\"_blank\">sourcePositionVariancex,</a></span><span style=\"line-height: 1.42857143; background-color: rgb(238, 238, 238);\"><a href=\"http://www.bit1010.com/default_45.html\" target=\"_blank\">sourcePositionVariancey, 以及粒子大小出生值，消亡值，以及消亡值的变化值。</a></span></p><p><span style=\"background-color: rgb(238, 238, 238);\">emitterType=0表示重力模式，半径模式该值为1</span><span style=\"line-height: 1.42857143; background-color: rgb(238, 238, 238);\"><br></span></p><div style=\"background:#eee;padding:0 30px;\"><p><br></p><p>&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p>&lt;!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\"&gt;</p><p>&lt;plist version=\"1.0\"&gt;</p><p>&lt;dict&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;angle&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;angleVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;blendFuncDestination&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;integer&gt;1&lt;/integer&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;blendFuncSource&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;integer&gt;770&lt;/integer&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;duration&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;-1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;emitterType&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorAlpha&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorBlue&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorGreen&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0.5&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorRed&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0.5&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorVarianceAlpha&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorVarianceBlue&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorVarianceGreen&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishColorVarianceRed&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishParticleSize&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;300&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;finishParticleSizeVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;300&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;gravityx&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;gravityy&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;maxParticles&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;100&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;maxRadius&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;maxRadiusVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;minRadius&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;particleLifespan&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0.5&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;particleLifespanVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;radialAccelVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;radialAcceleration&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;-300&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotatePerSecond&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotatePerSecondVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotationEnd&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotationEndVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0.0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotationStart&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;rotationStartVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;sourcePositionVariancex&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;15&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;sourcePositionVariancey&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;85&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;sourcePositionx&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;297.99607072691555&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;sourcePositiony&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;514.8919449901769&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;speed&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;speedVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorAlpha&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorBlue&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0.5&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorGreen&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorRed&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;1&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorVarianceAlpha&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorVarianceBlue&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorVarianceGreen&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startColorVarianceRed&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startParticleSize&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;300&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;startParticleSizeVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;tangentialAccelVariance&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;tangentialAcceleration&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;real&gt;0&lt;/real&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;textureFileName&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;string&gt;particle_texture.png&lt;/string&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;key&gt;textureImageData&lt;/key&gt;</p><p><span class=\"Apple-tab-span\" style=\"white-space:pre\">	</span>&lt;string&gt;H4sIAAAAAAAAAwHSAi39iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAAK/INwWK6QAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAJkSURBVHjaxJeJbusgEEW94S1L//83X18M2MSuLd2pbqc4wZGqRLrKBsyZhQHny7Jk73xVL8xpVhWrcmiB5lX+6GJ5YgQ2owbAm8oIwH1VgKZUmGcRqKGGPgtEQQAzGR8hQ59fAmhJHSAagigJ4E7GPWRXOYC6owAd1JM6wDQPADyMWUqZRMqmAojHp1Vn6EQQEgUNMJLnUjMyJsM49wygBkAPw9dVFwXRkncCIIW3GRgoTQUZn6HxCMAFEFd8TwEQ78X4rHbILoAUmeT+RFG4UhQ6MiIAE4W/UsYFjuVjAIa2nIY4q1R0GFtQWG3E84lqw2GO2QOoCKBVu0BAPgDSU0eUDjjQenNkV/AW/pWChhpMTelo1a64AOKM30vk18GzTHXCNtI/Knz3DFBgsUqBGIjTInXRY1yA9xkVoqW5tVq3pDR9A0hfF5BSARmVnh7RMDCaIdcNgbPBkgzn1Bu+SfIEFSpSBmkxyrMicb0fAEuCZrWnN89veA/4XcakrPcjBWzkTuLjlbfTQPOlBhz+HwkqqPXmPQDdrQItxE1moGof1S74j/8txk8EHhTQrAE8qlwfqS5yukm1x/rAJ9Jiaa6nyATqD78aUVBhFo8b1V4DdTXdCW+IxA1zB4JhiOhZMEWO1HqnvdoHZ4FAMIhV9REF8FiUm0jsYPEJx/Fm/N8OhH90HI9YRHesWbXXZwAShU8qThe7H8YAuJmw5yOd989uRINKRTJAhoF8jbqrHKfeCYdIISZfSq26bk/K+yO3YvfKrVgiwQBHnwt8ynPB25+M8hceTt/ybPhnryJ78+tLgAEAuCFyiQgQB30AAAAASUVORK5CYIJZHYeC0gIAAA==&lt;/string&gt;</p><p>&lt;/dict&gt;</p><p>&lt;/plist&gt;</p></div><div><br></div>', '由于使用程序逐一设置参数，每次执行程序来查看效果速度比较慢，调完一个特效可能要重新运行程序上百次。所有需要使用粒子编辑器，之前提高的粒子编辑器由于需要下载且保存文件的时候经常出问题，这里我们使用在线的粒子编辑器，地址为：http://www.effecthub.com/particle2dx。 调试粒子务必耐心，仔细思考每个参数每次变化，为什么效果会有这样或那样的变化。使用这个在线工具调试完自…', '20150816001111', '20150821145252', '', NULL, '1', '1', '', '15');
INSERT INTO `content` VALUES   ( '46', '10', '使用笔刷制作游戏中的特效', '/upload/20150818145013340.png', '使用笔刷制作游戏中的特效', '<div>使用笔刷制作一些游戏中的效果可以起到事半功倍的效果。根据需要下载需要的笔刷特效，导入PS中即可。特此记<span style=\"line-height: 1.42857143;\">下导入流程，以供参考。</span></div><div><img src=\"/upload/20150818145013340.png\" style=\"width: 212px;\"></div><div><br></div><div><img src=\"/upload/20150818145019254.png\" style=\"width: 386px;\"><br></div><div><br></div><div>有一种gbr后缀格式的笔刷，需要用GIMP（http://www.gimp.org/downloads/）打开，然后导出为png文件。然后在<span style=\"line-height: 1.42857143;\">PS中打开PNG文件 然后选择 编辑-定义画笔预设，即可将png转为PS的笔刷。这里是已经导出的一张喷射光的笔刷</span><span style=\"line-height: 1.42857143;\">png。</span></div><div><img src=\"/upload/20150818145243308.png\" style=\"width: 299px;\"></div><div>调整画笔的角度：</div><div>选择任意一个画笔，然后在 窗口--画笔 中调整</div><div><br></div><div><img src=\"/upload/20150818152221848.png\" style=\"width: 258px;\"><br></div><div><br></div><div><br></div><div><br></div>', '使用笔刷制作一些游戏中的效果可以起到事半功倍的效果。根据需要下载需要的笔刷特效，导入PS中即可。特此记下导入流程，以供参考。有一种gbr后缀格式的笔刷，需要用GIMP（http://www.gimp.org/downloads/）打开，然后导出为png文件。然后在PS中打开PNG文件 然后选择 编辑-定义画笔预设，即可将png转为PS的笔刷。这里是已经导出的一张喷射光的笔刷png。调整画笔的角度：…', '20150818145320', '20150821150440', '', NULL, '1', '1', '', '3');

delete from msgbook;

delete from replies;
INSERT INTO `replies` VALUES   ( '1', '0', '66.249.65.69', '', '20150710074237', '0', '1');

delete from rssfeeds;
INSERT INTO `rssfeeds` VALUES   ( '1', 'CSDN最新资讯', 'http://www.csdn.net/article/rss_lastnews', '20150825111655', '20150825111655', '1', '5', '0');
INSERT INTO `rssfeeds` VALUES   ( '2', '小众软件', 'http://feed.appinn.com/', '20150825111711', '20150825111711', '1', '5', '0');
INSERT INTO `rssfeeds` VALUES   ( '3', '36氪', 'http://36kr.com/feed', '20150825111718', '20150825111718', '1', '5', '0');
INSERT INTO `rssfeeds` VALUES   ( '4', '互联网的一些事-关注互联网产品管理，交流产品设计、用户体验心得', 'http://feed.yixieshi.com/', '20150825111730', '20150825111730', '1', '5', '0');
INSERT INTO `rssfeeds` VALUES   ( '5', '梅花网－营销者的信息中心', 'http://www.meihua.info/feed', '20150825133416', '20150825133416', '1', '5', '0');
INSERT INTO `rssfeeds` VALUES   ( '7', '互联网的那点事', 'http://www.alibuybuy.com/feed', '20150826110320', '20150826110320', '1', '5', '0');

delete from siteparas;
INSERT INTO `siteparas` VALUES   ( 'logo', 'logo.png');
INSERT INTO `siteparas` VALUES   ( 'name', '比特核 - 视野');
INSERT INTO `siteparas` VALUES   ( 'keywords', '比特核');
INSERT INTO `siteparas` VALUES   ( 'description', '比特核');
INSERT INTO `siteparas` VALUES   ( 'tpl_root', 'view/template/default');
INSERT INTO `siteparas` VALUES   ( 'tpl_name', 'default');
INSERT INTO `siteparas` VALUES   ( 'accstat', 'PHNjcmlwdD4KdmFyIF9obXQgPSBfaG10IHx8IFtdOwooZnVuY3Rpb24oKSB7CiAgdmFyIGhtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7CiAgaG0uc3JjID0gIi8vaG0uYmFpZHUuY29tL2htLmpzPzdkMzFkOWZhNjlmODAzNDZkODMxZTcwN2Y2YmExMTQ5IjsKICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKVswXTsgCiAgcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZShobSwgcyk7Cn0pKCk7Cjwvc2NyaXB0Pgo=');
INSERT INTO `siteparas` VALUES   ( 'notice', '');
INSERT INTO `siteparas` VALUES   ( 'headimg', '');
INSERT INTO `siteparas` VALUES   ( 'homemaxnum', '50');
INSERT INTO `siteparas` VALUES   ( 'newmaxnum', '10');
INSERT INTO `siteparas` VALUES   ( 'topmaxnum', '');
INSERT INTO `siteparas` VALUES   ( 'commentswitch', '1');
INSERT INTO `siteparas` VALUES   ( 'commentdspnum', '10');

delete from slider;

delete from users;
INSERT INTO `users` VALUES   ( '1', NULL, 'admin', 'Administrator', '1', NULL, 'e941e5415b04c5babd4bda73293ced93', NULL, NULL, NULL, NULL);

delete from words;

